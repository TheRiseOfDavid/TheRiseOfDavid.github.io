<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>惠特科技產學合作</title>
    <url>/2020/05/05/computer_image_teach/</url>
    <content><![CDATA[<h2 id="主要"><a href="#主要" class="headerlink" title="主要"></a>主要</h2><p>此網頁主要是在幫助大衛在 惠特科技專案一 期間中所遇到的 圖像演算法 問題。</p>
<p>並非教學用，但學習資源會在這並透過我加以整理。</p>
<ol>
<li>Laplace <ul>
<li><a href="https://blog.csdn.net/fengbingchun/article/details/79321200" target="_blank" rel="noopener">图像边缘检测之拉普拉斯(Laplacian)C++实现</a></li>
<li><a href="https://blog.csdn.net/qq_38131594/article/details/80776367" target="_blank" rel="noopener">拉普拉斯边缘检测</a></li>
<li><a href="https://blog.csdn.net/u013580497/article/details/46822121" target="_blank" rel="noopener">【数字图像处理之三】拉普拉斯边缘检测算法</a> </li>
<li><a href="https://medium.com/@sourabhjigjinni/install-opencv-4-0-0-for-c-windows-7-10-code-blocks-tdm-gcc-64-dff65addf162" target="_blank" rel="noopener">Install OpenCV 4.1.0 for C++, Windows 7/10, Code::Blocks</a></li>
<li><a href="https://stackoverflow.com/questions/38834729/cmake-libintl-8-dll-is-missing-from-your-computer/56814576?fbclid=IwAR1nQoYHNKFja-ZoX-QtfzP27IC5DVMTIDtQfW-TnBf3qi3mtPF2gSxBfIg" target="_blank" rel="noopener">CMAKE libintl-8.dll is missing from your computer</a></li>
<li><a href="https://debbiedbaby.pixnet.net/blog/post/426657881" target="_blank" rel="noopener">【c#】 emgucv 設定</a></li>
<li><a href="https://dotblogs.com.tw/april_notes/2019/05/14/cinque" target="_blank" rel="noopener">EMGU 與 Visual studio 的裝設方法 (範例為 x64 / Release )</a></li>
<li><a href="https://dotblogs.com.tw/v6610688/2013/12/25/emgucv_cvinvoke_typeinitailization_exception?fbclid=IwAR1f5XwXNiYp_CEC76fbU5y1NgStfWvcYIlzY-GFJatk_2DIKteiLWdxwFs" target="_blank" rel="noopener">[EmguCV]CvInvoke的型別初始化設定發生例外 (CvInvoke TypeInitialization Exception) 處理</a></li>
<li><a href="https://me1237guy.pixnet.net/blog/post/61614517" target="_blank" rel="noopener">Emgu CV: 基礎影像容器Mat</a></li>
<li><a href="http://dangerlover9403.pixnet.net/blog/post/213895974?fbclid=IwAR24_9mIqb5VJyXx2EAVd9fq2wcx1WpJW78pm1IdShUxSEQrSPhcagdphRo" target="_blank" rel="noopener">[教學]C# EmguCV教學-圖像輪廓處理方式-拉普拉斯(Laplace)</a></li>
<li><a href="http://dangerlover9403.pixnet.net/blog/post/213568605-%5B%E6%95%99%E5%AD%B8%5Dc%23-emgucv---%E5%BB%BA%E7%BD%AE%E7%92%B0%E5%A2%83" target="_blank" rel="noopener">[教學]C# EmguCV - 建置環境</a></li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>學習筆記</category>
      </categories>
      <tags>
        <tag>產學合作</tag>
      </tags>
  </entry>
  <entry>
    <title>PS 快速將底層顏色替換</title>
    <url>/2020/07/17/PS-replace-color/</url>
    <content><![CDATA[<blockquote>
<p>此文章記錄快速在 PS 將底層顏色替換方法 </p>
</blockquote>
<a id="more"></a>

<h2 id="問題描述"><a href="#問題描述" class="headerlink" title="問題描述"></a>問題描述</h2><p>這張圖片沒有圖層讓我去修改背景顏色！，那這時候我要怎麼做才能快速修改呢?</p>
<h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><p>使用 PS 功能中的<strong>取代顏色</strong></p>
<p>步驟如下(粗體字代表為需要點擊)：</p>
<ol>
<li><strong>影像</strong></li>
<li><strong>調整</strong></li>
<li><strong>取代顏色</strong></li>
<li>接下來你一定會做！</li>
</ol>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>PhotoShop 是我最喜歡也是最擅長的編輯圖片軟體了，它的功能到現在我都還沒完全摸會，希望我能夠好好學會他、精熟他!</p>
]]></content>
      <categories>
        <category>學習筆記</category>
      </categories>
      <tags>
        <tag>PhotoShop</tag>
      </tags>
  </entry>
  <entry>
    <title>甚麼是 RESTAPI ?</title>
    <url>/2020/07/23/API/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>此文章講述於 RESTAPI 的大概使用方法與使用時機，並沒有詳細解釋，詳細解釋還需讀閱他人優秀文章</p>
</blockquote>
<a id="more"></a>

<h2 id="甚麼是-API"><a href="#甚麼是-API" class="headerlink" title="甚麼是 API?"></a>甚麼是 API?</h2><p>就是別人把資料給你，你再把那些資料處理成資訊後再給別人，然後是透過 url 來進行交換的入口</p>
<h2 id="API-Method"><a href="#API-Method" class="headerlink" title="API Method"></a>API Method</h2><ul>
<li>POST：新增</li>
<li>GET：讀取</li>
<li>PUT：修改（修改整份文件）</li>
<li>PATCH：修改（修改其中幾個欄位）</li>
<li>DELETE：刪除</li>
</ul>
<h2 id="API-回傳資料"><a href="#API-回傳資料" class="headerlink" title="API 回傳資料"></a>API 回傳資料</h2><table>
<thead>
<tr>
<th>狀態</th>
<th>英文</th>
<th>中文</th>
<th>說明</th>
</tr>
</thead>
<tbody><tr>
<td>200</td>
<td>OK</td>
<td>完成</td>
<td>通常在 get 時使用</td>
</tr>
<tr>
<td>201</td>
<td>Created</td>
<td>資源新增成功</td>
<td>通常在 post 時使用</td>
</tr>
<tr>
<td>202</td>
<td>Accepted</td>
<td>請求接受，但在處理中</td>
<td>有可能會失敗</td>
</tr>
<tr>
<td>204</td>
<td>No Content</td>
<td>請求成功，但沒有返回內容</td>
<td>通常用在刪除或修改</td>
</tr>
<tr>
<td>400</td>
<td>Bad Request</td>
<td>錯誤請求</td>
<td>通常有欄位未填寫或填寫錯誤</td>
</tr>
<tr>
<td>401</td>
<td>Unauthorized</td>
<td>使用者沒有進行驗證</td>
<td></td>
</tr>
<tr>
<td>403</td>
<td>Forbidden</td>
<td>使用者已經登入，但沒有權限操作</td>
<td></td>
</tr>
<tr>
<td>410</td>
<td>Gone</td>
<td>資源已經過期</td>
<td></td>
</tr>
<tr>
<td>500</td>
<td>Internal Server Error</td>
<td>伺服器端錯誤</td>
<td></td>
</tr>
<tr>
<td>502</td>
<td>Bad Gateway</td>
<td>伺服器某個服務沒有被正確執行</td>
<td></td>
</tr>
<tr>
<td>503</td>
<td>Service Unavailable</td>
<td>伺服器臨時維護或即將死亡，暫時無法處理請求</td>
<td></td>
</tr>
<tr>
<td>504</td>
<td>Gateway Timeout</td>
<td>伺服器上服務回應</td>
<td></td>
</tr>
</tbody></table>
<h2 id="觀念釐清："><a href="#觀念釐清：" class="headerlink" title="觀念釐清："></a>觀念釐清：</h2><h3 id="POST-跟-GET-主要差在哪裡呢？"><a href="#POST-跟-GET-主要差在哪裡呢？" class="headerlink" title="POST 跟 GET 主要差在哪裡呢？"></a>POST 跟 GET 主要差在哪裡呢？</h3><p>根據我的經驗(對不起我經驗連一年都沒有滿 QQ)，我盡可能來進行解釋。</p>
<h4 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h4><ul>
<li>比較像是明信片，只能傳送簡單資訊。</li>
<li>通常會將你傳送的資訊放在 url 之後。</li>
<li>沒有 body，畢竟明信片也沒有 Body XD。</li>
<li>如果有壞蛋想要看你寫甚麼，只要抓到你傳送的 url 就好，安全性較低。<h4 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h4></li>
<li>比較像是信封，可以傳送複雜資訊。</li>
<li>通常是將你 post 的資訊放入 body 內。</li>
<li>比起 get 有保障些，你傳送的資訊較沒有那麼容易就能被他人得知。</li>
</ul>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結:"></a>參考連結:</h2><p><a href="https://medium.com/%E5%B0%8F%E5%B0%8F%E8%AA%AA%E6%9B%B8%E4%BA%BA/%E7%B6%B2%E9%A0%81get-%E8%88%87-post-%E5%B7%AE%E7%95%B0-%E7%A7%91%E6%99%AE%E5%A3%B9%E9%BB%9E%E9%80%9A-94cbaa666fdb" target="_blank" rel="noopener">網頁Get 與 Post 差異 (科普壹點通)</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>API 其實蠻好用，只是有點偏複雜。還需要多加磨練，我也要能夠讓自己變得更優秀，也謝謝各位前輩的努力。<br>也謝謝 台灣STEAM基礎教育聯盟給予我機會使我成長，對不起我有時候速度拖太慢。</p>
]]></content>
      <categories>
        <category>學習筆記</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>RESTAPI</tag>
      </tags>
  </entry>
  <entry>
    <title>透過 ngrok 來讓自己的電腦成為 server</title>
    <url>/2020/07/24/ngrok-experience/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>如何讓自己的電腦變成 server，來方便自己測試或架設!<br>使用 ngrok 就對搂~</p>
</blockquote>
<a id="more"></a>

<h2 id="安裝教學"><a href="#安裝教學" class="headerlink" title="安裝教學"></a>安裝教學</h2><p>先去官網 <a href="https://ngrok.com/download" target="_blank" rel="noopener">下載ngrok</a>，安裝完成後將 exe，拉出來並執行。<br>接下來去官網登入，沒有就註冊八~</p>
<h2 id="使用教學"><a href="#使用教學" class="headerlink" title="使用教學"></a>使用教學</h2><p>這官網都教你且教導的一定比我還好，就交給官網拉~<br>不過如果記住如果你的端口 設置為 y，就要改端口</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;ngrok http y</span><br></pre></td></tr></table></figure>

<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>真的要謝謝各位科技前輩讓我學會這些事物，也要謝謝基礎教育聯盟讓我有機會學習新事物，真的很謝謝陪我的各位！</p>
]]></content>
      <categories>
        <category>學習筆記</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>ngrok</tag>
        <tag>server</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemK Assigning Frequencies</title>
    <url>/2020/08/18/ICPC/2017-ICPC-Asia-Taipei-Hualien-Regional-Pk/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給你一張圖，這圖不會超過 25 個 Node，試問能不能用 3 個顏色塗滿所有點但相鄰的點不能有相同顏色。<br>題目提示: 測資不會超過 85 筆。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>如果對暴力搜尋法有一定了解的人，應該看到題目就會馬上想到暴力搜尋法了吧！<br>可惜我不是，我用了一個奇怪的想法然後還沒解開…。(有興趣的可以往下滑)</p>
<h3 id="甚麼時機該用暴力搜尋法？"><a href="#甚麼時機該用暴力搜尋法？" class="headerlink" title="甚麼時機該用暴力搜尋法？"></a>甚麼時機該用暴力搜尋法？</h3><ol>
<li>題目有告訴你測資不超過幾筆，但那數字卻不大</li>
<li>圖也不大，相較於其他圖論的題目</li>
<li>明顯看到他的測資基本上不大於 100 or 1000，應題目而定</li>
</ol>
<p>由於是暴力搜尋法，也沒有甚麼好講，但他有一地方神奇就在於遞迴。讓我來稍微解說下:</p>
<h3 id="依序新增一點，然後塗色"><a href="#依序新增一點，然後塗色" class="headerlink" title="依序新增一點，然後塗色"></a>依序新增一點，然後塗色</h3><p>這是我認為最為有趣的地方，也是最困擾我的地方。一開始我認為這遞迴非常好寫，輕輕鬆鬆，開始寫以後才證明我錯了，在這邊呼籲各位不要精神 AC 阿，真的，魔鬼藏在細節裡。</p>
<p>由於他依序新增一點，所以她其實在過程中，並不是完整的圖而是分裂的，但沒關係。不影響我們作答，因為之後連起來時就會發現顏色一樣而再將點更改顏色。如果都不行就可以直接 FALSE。</p>
<p>塗色，你是要幫下一個點選色。這是遞迴裡面最有魅力的地方，明明是 a 的遞迴 time，但卻幫 b 做好顏色選擇。你可能會覺得很奇怪？<br>但你仔細想想，如果不這樣做的話，那你在 a 的遞迴才幫 a 做塗色，那複雜度雖然一樣，但程式碼就非常亂了，因為要考慮你是因為 3 個顏色都不行呢？還是這顏色可以通過。這兩種情況下，你可能還需要一個 flag 之類的東西來判斷，不好看。太醜了。<br>但這點我也是觀看別人程式碼，我才懂得。寫這份文件的人果真大神。</p>
<h3 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h3><p>我在解這題時，是閱讀觀看這位<a href="https://www.twblogs.net/a/5b8ee83f2b7177188348a611" target="_blank" rel="noopener">大神</a>才得以解出的，謝謝他。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 30</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> path[MAXN][MAXN] = &#123;&#125; ;</span><br><span class="line"><span class="keyword">int</span> node[MAXN] = &#123;&#125; ;</span><br><span class="line"><span class="keyword">int</span> n , p , N ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; v ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(path[v][i] &amp;&amp; node[v] == node[i])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(n == v<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; <span class="number">3</span> ; j++)&#123;</span><br><span class="line">        node[v+<span class="number">1</span>] = j ;</span><br><span class="line">        <span class="keyword">if</span>(DFS(v+<span class="number">1</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span> ;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> _i , _j ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N ;</span><br><span class="line">    <span class="keyword">while</span>(N--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; p ;</span><br><span class="line">        <span class="comment">//clear</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; n ; j++)</span><br><span class="line">                path[i][j] = <span class="number">0</span> ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; p ; i++ )&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; _i &gt;&gt; _j ;</span><br><span class="line">            path[_i][_j] = <span class="number">1</span> ;</span><br><span class="line">            path[_j][_i] = <span class="number">1</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(DFS(<span class="number">0</span>))</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Y"</span> ;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"N"</span> ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="我再看到此題的想法"><a href="#我再看到此題的想法" class="headerlink" title="我再看到此題的想法:"></a>我再看到此題的想法:</h2><p>這裡是廢文。如果不想要了解我的想法可以直接略過，因為我的想法是錯誤的。但如果想看看我的思考邏輯就建議看看。</p>
<p>我一開始看到這題目時，就想到簡單 2 顏色塗色問題，想說直接用 BFS，搞定！但絕對沒有那麼簡單啊 XD，於是我就想出一方法關於我要怎麼解出這題目。<br>怎麼做呢，用有點類似於 DP 的方式，開一 struct，裡面放入一陣列代表有 3 顏色，只要他相鄰的點有被用過的顏色，那此點就不能用這顏色，只要附近的點都將 3 種顏色都用過就輸出 N，是不是覺得我的想法還不賴！當初的我也覺得我的想法很不錯，所以就用了這方式。</p>
<p>寫出來後，丟去 judge，卻發現是錯的！可是錯在哪裡我不知道…，非常討厭。於是我就去問了我的朋友們，但我的朋友們似乎也不太清楚，於是就問了奧林匹亞銅牌國手，他說出了一句令我震驚的話。<br><img src="./images/2017-ICPC-Asia-Taipei-Hualien-Regional-Pk/1.jpg" alt=""></p>
<p>原來剛剛的我試圖在嘗試不可能的任務阿，怕。差點我就能把 3 塗色問題的演算法名稱掛上大衛了www，沒，開玩笑的。於是我就也放棄了此題，使用暴力搜尋法 ಥ⌣ಥ。</p>
<p>下面是我寫的程式碼(我的想法)，有興趣的可以拿去研究看看www。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; path[<span class="number">30</span>] ;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt; nodes ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N , n , p  ;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> color[<span class="number">3</span>] = &#123;&#125; ;</span><br><span class="line">    <span class="keyword">int</span> use = <span class="number">0</span> ;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</span><br><span class="line">        color[<span class="number">0</span>] = <span class="number">0</span> ;</span><br><span class="line">        color[<span class="number">1</span>] = <span class="number">0</span> ;</span><br><span class="line">        color[<span class="number">2</span>] = <span class="number">0</span> ;</span><br><span class="line">        use = <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;node[<span class="number">30</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">choose</span><span class="params">(<span class="keyword">int</span> i , <span class="keyword">int</span> k )</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; path[i].<span class="built_in">size</span>() ; j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!node[path[i][j]].use)&#123;</span><br><span class="line">            nodes.push_back(path[i][j]);</span><br><span class="line">            node[path[i][j]].use = <span class="number">1</span> ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(node[path[i][j]].color[k])</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> i )</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span> ; k &lt; <span class="number">3</span> ; k++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(node[i].color[k])</span><br><span class="line">            <span class="keyword">continue</span> ;</span><br><span class="line">        <span class="keyword">if</span>(choose(i,k))&#123;</span><br><span class="line">            node[i].color[k] = <span class="number">1</span> ;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BFS</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//node[0].color[0] = 1 ;</span></span><br><span class="line">    nodes.push_back(<span class="number">0</span>) ;</span><br><span class="line">    node[<span class="number">0</span>].use = <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">while</span>(nodes.<span class="built_in">size</span>())&#123;</span><br><span class="line">        <span class="keyword">if</span>(!check(nodes.front()))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">        nodes.pop_front();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> i , j ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N ;</span><br><span class="line">    <span class="keyword">while</span>(N--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; p ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//clear</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">            path[i].<span class="built_in">clear</span>() ;</span><br><span class="line">            node[i].<span class="built_in">clear</span>() ;</span><br><span class="line">        &#125;</span><br><span class="line">        nodes.<span class="built_in">clear</span>() ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//bulid</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span> ; k &lt; p ; k++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; i &gt;&gt; j ;</span><br><span class="line">            path[i].push_back(j) ;</span><br><span class="line">            path[j].push_back(i) ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(BFS())</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Y"</span> ;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"N"</span> ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*//debug</span></span><br><span class="line"><span class="comment">        for(int i = 0 ; i &lt; n ; i++)&#123;</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; i &lt;&lt; ' ' &lt;&lt; node[i].color[0] &lt;&lt; ' ' &lt;&lt; node[i].color[1] &lt;&lt; ' ' &lt;&lt; node[i].color[2] &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ICPC</tag>
        <tag>程式解題</tag>
        <tag>2017-ICPC-Asia-Taipei-Hualien-Regional</tag>
        <tag>暴力搜尋法</tag>
      </tags>
  </entry>
  <entry>
    <title>C#_大衛製作套件</title>
    <url>/2020/07/15/C_sharp/Csharp_gauss/</url>
    <content><![CDATA[<blockquote>
<p>此套件為大衞製作，方便未來的我可以直接套用套件。<br>若要使用，在 VS 上加入參考加入 gauss.dll 即可使用</p>
</blockquote>
<a id="more"></a>


<h2 id="C-套件"><a href="#C-套件" class="headerlink" title="C# 套件"></a>C# 套件</h2><p>此套可解決於多元一次方程式組解，快速且有效率解法<br>P.S. 技術僅限到更新日期</p>
<p><a href="https://drive.google.com/file/d/1GB_UtHQ0Ja1pWHgObjNUCXonvex5NknS/view?usp=sharing" target="_blank" rel="noopener">gauss 套件下載</a></p>
<p><strong>必須加入 using guass;</strong></p>
<h3 id="高斯消去法"><a href="#高斯消去法" class="headerlink" title="高斯消去法"></a>高斯消去法</h3><h4 id="宣告物件"><a href="#宣告物件" class="headerlink" title="宣告物件"></a>宣告物件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gauss test &#x3D; new gauss(int n ,doublue[,]  douGauss , double[] ans )</span><br></pre></td></tr></table></figure>

<p>n = 有多少階數<br>douGauss = 所有行係數的陣列<br>ans = 每元的係數</p>
<h4 id="prepare-測試用方法"><a href="#prepare-測試用方法" class="headerlink" title="prepare()  測試用方法"></a>prepare()  測試用方法</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gauss.prepare() ;</span><br></pre></td></tr></table></figure>

<p>透過 console.wrire 來輸入 n , douGauss , ans<br>方便使用者加入 gauss 中的變數</p>
<h4 id="elimindation-高斯消元法"><a href="#elimindation-高斯消元法" class="headerlink" title="elimindation() 高斯消元法"></a>elimindation() 高斯消元法</h4><p><a href="https://drive.google.com/file/d/1GB_UtHQ0Ja1pWHgObjNUCXonvex5NknS/view?usp=sharing" target="_blank" rel="noopener">高斯消元法</a>說明</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gauss.elimindation() ;</span><br></pre></td></tr></table></figure>

<h4 id="seidel-method-賽德爾疊代-and-SOR-超鬆弛迭代法"><a href="#seidel-method-賽德爾疊代-and-SOR-超鬆弛迭代法" class="headerlink" title="seidel_method() 賽德爾疊代 and SOR 超鬆弛迭代法"></a>seidel_method() 賽德爾疊代 and SOR 超鬆弛迭代法</h4><p><a href="https://www.maa.org/press/periodicals/loci/joma/iterative-methods-for-solving-iaxi-ibi-gauss-seidel-method" target="_blank" rel="noopener">賽德爾疊代</a>說明<br>在 2020/06/08 時將 seidel_method() 優化，現在已經在任何情況下比消元速度還快</p>
<p><a href="http://marta.certik.cz/NM/Asor.pdf" target="_blank" rel="noopener">超鬆弛迭代法</a>說明<br>在 2020/07/15 時由於 SOR 是找 omega 來進行鬆弛(P.S. seidel_method() 為 1)，由於 omega 在每個多元一次方成組解時 omega 量為不固定，要找出對應的 omega 計算十分複雜(且我尚未讀熟，如果有大佬懂可以教我嗎 QQ) ，於是我目前先將 omega 定為 1.1。</p>
<p>Q: 為甚麼 omega 是 1.1?<br>A: 我曾訂過 0.658 , 1.658 發現都不如預期，在大多數情況下多元一次方成組 omega 大多分布在 1.1 ~ 1.3 之間，於是我選擇 1.1，如果大家不喜歡的話可以在裡面帶自訂數值。</p>
<p>Q: it 是甚麼? <del>可以吃嗎</del><br>A: 不行啦， it 是自訂迭代次數，你可以自己設定想迭代幾層，預設 -1 為完美迭代，即答案必求到絕對正確。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gauss.Seidel_method(double omega &#x3D; 1.1 , int it &#x3D; -1);</span><br></pre></td></tr></table></figure>

<h3 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h3><p>在開發　gauss 套件時，其實花了很多時間在 Debug 與 效率優化，由於分手的關係，這真的是非常痛苦的過程阿…。工程師需要讓自己不被情緒給影響真的有些許的困難，我們也要能夠在 coding 過程中注意到女朋友，不可以讓女生感覺到自己已經不在意他，消耗愛的能量，導致愛情與悲劇收場。</p>
<p>然後再鑽寫程式的過程中，我發現出了一個極大的問題。使我的「賽德爾疊代」應該要能夠比「高斯消元法」速度還要快，但因為原先我的「賽德爾疊代」在陣列方式處理不佳，過程中浪費大量效率使我矩陣在 &gt; 500 時速度會比「高斯消元法」過慢。</p>
<p>因為在 seidel_method 中每次都需要 k+1 的迭代，於是原先我的程式寫法是準備一個巨大的迭代陣列，但我發現 二維陣列 當索引值太大時，查找速度會過慢，在大量迭代之下就會將此問題放大。於是後來將迭代陣列弄成 二維，類似於 array[2][n] (因為每次迭代只需要 k+1 , k )，相對來說查找速度就快很多。在 500*500的陣列中，原先使用 seidel_method 未優化需使用 578s，優化後只需要 2s，二維陣列查找速度。</p>
<h2 id="更新日誌"><a href="#更新日誌" class="headerlink" title="更新日誌"></a>更新日誌</h2><p>2020-05-18 14:30:21 - 完成 gauss 套件、 高斯消元法<br>2020-05-30 20:34:28 - 完成 seidel_method<br>2020-06-08 15:58:42 - 完成 seidel_method 優化<br>2020-07-15 00:23:42 - 將 Successive Over Relaxation 的 omega 鎖定為 1.1</p>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>套件說明</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemB Binary Tree</title>
    <url>/2020/06/15/ICPC/2019-2020-ICPC-Asia-Hong-Kong-Regional-Contest-Pb/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給 ALICE and BOB 一個遊戲，這個遊戲是他們要不斷刪除樹的節點，但有規定，刪除的節點必定是完整二元樹。試問，誰一定必勝？</p>
<p>完整二元樹定義：</p>
<ol>
<li>root 必須要有 left node and right node</li>
<li>是樹的最後節點</li>
</ol>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><blockquote>
<p>雖然叫水題，但是卻沒辦法解出來，假水題阿 QQ<br>然後香港的題目真的好難，第一題我用 20 min 都無法想出來，於是我觀察別人的 Blog 才能將此題解出。</p>
</blockquote>
<p>此題可以用奇偶數可以直接判斷 Alice and Bob 誰是贏家！很神奇吧</p>
<p>為甚麼呢？<br>因為 ALICE 與 BOB 都只能砍掉「完整二元樹」，而在這裏的完整二元樹節點都會是「奇數」，完整二元樹的樹節點必定是 1 , 3 , 5 , 7 …..。然後透過數學歸納我們可以歸納出兩個奇數 (ALICE and BOB 各畫一次 )相加必等於偶數。</p>
<p>於是當「節點」為奇數時必定是 ALICE 勝，因為接下來換 BOB，但如果 BOB 可以畫就必定是偶數。<br>反之，當「節點」為偶數時必定是 BOB 勝，由前句推出</p>
<p>P.S. <a href="https://www.cnblogs.com/st1vdy/p/12444426.html" target="_blank" rel="noopener">觀看此 Blog 才學習到的</a><br>小小的題外話，我可以在 cin &gt;&gt; n 時即可輸出答案，不一定要等到將這筆測資完整 cin 完全時在輸出。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t ;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a , b , n ;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">        <span class="keyword">if</span>(n % <span class="number">2</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Alice\n"</span> ;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Bob\n"</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>2019_2020_ICPC_Asia_Hong_Kong_Regional_Contest</tag>
        <tag>ICPC</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 開超大陣列解決方法</title>
    <url>/2020/06/16/C_sharp/C-sharp-big-array/</url>
    <content><![CDATA[<h2 id="C-在一個陣列裡最多可以有多少元素阿！"><a href="#C-在一個陣列裡最多可以有多少元素阿！" class="headerlink" title="C# 在一個陣列裡最多可以有多少元素阿！"></a>C# 在一個陣列裡最多可以有多少元素阿！</h2><blockquote>
<p>根據 MSDN 預設，陣列的最大大小只能夠有 2GB， 假設此陣列為 int 時，最大元素最多只能有 \( 2^{31} /4 \)</p>
</blockquote>
<a id="more"></a>

<h2 id="那我一定要開到比這更大的陣列呢！"><a href="#那我一定要開到比這更大的陣列呢！" class="headerlink" title="那我一定要開到比這更大的陣列呢！"></a>那我一定要開到比這更大的陣列呢！</h2><p>別擔心，還是會有些解決之道的，如果你在 64 位元的電腦就可以解決了！只需要下方兩步驟即可完成。<br>但還是有些限制，假設 RAM 夠大，將可以使陣列擁有 40 億 elements。如果 RAM 沒辦法負荷 40 億 elements，則只能到負荷最大值。</p>
<ol>
<li><p>將電腦預設 32bits 建置環境改成 64 bits<br> 建置 &gt; 組態管理員 &gt; 平台 &gt; 新增 &gt; 新平台 &gt; x64，剩下按確認就可以了。</p>
<img src="/images/C_sharp_math_2.jpg" alt="C_sharp_math_2.jpg">
</li>
<li><p>在 config 新增 gcAllowVeryLargeObjects 來新增<br> 在 packages.config 新增 gcAllowVeryLargeObjects 即可</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">runtime</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">gcAllowVeryLargeObjects</span> <span class="attr">enabled</span>=<span class="string">"true"</span> /&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">runtime</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<img src="/images/C_sharp_math_1.png" alt="C_sharp_math_1.png">

</li>
</ol>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>即使，未來科技再進步，還是必須要有好的資料結構與演算法，若豪不在意的不斷增加記憶體與處理器只是對之前那些努力設計電腦的人不敬，也會對自家的電腦造成很大的負擔QQ<br>這是必殺技，請小心慎用，不要上癮。</p>
<h3 id="更新日誌"><a href="#更新日誌" class="headerlink" title="更新日誌"></a>更新日誌</h3><p>2020-06-22 14:45:24 - 錯誤資訊修改</p>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemD Defining Labels</title>
    <url>/2020/07/03/ICPC/2019-2020-ICPC-Asia-Hong-Kong-Regional-Contest-Pd/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>給你 x 進制 y 值且他是試算表模式，如:A,B,..,Z,AA,AB..，請嘗試將他轉回 10 進制</p>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>是我太久不會寫演算法，還是我變爛了，這題我花了兩小時才解決問題。QQ </p>
<p>我們先來看十進制的試算表模式與正常十進位模式</p>
<blockquote>
<p>試算表模式: 0 1 2 3 4 5 6 7 8  9 00 01 02 …<br>十進位模式: 1 2 3 4 5 6 7 8 9 10 11 12 13 …</p>
</blockquote>
<p>在試算表 0 時十進位為 1 相差 1，在試算表 00 時十進位為 11 相差 11(這裡只兩個 1 )，這讓我們找出一邏輯，只要試算表的位數在多新增一位時，就會在每位數相差 1。於是我們在多計算一位數時就先 -1，以求正確答案。<br>要記住轉換進位的時候先出來的數值是尾數，因為是透過不斷迭代相除完成的。<br>其餘剩下就是進制轉換了，用遞迴式表達:</p>
<ul>
<li>\(f(x,y)\)<ul>
<li>\(\text{if( x = 0 ) return ;} \)</li>
<li>\(\text{ else { f(x%y,y) , 10 - y + x % y } } \)</li>
</ul>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x , <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!x)</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    x--;</span><br><span class="line">    dfs(x/k , k );</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="number">10</span> - k + x % k ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> t , x , k ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t ;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; k &gt;&gt; x ;</span><br><span class="line">        dfs(x,k);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>math theorm</tag>
        <tag>2019_2020_ICPC_Asia_Hong_Kong_Regional_Contest</tag>
        <tag>ICPC</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemD Tapioka</title>
    <url>/2020/05/14/ICPC/2019-ICPC-Asia-Taipei-Hsinchu-Regional-Pd/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給你一行話，請不要輸出 “bubble” 、 “tapioka”<br>格式有特別要求，請注意。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>這題你要是不會，是不是應該要撞豆腐了?</p>
<p>字串透過陣列求出，然後加上空白即可</p>
<p>額外話: py 不用5行就能把他寫完吧?<br>        py 真的是程式設計師救星，所有簡單的東西都能變簡單，但是語法不習慣</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PB push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MP make_pair</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line">    <span class="comment">//freopen("out.txt" , "w" , stdout );</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="built_in">string</span> strTemp , strAns[<span class="number">5</span>] ;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; strTemp)&#123;</span><br><span class="line">        <span class="keyword">if</span>(strTemp == <span class="string">"bubble"</span> || strTemp == <span class="string">"tapioka"</span>)</span><br><span class="line">            <span class="keyword">continue</span> ;</span><br><span class="line">        strAns[index] = strTemp ;</span><br><span class="line">        index++ ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(index == <span class="number">0</span> )&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"nothing"</span> ;</span><br><span class="line">        <span class="keyword">return</span>  <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; index <span class="number">-1</span> ; i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; strAns[i] &lt;&lt; <span class="string">' '</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; strAns[index<span class="number">-1</span>] ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>ICPC</tag>
        <tag>2019_ICPC_Asia_Taipei-Hsinchu_Regional_Contest</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemG Game Design</title>
    <url>/2020/07/26/ICPC/2019-2020-ICPC-Asia-Hong-Kong-Regional-Contest-Pg/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>請設計塔防遊戲的地圖，這個地圖為一棵樹但可以超過 2 個 leaf。怪物只會從 leaf 往 root 走(即走到樹的根節點就再也不會走動)，我們將他簡單設計化，我們假設每個塔都可以完美殺死怪物，但建造塔則需要花費，請設計一張地圖 (那張地圖需要有節點與節點上的成本)，給你一數值 k，請生成一張地圖總共有 k 種最少成本的建造塔的解法 (任意一種即可)。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><blockquote>
<p>這題的想法非常有趣，我原本快要想對，但最後還是想錯方向了…<br>P.S. 如果我的分析不好，可以看此 <a href="https://www.cnblogs.com/st1vdy/p/12444426.html#1865251979" target="_blank" rel="noopener">st1vdy的 BLOG</a>，我是從他那邊得到靈感的。<br>下方說明文的 root，為整棵樹的 root。<br>x 為任意變數<br>left node 為 x 的右邊節點<br>right node 為 x 的左邊節點</p>
</blockquote>
<p>由於我們要設計一張地圖(樹)，為了方便我們簡單設計地圖，我們就定義為他是一顆二元樹。那我們接下來就是要來找一個規律來設計 k！</p>
<h3 id="初步思考"><a href="#初步思考" class="headerlink" title="初步思考"></a>初步思考</h3><p>我們先來思考哪種方式設計是最棒的，由於我們簡單設計成二元樹，於是我們先設定一算法，只有 root 為 x，其餘 node 值都為 1，且 \(x \geq  2 \)，這樣子最好算法就會有 \(k = a \cdot b \)。</p>
<p>那如果是質數呢？質數沒辦法符合那方程式阿，那只要把 \( x = 2 \)，就會再多一種算法，即\(k + 1\)，因為最小成本都是 2，如果從 root 放塔，那最小成本也還會是 2(\(因為 x = 2\))，因而多一種算法。</p>
<p><img src="/images/2019-2020-ICPC-Asia-Hong-Kong-Regional-Contest-Pg/1.jpg" alt=""></p>
<h3 id="找出問題"><a href="#找出問題" class="headerlink" title="找出問題"></a>找出問題</h3><p>我們的初步思考有一個很致命的缺點，因為他是給予我們 k，但如果要從 k 還原 a , b，如果遇到質數還需要 +1，程式碼太複雜不好維護。於是我們想出新的方法，既然可以 \(a \cdot b \)，那一定也有道理 \( a \cdot a \cdot b \)，可以推導成 \(a^{c} * b \)，但由於我們將算法簡化成程式碼好解決，就是將 \(a = 2\)，由於二元樹的特性，可以省下很多程式碼的功夫。</p>
<h3 id="新的想法"><a href="#新的想法" class="headerlink" title="新的想法"></a>新的想法</h3><p>所以我們把它從原本只有樹的 root 分兩邊然後 \(a * b \)，那我們就把每一個只要是「有連接到 leaf 的 node 的右子樹」(引號內在之後簡稱為 LN )都加入兩顆為 1 的 node，就可以達到 \( \cdot a \)的功用，剩下我們就是考慮到底要有幾個 LN，就可以湊出 k 種解法，然後如果說數字為一質數時，我們就把那 LN 的成本變成 \(LN = \text{left node} + \text{right node} \)，那如果不是質數就是 \(LN \geq \text{left node} + \text{right node} \)。</p>
<p>然後則必須思考，當 \(k = 1 \) 時我們實際上不需要 \(*2\)，於是我們只需要將那兩個 node 其中 1 節點改為 1，另一點則 \( &gt; 1 \)。但當 \( k = 2 \)時，則兩節點必要為 1。</p>
<p>下方圖片為當 k = x 時所產生的地圖與有多少解方法及選擇的點<br><img src="/images/2019-2020-ICPC-Asia-Hong-Kong-Regional-Contest-Pg/2.jpg" alt=""></p>
<h3 id="設計想法"><a href="#設計想法" class="headerlink" title="設計想法"></a>設計想法</h3><p>因為這題是不斷的進行除以 2，來生成地圖，但我們並不確定他需要幾次才能將 \( k / 2 &lt; 1\)，所以用遞迴解決，當用遞迴解決時，這遞迴需要的條件如下:</p>
<p>也就是遞迴可以解決，方程式想法如下:</p>
<ul>
<li>\(f(K) = if k &gt; 2 , 呼叫 f(k/2) + f(2) \)</li>
<li>\(if(k \leq 2) , 在右子樹加入 2 個 node\)</li>
<li>\(LN = \text{left node} + \text{right node} \)</li>
<li>\(if (k \% 2 == 0), LN +1 \)</li>
</ul>
<p>下方則是說明，對應每個方程式的說明</p>
<ul>
<li>當 \(k &gt; 2 \) 時，我們需要做 \( /2\) 這動作，但因為我們是在尋找 \( /2\) 的最好長度，於是需要再後面加入 \(f(2)\)，才能滿足 k 的要求</li>
<li>由於 k 的值小於等於 2，我們要加入 2 個 node 以滿足 \( * 2\)的動作</li>
<li>LN 會等於左節點 + 右節點，這為 K = 質數時的情況</li>
<li>如果 k 是偶數，那我們將 LN + 1，才不會多出一種解</li>
</ul>
<h3 id="觀念小釐清"><a href="#觀念小釐清" class="headerlink" title="觀念小釐清"></a>觀念小釐清</h3><p>在新的想法中，圖片最後在最後的 LN 時，左子樹也是右子樹的一種，減少程式碼撰寫麻煩。</p>
<p>Q: 為甚麼在下方的程式碼 function dfs 中是 <code>return temp</code> 而不是 <code>return value[root]</code>?<br>A: 很簡單的一個邏輯， 5 / 2 = 2 ，但 (2+1) * (2) = 6 ，回推不符合。應該還是要 2 * 2 + 1 = 5。</p>
<p>Q: 這篇講得很爛，文章主人是不是國文不好?<br>A: 這種想法的東西真的很難用文字表述，我的表達能力不好抱歉…<br>P.S. 但你可以稍微嘗試將這些用文字表達，真的不太好表達。這需要你去嘗試才知道困難處。</p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>要感謝 Bill and Entroy 先思考這題，等他們想通後，我才根據他們說給予我的指導和想法，幫助我寫出此題，不然要是自己寫應該要花比有他人指導更多的時間吧！希望我跟他們能夠一輩子都是好朋友。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 100010</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> pa[SIZE] , value[SIZE] , cnt=<span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> root )</span></span>&#123;</span><br><span class="line">    cnt++ ;</span><br><span class="line">    <span class="keyword">int</span> temp ;</span><br><span class="line">    pa[cnt] = root++ ;</span><br><span class="line">    <span class="keyword">if</span>(k &lt;= <span class="number">2</span>)&#123;</span><br><span class="line">        value[cnt] = <span class="number">3</span> - k ;</span><br><span class="line">        pa[cnt+<span class="number">1</span>] = cnt ;</span><br><span class="line">        value[++cnt] = <span class="number">1</span> ;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    temp = dfs(k/<span class="number">2</span>,root) + dfs(<span class="number">2</span>,root)  ;</span><br><span class="line">    value[root] = temp + (k % <span class="number">2</span> == <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> temp ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; k ;</span><br><span class="line">    dfs(k , <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; cnt &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= cnt ; i++)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; pa[i] &lt;&lt; <span class="string">' '</span> ;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= cnt ; i++)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; value[i] &lt;&lt; <span class="string">' '</span> ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ICPC_2019-2020_North-Western_Russia_Regional_Contest</tag>
        <tag>ICPC</tag>
        <tag>設計解題</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemC Are They All Integers?</title>
    <url>/2020/05/14/ICPC/2019-ICPC-Asia-Taipei-Hsinchu-Regional-Pc/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給你一微陣列數字(a[])，試問此陣列中是否都符合此公式 (a[i]+a[j]) / a[k] % 1 == 0 </p>
<p>如果不是，輸出 “no”。是請輸出 “yes” 。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>沒啥好說的，純操作題。</p>
<p>這題全部參加這次比賽的都有解出來呢，所以你不可以沒解出來喔。</p>
<p>小心這題犯的錯誤</p>
<ol>
<li>陣列要用 double ，不然怎樣 mod 1 都會 == 0 喔~</li>
<li>可以類似用 bubble sort的方式加速，要記得加 abs ，想必大家都知道啦。</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PB push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MP make_pair</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FB <span class="meta-keyword">if</span>(!flag) break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line">    <span class="comment">//freopen("out.txt" , "w" , stdout );</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> num[<span class="number">60</span>] ;</span><br><span class="line">    <span class="keyword">int</span> n ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num[i] ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span> , intMod ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i +<span class="number">1</span>  ; j &lt; n ; j++ )&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span> ; k &lt; n ; k++)&#123;</span><br><span class="line">                <span class="keyword">if</span>( i == k || j == k)</span><br><span class="line">                    <span class="keyword">continue</span> ;</span><br><span class="line">                intMod = <span class="built_in">abs</span>(num[i] - num[j]) % num[k] ;</span><br><span class="line">                <span class="keyword">if</span> (intMod != <span class="number">0</span> )&#123;</span><br><span class="line">                    flag = <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//debug</span></span><br><span class="line">                    <span class="comment">//cout &lt;&lt; intMod &lt;&lt; ' ' &lt;&lt; num[i] &lt;&lt; ' ' &lt;&lt; num[j] &lt;&lt; ' ' &lt;&lt; num[k] &lt;&lt; '\n' ;</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            FB;</span><br><span class="line">        &#125;</span><br><span class="line">        FB;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"yes"</span> ;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"no"</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>ICPC</tag>
        <tag>2019_ICPC_Asia_Taipei-Hsinchu_Regional_Contest</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemE The League of Sequence Designers</title>
    <url>/2020/07/18/ICPC/2019-ICPC-Asia-Taipei-Hsinchu-Regional-Pe/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>有一公式\( \max(r - l + 1 ) \cdot  \sum_{l \leq i \leq n } a_{i} , 其中 1 \leq l \leq r \leq n \)<br>題目給予一貪心演算法，但此演算法並不正確。演算法如下:<br><img src="/images/2019-ICPC-Asia-Taipei-Hsinchu-Regional-Pe/1.png" alt=""></p>
<p>給你 k , l ， k 為貪心演算法與正確解答的差距， l 為最少要生成數列的長度，請您給出一組數列能夠在正確的演算法成功輸出正確答案，也能讓貪心演算法與正確演算法的差距等於 k，如果不行請輸出 -1</p>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><strong><font color="#dd0000">這種解題方式我還是第一次看到阿，只能說自己見識太淺還需要磨練</font></strong></p>
<p>這題我是直接去看別人 BLOG 分析的 CODE 才 AC 的，但是他沒有解析，我在這邊附註解析好讓未來的自己複習，會在後面附上連結。</p>
<p>這題分成幾個步驟:</p>
<p>由於題目有限制數列長度必小於 2000，於是我們直接把每一個生成的陣列都直接定義成 1999，就可以直接輕鬆跳過 l 的問題。</p>
<h3 id="長度必小於-2000"><a href="#長度必小於-2000" class="headerlink" title="長度必小於 2000"></a>長度必小於 2000</h3><p>根據貪心演算法的程式碼，當 \(curMAX &lt; 0 \) 時，我們就直接捨棄掉，只用後面的 \( left \)，於是我們可以用一個簡單方法直接找出貪心演算法的最大問題核心。</p>
<h3 id="舉例說明"><a href="#舉例說明" class="headerlink" title="舉例說明"></a>舉例說明</h3><p>EX: 舉例數列為 -1 1 1 3</p>
<table>
<thead>
<tr>
<th>演算法</th>
<th>數列總和</th>
<th>長度</th>
<th>總和*長度=答案</th>
</tr>
</thead>
<tbody><tr>
<td>貪心演算法</td>
<td>5</td>
<td>3</td>
<td>\( 5 \cdot 3 = 15\)</td>
</tr>
<tr>
<td>正確演算法</td>
<td>4</td>
<td>4</td>
<td>\( 4 \cdot 4 = 16 \)</td>
</tr>
</tbody></table>
<p>看出來了嗎?<br>問題在於如果一開始為 -1 時貪心演算法永遠都會捨棄那長度，於是我們只要設計出一個數列是可以破解他的貪心演算法就完成了。</p>
<h3 id="怎麼破解"><a href="#怎麼破解" class="headerlink" title="怎麼破解?"></a>怎麼破解?</h3><p>其實我們也不用那麼麻煩一定要讓自己想出一個絕對正確的演算法，我們只要將貪心演算法稍加改良在讓我們產生的數列可以產生出一個差額為 k 值，是不是非常聰明！教導我的 BLOG 就是這樣做的，真的優秀</p>
<h3 id="設計演算法"><a href="#設計演算法" class="headerlink" title="設計演算法"></a>設計演算法</h3><p>根據舉例，我們可以得出一結論</p>
<ol>
<li>貪心演算法的長度永遠會比正確演算法少 1</li>
<li>正確演算法的長度永遠會比貪心演算法多 1</li>
</ol>
<p>根據數學乘法公式，可找出適合的 k 值，這裡我們用舉例的方式來說明比較清楚:</p>
<h4 id="EX-1-前項為數列總和-定義為-A-後項為長度總和-定義為-B"><a href="#EX-1-前項為數列總和-定義為-A-後項為長度總和-定義為-B" class="headerlink" title="EX:1 前項為數列總和(定義為 A)  後項為長度總和(定義為 B)"></a>EX:1 前項為數列總和(定義為 A)  後項為長度總和(定義為 B)</h4><p>數列: -1 1 1 3<br>\(5 \cdot 3 = 15 \)<br>\(4 \cdot 4 = 16 \)<br>\(16 - 15 = 1 , k = 1 \)</p>
<h4 id="EX-2-前項為數列總和-定義為-A-後項為長度總和-定義為-B"><a href="#EX-2-前項為數列總和-定義為-A-後項為長度總和-定義為-B" class="headerlink" title="EX:2 前項為數列總和(定義為 A)  後項為長度總和(定義為 B)"></a>EX:2 前項為數列總和(定義為 A)  後項為長度總和(定義為 B)</h4><p>數列: -1 1 1 4<br>\(6 \cdot 3 = 18 \)<br>\(5 \cdot 4 = 20 \)<br>\(20 - 18 = 2 , k = 2 \)</p>
<h4 id="證明"><a href="#證明" class="headerlink" title="證明"></a>證明</h4><p>當 \(C \cdot D = E \) 時，如果  C 項 -1，則 E - D (定義為 F)</p>
<p>\(7 \cdot 2 = 14\)<br>\(6 \cdot 3 = 18\)<br>\(18 - 14 = 4 , k = 4 \)<br>經過轉變後<br>\(7 \cdot 3 = 21 \)<br>\(6 \cdot 3 = 18 \)<br>在將 \(7 \cdot 3 = 21 \) 的 <strong>3</strong> -1 ，於是 \(21 - 18 -7 = -4\)得此證明 k。</p>
<h4 id="證明好了，那我應該怎麼做"><a href="#證明好了，那我應該怎麼做" class="headerlink" title="證明好了，那我應該怎麼做?"></a>證明好了，那我應該怎麼做?</h4><p>由於數列中的數字的大小必小於 2000，理所當然的 k 最大只能到 1999，所以我們可以用透過放大中間的數列來讓 k 值加大</p>
<h4 id="EX-3"><a href="#EX-3" class="headerlink" title="EX:3"></a>EX:3</h4><p>數列: -1 2 2 3<br>\(7 \cdot 3 = 21 \)<br>\(6 \cdot 4 = 24 \)<br>\(24 - 21 = 3 , k = 3 \)<br>由於中間的數值從 1 被我放大到 2，所以 k 的值也隨之 +2，原因是因為中間的數列長度為 2 且原本的 1 都被我在 +1 ，於是 \(1 * 2 = 2\) </p>
<h3 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h3><p>當雙方 A 都增加 1，且雙方 B 一樣都不變時， k 的值會 +1，並且當 k 必須大於 2000 時我們必須放大中間數列，OK 我們找到公式了！</p>
<h3 id="找到公式了，但在等等題目很壞心眼"><a href="#找到公式了，但在等等題目很壞心眼" class="headerlink" title="找到公式了，但在等等題目很壞心眼"></a>找到公式了，但在等等題目很壞心眼</h3><p>由於題目很惡意，他 l 的範圍並不是在 \(0 \leq l &lt; 2000\)，是在 \(0 \leq &lt; 10^{9}\)，於是你必須多加行 if 判斷如果 \(l \geq 2000\) 就 cout -1 ，OK開始寫 code 吧</p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>這題對於不擅長數論的我來說非常痛苦阿，前面的證明我也並不覺得我證明得很好，如果我的文字敘述上有錯誤，拜託跟我講QQQQQQ，或是有更好的表達方式請告訴我，我會改進。<br>這題我光看懂大神的程式碼就花了 3hr，自己的領悟力還是不夠強還需要努力，也是第一次遇到這種需要設計題目的，學起來了！</p>
<p>附上<a href="https://www.cnblogs.com/st1vdy/p/12701920.html" target="_blank" rel="noopener">我從大神學來知識的 BLOG</a><br>打了篇文章也花了我 2hr 整，自己的表達能力需要加強，寫 BLOG 也不是一件簡單的事情啊…</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2020</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span> ;</span><br><span class="line"><span class="keyword">int</span> arr[MAXN] = &#123;&#125; ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> t , k , l ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t ;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; k &gt;&gt; l ;</span><br><span class="line">        arr[<span class="number">1</span>] = <span class="number">-1</span> ;</span><br><span class="line">        <span class="keyword">if</span>(l &gt;= <span class="number">2000</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">            <span class="keyword">continue</span> ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fill(arr+<span class="number">2</span> , arr+<span class="number">2000</span> , (<span class="number">1999</span> + k) / <span class="number">1998</span>) ;</span><br><span class="line">        arr[<span class="number">1999</span>] += (<span class="number">1999</span> + k ) % <span class="number">1998</span> ;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="number">1999</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= <span class="number">1999</span> ; i++)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; arr[i] &lt;&lt; <span class="string">' '</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>math theorm</tag>
        <tag>ICPC</tag>
        <tag>2019_ICPC_Asia_Taipei-Hsinchu_Regional_Contest</tag>
        <tag>設計解題</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemB Bad Treap</title>
    <url>/2020/06/16/ICPC/ICPC-2019-2020-North-Western-Russia-Regional-Contest-Pb/</url>
    <content><![CDATA[<head>
  <script type="text/javascript"
    src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
  </script>
<meta name="generator" content="Hexo 4.2.1"></head>

<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給你一個數 n ，然後生成一顆樹，比 root 小的 node 在左邊，比 root 大的 node 在右邊，規則是 \(y = sin(x)\)</p>
<p>要求是可以生成出一個最高高度的樹，但只能用 n 個點。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><blockquote>
<p>這題跟鬼一樣難，是假程式題，真數學題阿！<br>我對於這題還是沒有辦法很了解，如果看不懂我的可以建議多看別人的 Blog。</p>
<p>P.S.  我也是看<a href="https://acm.uestc.edu.cn/blog/41/" target="_blank" rel="noopener">他的 Blog </a></p>
</blockquote>
<p>我們的目的就是 n = 最高長度，然後我們在簡化一點題目就是單調隊列最大化。即 root 都是 left or right 有 node。</p>
<p>由於 sin 的週期是 \( 2 \pi \)，但是 \(sin(0) = sin(\pi) \) 會造成一個現象就是有兩個 \(y = sin(x) \)，所以我們必須再將範圍縮小至 \( \dfrac{-2}{\pi} \sim \dfrac{2}{\pi}  \)。<br>但因為 sin 的週期很難控制，也抓不太到規律。<br>於是我們現在有了一個新的任務，找出最小點，透過倍數來完成這題。<br>但是 sin 的倍數不會調整嗎? 會，但是我們只要找出最小點，這個最小點再乘以 50000 倍也不超過 \( \dfrac{-2}{\pi} \sim \dfrac{2}{\pi} \)，這樣就可以了！<br>接下來要怎麼找呢? 這裡就很神奇瞜!</p>
<p>由於太神奇了，我特別拉出來講，我們要找出一個極小值，我們就先假設 0.0035 ，當 sin (0.0035 角度) = 0.00006，夠我們使用了。怎麼說呢? 因為我們 \( \pi = 3.14 \)，然後我們需要 50000 個數值，所以 \( \dfrac{-2}{\pi} = -25000 * 0.00006 \) and \( \dfrac{2}{\pi} = 0.00006 * 25000 \) 且因 \(25000 + 25000 = 50000 \)，就能搞定題目的 50000 個數值了！最後我們剩下一個任務就能把解題的必要元素都解出來。<br>P.S. 不一定要用 0.0035 ，只要能夠找出一個可以在 \( \dfrac{-2}{\pi} \sim \dfrac{2}{\pi}  \) 能放入 50000個等比級數即可，我有考慮使用過 sin(0.002 角度) = 0.00003，但我解不出下方公式 A , B</p>
<p>公式如下:<br>\(  sin(A * 360 + 0.0035)度數 = sin(B) 弧度\) and \( A , B \in Z \)<br>Z 則是我們需要的答案。</p>
<p>由於題目說過 B 必須為整數，A 則是由於 sin 週期而必須是整數。<br>這時候呢，這條公式我則是透過看解答解開的， A = 113 , B = 710，我想不出有甚麼公式或是可以寫一個簡單的程式可以順利找出來。如果知道還請聯絡我，拜託了QQ<br>P.S. 我覺得只能透過暴力解，才能解出。</p>
<p>接下來就是看他有幾個數列就直接乘以 B 即可，但還需要減去 25000 * B，因為我們是從 \( \dfrac{-2}{\pi} \) 開始。</p>
<h4 id="作者心得"><a href="#作者心得" class="headerlink" title="作者心得"></a>作者心得</h4><p>這題也太難了吧，俄羅斯人都跟鬼一樣強阿，此題考的不是寫出來的程式，而是你需要非常清晰的邏輯與能夠解出公式的 A 與 B，若是你能解出來，你的實力肯定在我之上，我佩服你！<br>(然後解出來，就告訴我你的想法吧！)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; i * <span class="number">710</span> - <span class="number">25000</span> * <span class="number">710</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ICPC_2019-2020_North-Western_Russia_Regional_Contest</tag>
        <tag>ICPC</tag>
        <tag>設計解題</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemA Accurate Movement</title>
    <url>/2020/05/18/ICPC/ICPC-2019-2020-North-Western-Russia-Regional-Contest-Pa/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>有兩個 Box ，這兩個 Box 不可以互相拋棄對方，必須要相互連在一起</p>
<p>他們要走到 n 距離，試問走幾步才能走到?</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>數學一直都不是我擅長的阿，好難過 ಥ_ಥ</p>
<p>還是我今年 ICPC 的好夥伴幫我想出的，然後我再理解，邏輯不好rrrrrr<br>Bill and Entroy 都是 math master </p>
<p>公式: ceiling( (n-b) / (b-a) ) * 2 + 1 ;</p>
<p>n-b 為大箱子到 n   的距離<br>b-a 為小箱子到大箱子的距離<br>+1  最後小箱子移動到終點的距離</p>
<p>我還有 n-b 的距離要移動 每次最多只能移動 (b-a) 每次移動的權重為 2 </p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span>) ;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> a , b , n ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; n ;</span><br><span class="line">    <span class="keyword">int</span> ans , temp ;</span><br><span class="line">    temp = (n-b) / (b-a) ;</span><br><span class="line">    <span class="keyword">if</span>( (n-b) % (b-a) != <span class="number">0</span> )</span><br><span class="line">        temp += <span class="number">1</span> ;</span><br><span class="line">    ans = temp * <span class="number">2</span> + <span class="number">1</span> ;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ICPC_2019-2020_North-Western_Russia_Regional_Contest</tag>
        <tag>math theorm</tag>
        <tag>ICPC</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemE Equidistant</title>
    <url>/2020/05/20/ICPC/ICPC-2019-2020-North-Western-Russia-Regional-Contest-Pe/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>有一張地圖，有幾個需要參加 ICPC 的城市，我們需要設計一個程式，尋找一個城市可以讓每個要參加 ICPC 的城市都是花相同的距離到達?</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>此題有很多種做法，但唯有時間複雜度最低才能 AC (我怎麼覺得我好像在說廢話 XD)</p>
<p>先透過 DFS 把參加 ICPC 中的城市兩個最遠距離給求出來。<br>再將兩個城市中的最長距離 /2 ，再找出那個路經的城市(<strong>定義為 A</strong>)。</p>
<p>再透過 DFS 從 A 開始到每一個需要參加 ICPC 的城市，如果他們的距離不等於我們在上個 DFS 找出的最長距離 /2，就輸出 “NO” ，如果都可以那就輸出 “YES”</p>
<p>P.S. 我好久沒有寫 DFS 了，居然都快忘記了。這邊就要感謝 BILL。<br>喚醒我那在史前時代的記憶用 vector 去做 DFS，真的優秀。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> m , n , flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> Maxn_city = <span class="number">0</span> , Maxn_path = <span class="number">0</span> ;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;tree[<span class="number">200020</span>] ;</span><br><span class="line"><span class="keyword">int</span> city[<span class="number">200020</span>] = &#123;&#125; ;</span><br><span class="line"><span class="keyword">int</span> visit[<span class="number">200020</span>] = &#123;&#125; ;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; travel ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BFS_to_large_path</span><span class="params">(<span class="keyword">int</span> root )</span></span>&#123;</span><br><span class="line">    visit[root] = <span class="number">1</span> ;</span><br><span class="line">    travel.push_back(root);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; tree[root].size() ; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> node = tree[root][i] ;</span><br><span class="line">        <span class="keyword">if</span>(!visit[node])&#123;</span><br><span class="line">            BFS_to_large_path(node);</span><br><span class="line">            travel.pop_back();</span><br><span class="line">            visit[root] = <span class="number">0</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//debug to check large path</span></span><br><span class="line">    <span class="comment">//if (root == 1)</span></span><br><span class="line">    <span class="comment">//    cout &lt;&lt; "1=" &lt;&lt; travel.size() &lt;&lt; ' ' &lt;&lt; Maxn_path &lt;&lt; ' ' &lt;&lt; city[root] &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(city[root] &amp;&amp; travel.size() &gt; Maxn_path)&#123;</span><br><span class="line">        Maxn_city = travel[travel.size()/<span class="number">2</span>];</span><br><span class="line">        Maxn_path = travel.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BFS_to_other_path</span><span class="params">(<span class="keyword">int</span> root ,<span class="keyword">int</span> path)</span></span>&#123;</span><br><span class="line">    visit[root] = <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; tree[root].size() ; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> node = tree[root][i] ;</span><br><span class="line">        <span class="keyword">if</span>(!visit[node])&#123;</span><br><span class="line">            BFS_to_other_path(node , path+<span class="number">1</span>);</span><br><span class="line">            visit[root] = <span class="number">0</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//debug</span></span><br><span class="line">    <span class="keyword">if</span>(root == <span class="number">1</span> )</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"city="</span> &lt;&lt; root &lt;&lt; <span class="string">" path= "</span> &lt;&lt; path &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(city[root] &amp;&amp; path != Maxn_path)</span><br><span class="line">        flag = <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m ;</span><br><span class="line">    <span class="keyword">int</span> a , b ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n<span class="number">-1</span> ; i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b ;</span><br><span class="line">        tree[a].push_back(b) ;</span><br><span class="line">        tree[b].push_back(a) ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; m ; i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a ;</span><br><span class="line">        city[a] = <span class="number">1</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    BFS_to_large_path(a);</span><br><span class="line">    <span class="comment">//visit[a] = 0 ;</span></span><br><span class="line">    BFS_to_other_path(Maxn_city , <span class="number">1</span> );</span><br><span class="line">    <span class="keyword">if</span>(flag)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"YES\n"</span> &lt;&lt; Maxn_city ;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//debug</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Maxn_path= "</span> &lt;&lt; Maxn_path &lt;&lt; <span class="string">" Maxn_city= "</span> &lt;&lt; Maxn_city &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ICPC_2019-2020_North-Western_Russia_Regional_Contest</tag>
        <tag>DFS</tag>
        <tag>圖論</tag>
        <tag>ICPC</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemH High Load Database</title>
    <url>/2020/05/26/ICPC/ICPC-2019-2020-North-Western-Russia-Regional-Contest-Ph/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給你兩組陣列 (定義為 A , B)，詢問 B 的每一個數字，能將 A 分割最大。<br>補述說明：　可將 A 想像成包裹 B 想像為箱子<br>要將 A 塞到 B 裡面並最佳化利用但必須按照順序，試問需要幾個箱子。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><blockquote>
<p>這題看起來很簡單對不對！<br><strong>但其實它是非常可怕的效率優化</strong><br>要是打得像文章一樣，沒人會理解吧！</p>
</blockquote>
<ol>
<li><p>使用前綴和 + 二分收尋<br> 在上一份包裹沒被收納前，下一份包裹就無法加入箱子。並且透過二分收尋的方式，就可以很方便的加入並且省掉撰寫更多程式碼的時間。</p>
<p> 舉例:<br> EX: 2 2 4 3 3 包裹 =&gt; 2 4 8 11 14 設定箱子為 4<br> 因此一開始收尋 4 是在 4 8 之間 (這裡使用 C++ upper_bound 直接抓 &gt; x 的值 index)，因為 4+4 = 8 ，因此我下次就收尋 8，8 在 8 13 之間，所以 8+4 = 12，以此類推。每做二分收尋一次就是多切一段，很聰明的想法吧！只是單單這樣還是不夠的，俄羅斯沒那麼友善QQ。</p>
</li>
<li><p>找出包裹之間的最大值並與箱子比較<br> 這想法其實一開始我的隊友跟我說時，我還無法想通邏輯。但多思考個幾分鐘就能懂了，我的邏輯敏感力還是不太好啊…。</p>
<p> 假設題型：<br> 如果 箱子是 5 ，包裹為 3 6 7 8 9，那箱子 5 是不是必定沒辦法包住 6 7 8 9? 因此我找出這些包裹的最大差額，要是箱子不能裝到裡面最大的包裹，就直接判斷 Impossible，省去 step1 的查找時間。<del>反正有找跟沒找還不是一樣</del></p>
</li>
</ol>
<ol start="3">
<li>他的查找資料是會重複的<br><font color="#dd0000"> <strong>最機車的地方</strong> </font><br>應該是我英文底子不太好，可能看不太懂他有說資料會重複查詢抑或是他沒有說。這邊我是去查看這邊我是去查看<a href="https://blog.csdn.net/m0_37809890/article/details/102946147?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-1" target="_blank" rel="noopener">Little_Fall 天才</a>，不然我應該永遠都想不出來吧…。<br>好了，前面廢話那麼多，該講重點了。再新增一個陣列來記錄如果使用 t 箱子可以裝幾個包裹就可以完成了！</li>
</ol>
<p>這份解題記錄我打了一小時…好累阿。還有兩題要打，加油!</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">200020</span>] = &#123;&#125; ;</span><br><span class="line"><span class="keyword">int</span> save[<span class="number">1000200</span>] = &#123;&#125; ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n , sum =<span class="number">0</span> , Mv = <span class="number">0</span> ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123; <span class="comment">//cin array</span></span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; arr[i] ;</span><br><span class="line">        sum += arr[i] ;</span><br><span class="line">        arr[i] = sum ;</span><br><span class="line">        Mv = max(Mv, arr[i] - arr[i<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(save , <span class="number">-1</span> , <span class="keyword">sizeof</span>(save));</span><br><span class="line">    <span class="keyword">int</span> seaT , t , seaN , index ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; seaN ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; seaN ; i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; t ;</span><br><span class="line">        seaT = t ;</span><br><span class="line">        sum = <span class="number">0</span> ;</span><br><span class="line">        index = <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">0</span>; <span class="comment">//flag = 1 non-impossible flag2 = impossible</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(save[t] != <span class="number">-1</span>)</span><br><span class="line">            flag = <span class="number">1</span> ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(Mv &gt; t)</span><br><span class="line">            flag = <span class="number">2</span> ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(flag==<span class="number">0</span>)&#123;</span><br><span class="line">            index = upper_bound(arr+index , arr+n , seaT )-arr;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//debug</span></span><br><span class="line">            <span class="comment">//cout &lt;&lt; "seaT=" &lt;&lt; " " &lt;&lt; seaT &lt;&lt; " value=" &lt;&lt; arr[index-1] &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(index == n)&#123; </span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                save[t] = ++sum ;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            seaT = arr[index<span class="number">-1</span>] + t ;</span><br><span class="line">            sum++ ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag == <span class="number">2</span> || save[t] == <span class="number">0</span> )</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Impossible"</span> ;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; save[t] ;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ICPC_2019-2020_North-Western_Russia_Regional_Contest</tag>
        <tag>效率優化</tag>
        <tag>ICPC</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemI Ideal Pyramid</title>
    <url>/2020/05/26/ICPC/ICPC-2019-2020-North-Western-Russia-Regional-Contest-Pi/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>我需要一個蓋一個金字塔，中間要有許多柱子。請寫出一個程式告訴此金字塔的中心點與高。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><blockquote>
<p>非常的數論阿…</p>
</blockquote>
<p>先假設他給的每個點都需要蓋一個金字塔(因為必須要大於等於金字塔)，這很數學，我太笨，不好解釋。我只能跟你說金字塔是 45 度，所以從中點切面來說會是正三角形，接著 /2，就是等腰三角形，就可以找到解答了！</p>
<p>於是策略如下:</p>
<ol>
<li>找最大最小的 xy ，然後求對角線。</li>
<li>高則透過 (max(MaxX - MinX , MaxY - MinY)+1) /2算一半的對角線就能求出。</li>
</ol>
<h3 id="疑問"><a href="#疑問" class="headerlink" title="疑問"></a>疑問</h3><p><font color="#dd0000"><strong>這題有個很奇怪的點，就是因為如果是用 int 是會有 .5 的問題，於是我很貼心的加入四捨五入，但在 submit 時就吃 WA，氣死我了。</strong></font></p>
<p><del>以後不要想那麼多，我們寫演算法的。盡量把他想得簡單化，不要太貼心</del><br>題目有說只有 int，希望他可以說多一點…</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Maxn -100000020</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Minn 100000020</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> ) ;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    ll n ;</span><br><span class="line">    ll MaxX , MinX , MaxY , MinY ;</span><br><span class="line">    MaxX = Maxn ;</span><br><span class="line">    MinX = Minn ;</span><br><span class="line">    MaxY = Maxn ;</span><br><span class="line">    MinY = Minn ;</span><br><span class="line">    ll a , b , c ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c ;</span><br><span class="line">        MaxX = max(a + c , MaxX);</span><br><span class="line">        MinX = min(a - c , MinX);</span><br><span class="line">        MaxY = max(b + c , MaxY);</span><br><span class="line">        MinY = min(b - c , MinY);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> x , y , h , dx , dy ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//debug</span></span><br><span class="line">    <span class="comment">//cout &lt;&lt; MaxX &lt;&lt; " " &lt;&lt; MinX &lt;&lt; " " &lt;&lt; MaxY &lt;&lt; " " &lt;&lt; MinY &lt;&lt; '\n' ;</span></span><br><span class="line">    x = (MaxX + MinX+<span class="number">1</span>) /<span class="number">2</span> ;</span><br><span class="line">    y = (MaxY + MinY+<span class="number">1</span>) /<span class="number">2</span> ;</span><br><span class="line">    h = (max(MaxX - MinX , MaxY - MinY)+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; x &lt;&lt; <span class="string">' '</span> &lt;&lt; y &lt;&lt; <span class="string">' '</span> &lt;&lt; h ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ICPC_2019-2020_North-Western_Russia_Regional_Contest</tag>
        <tag>效率優化</tag>
        <tag>ICPC</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemJ Just the Last Digit</title>
    <url>/2020/05/25/ICPC/ICPC-2019-2020-North-Western-Russia-Regional-Contest-Pj/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>有一張有向圖，有一人遍地此路徑，於是於是她得出每個點有幾種不一樣的路徑，並繪製地圖<br>你的任務就是將此圖還原成原始地圖，如 a -&gt; b , c -&gt; b </p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><blockquote>
<p>對我而言這有點類似於 Floyd 演算法，但我沒有十足把握。有描繪出其大概想法，但卻沒辦法將演算法建立完成，需查看 <a href="https://www.cnblogs.com/Dup4/p/11968817.html" target="_blank" rel="noopener">Dup4’Blog 大神</a>才有辦法解出。</p>
</blockquote>
<p>由於題目有說明 i &gt; j &gt; k 所以不會有 5 &gt; 3 &gt; 2 問題加上路徑數量不會超過 10 (last digit 代表只會有 1 位數)，使問題簡單很多壓力將低，<del>比起這年份的俄羅斯考卷只喜歡一值考時間優化好多了…</del>。</p>
<p>我將我的程式想法說明，希望大家與未來的我可以看懂，嗚嗚嗚</p>
<p>array before = 題目給的<br>array after  = 還原陣列</p>
<p>請先記住由於測試資料是 xxxxx 模式，所以透過 char 會來的比 int 陣列更方便輸入</p>
<p>下面的標題為 Line 行數<br>22. 由於路徑只會從小到大，於是從 i 開始遍地不斷嘗試<br>23. i -&gt; j 的路徑收尋<br>24. sum = 紀錄過去的路徑<br>25. i -&gt; k -&gt; j 先假設玩家透過 i -&gt; k ( Before 的路徑 )<br>26. after 要有才可以做 27. ，因為先前必須要有路徑才可以實行<br>27. 若是 after (必須要先確定有這個路徑，才可以用 sum 記錄才真實) 的路徑<br>30. 為甚麼是 sum +1? 例如說只有 2 個點 0 -&gt; 1 ，在前面的程式 sum = 0，因為前面程式邏輯 after[i][k] 要有值 sum 才會增加紀錄，所以 +1 表示為單純只從 a -&gt; b 次過程中並沒有其他的點。<br>31. 於是原始資料是有路徑的，所以透過 after 還原</p>
<p>對不起我解釋得很爛… 非常抱歉</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> before[<span class="number">520</span>][<span class="number">520</span>] = &#123;&#125; ;</span><br><span class="line"><span class="keyword">int</span> after[<span class="number">520</span>][<span class="number">520</span>] = &#123;&#125; ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; n ; j++)</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; before[i][j] ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上面程式註解</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span> ; j &lt; n ; j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span> ;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = i + <span class="number">1</span> ; k &lt; j ; k++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(after[i][k])</span><br><span class="line">                    sum += before[k][j]-<span class="string">'0'</span> ;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>( (sum +<span class="number">1</span>) % <span class="number">10</span> == before[i][j] - <span class="string">'0'</span>)&#123;</span><br><span class="line">                after[i][j] = <span class="number">1</span> ;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n ; j++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; after[i][j] ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ICPC_2019-2020_North-Western_Russia_Regional_Contest</tag>
        <tag>Floyd-Warshall algorithm</tag>
        <tag>動態規劃</tag>
        <tag>ICPC</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>ProblemM Managing Difficulties</title>
    <url>/2020/05/18/ICPC/ICPC-2019-2020-North-Western-Russia-Regional-Contest-Pm/</url>
    <content><![CDATA[<script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>

<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給你一斷數列<br>判斷裡面的值有幾個是可以符合公式 \(a_j−a_i=a_k−a_j\)</p>
</blockquote>
<a id="more"></a>


<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>這題很簡單，就是要著重在效率時顯得十分棘手。<br>我將分成 3 個部分說明。</p>
<ol>
<li><p>透過字典優化<br>可將公式移項成 \(2a_j = a_i + a_k \)，加上 i &gt; j &gt; k<br>透過字典的部分能夠將 \(a_k\) 點就可以省略掉 for k 的迴圈</p>
</li>
<li><p>j 從最後 n - 1 開始往前 for<br>如果只透過 1. 會發現一個問題，因為在每次 i 結束時，需要再將之前刪除的 dict[j] 值補回，會增加一個 for與是透過反向輸出，可省略掉須將刪除的 dict[j] 補回，於是減少一個 for了!</p>
</li>
<li><p>使用unorder_map<br>map 會造成效率增加  \( o (n \log \ n)\)，少量使用內存。<br><a href="https://blog.csdn.net/StephenZou14/article/details/69568620" target="_blank" rel="noopener">unordered_map</a> 則是效率減少 \(o(1)\)，大量使用內存。</p>
</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">2020</span>] = &#123;&#125; ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> t , n , ans, now  ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t ;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">        <span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span> ,<span class="keyword">int</span> &gt; dict ;</span><br><span class="line">        ans = <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; num[i] ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dict[num[n<span class="number">-1</span>]] += <span class="number">1</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = n<span class="number">-2</span> ; j &gt; <span class="number">0</span> ; j--)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; j ; i++ )&#123;</span><br><span class="line">                now = <span class="number">2</span> * num[j] - num[i] ;</span><br><span class="line">                ans += dict[now];</span><br><span class="line">            &#125;</span><br><span class="line">            dict[num[j]]+=<span class="number">1</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ICPC</category>
      </categories>
      <tags>
        <tag>ICPC_2019-2020_North-Western_Russia_Regional_Contest</tag>
        <tag>效率優化</tag>
        <tag>ICPC</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>債劵定價筆記</title>
    <url>/2020/07/02/NTUT_note/bond-pricing/</url>
    <content><![CDATA[<h2 id="筆記說明"><a href="#筆記說明" class="headerlink" title="筆記說明"></a>筆記說明</h2><blockquote>
<p>此筆記用途在於台北科技大學資訊與財金管理系大一下財務管理中債劵定價重點整理<br><font color="#dd0000">並非所有人都適用，部分對我而言稍加容易的內容並不會寫在此內。</font></p>
</blockquote>
<a id="more"></a>

<h5 id="名詞解釋"><a href="#名詞解釋" class="headerlink" title="名詞解釋"></a>名詞解釋</h5><ul>
<li>r = 利率</li>
<li>t = 期數</li>
</ul>
<h2 id="債劵定價"><a href="#債劵定價" class="headerlink" title="債劵定價"></a>債劵定價</h2><ul>
<li>殖利率 (YTM) <ul>
<li><strong>每年</strong>使用這筆資金平均每年應該要付給債權人的資金成本</li>
<li>會隨著其他因素改變，如:違約程度風險，債劵到期時間長短</li>
<li>\(公司債券 = \sum_{t=0}^{n} \frac{利息}{(1+殖利率)^{t}} +  \frac{本金}{(1+殖利率)^{n}} \)</li>
<li>\(YTM = 當期受益率 + 資本利得(損失)率 \)</li>
</ul>
</li>
</ul>
<h3 id="殖利率計算機按法"><a href="#殖利率計算機按法" class="headerlink" title="殖利率計算機按法"></a>殖利率計算機按法</h3><ol>
<li>set = end </li>
<li>PV 輸入發行價格並在前面加上負號，如: -123</li>
<li>PMT 輸入利息</li>
<li>FV 輸入票價 </li>
<li>到 i 點 solve</li>
</ol>
<ul>
<li>票價發行<ul>
<li><table>
<thead>
<tr>
<th>票面利率與殖利率比較</th>
<th>評價</th>
</tr>
</thead>
<tbody><tr>
<td>票面利率 = 殖利率</td>
<td>評價發行</td>
</tr>
<tr>
<td>票面利率 &gt; 殖利率</td>
<td>溢價發行</td>
</tr>
<tr>
<td>票面利率 &lt; 殖利率</td>
<td>折價發行</td>
</tr>
</tbody></table>
</li>
</ul>
</li>
<li>債劵風險<ul>
<li>到期日越久的債劵風險越高</li>
<li>利率越高的債券風險越低</li>
</ul>
</li>
<li>當期收益率 \( current yield \)<ul>
<li>\(current yield = \frac{當年度利息收入}{債劵當年度期初價格} \)</li>
</ul>
</li>
<li>資本利得率<ul>
<li>\(資本利得率 = \frac{債券今年價格 - 債券去年價格}{債券去年價格} \)</li>
</ul>
</li>
</ul>
<h2 id="債券特性"><a href="#債券特性" class="headerlink" title="債券特性"></a>債券特性</h2><ul>
<li>債券的利息可以被當成費用，降低稅率</li>
<li>債券名稱依時間長短區分<ul>
<li>中期債券 -&gt; 一年以上，十年以下</li>
<li>長期債券 -&gt; 十年以上</li>
</ul>
</li>
<li>債劵名稱以擔保品區分<ul>
<li>擔保債券 -&gt; 用股票或其他有價債券擔保</li>
<li>抵押擔保債券 -&gt; 以固定資產或不動產擔保</li>
<li>信用債券 -&gt; 用信用擔保，通常信譽良好大公司才能發行<ul>
<li><font color="#dd0000"><strong>信用債券必須等到公司將其他債務清償完畢後才能求償</strong></font>，但能優於股東</li>
</ul>
</li>
</ul>
</li>
<li>贖回債券 (call provision)<ul>
<li>公司可以買回，但通常會比票面價格高</li>
</ul>
</li>
<li>償債基金 (sinking fund)<ul>
<li>透過特定信託公司，買回或贖回特定債券</li>
</ul>
</li>
</ul>
<h2 id="債券評價"><a href="#債券評價" class="headerlink" title="債券評價"></a>債券評價</h2><ul>
<li>債券平等<ul>
<li>評價越高，投資人要求報酬低</li>
<li>評價越低，投資人要求報酬高</li>
</ul>
</li>
<li>投資型債券<ul>
<li>評價等級高，以賺取本金與少許利息</li>
</ul>
</li>
<li>投機型債券<ul>
<li>評價等級低，以賺取本金與<strong>大量</strong>利息</li>
</ul>
</li>
</ul>
<h2 id="市場術語"><a href="#市場術語" class="headerlink" title="市場術語"></a>市場術語</h2><ul>
<li>交叉型債券<ul>
<li>被 n 種信評公司評初不同等級債券</li>
</ul>
</li>
<li>垃圾債券 (Jund Bond) <ul>
<li>信用較差公司，發行的高收益債券，通常都以高票面利率為主</li>
</ul>
</li>
<li>墮落天使 (fallen angel)<ul>
<li>從投資型債券轉變成垃圾債券</li>
</ul>
</li>
<li>NCAA<ul>
<li>No coupon at all -&gt; 無法支付任何利息的債券</li>
</ul>
</li>
</ul>
<h2 id="其他債券"><a href="#其他債券" class="headerlink" title="其他債券"></a>其他債券</h2><ul>
<li>金融債券<ul>
<li>還本期間不得低於兩年</li>
</ul>
</li>
<li>零息債券 (zero coupon bond)<ul>
<li>完全不支付利息，到期末時將一次性將面額償還，通常面額裡面內含利息</li>
<li>\(發行價格 = \frac{發行面額}{(1+r)^{t}}\)</li>
<li>發行必定為<strong>折價</strong>發行</li>
<li>\(利息(coupon) = 發行面額 - 發行價格 \)</li>
<li>到期前不付息，但必須提列利息費用</li>
</ul>
</li>
<li>浮動利率 (floating-rate bond)<ul>
<li>每 3 到 6 個月進行調整利率</li>
<li>仍有上下限，上下限區間為利率區間</li>
<li>通常為金融機構發行，時間約為 10 年</li>
</ul>
</li>
<li>可轉換債券 (convertible bond)<ul>
<li>在到期前，可以有<strong><font color="#dd0000">權利(非義務)</font>轉成<font color="#dd0000">原發行機構股票</font></strong></li>
</ul>
</li>
<li>可交換公司債 (exchangeable bond)<ul>
<li>在到期前，可以有<strong><font color="#dd0000">權利(非義務)</font>轉成<font color="#dd0000">其他發行機構股票</font></strong></li>
</ul>
</li>
<li>附認購權債證券 (warrant bond)<ul>
<li>在購買此債券時，可以用較低價格買該機構發行股票，以刺激投資債券</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>北科上課筆記</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>財務管理筆記</tag>
        <tag>北科大一下財務管理筆記</tag>
        <tag>北科上課筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>資本預算決策</title>
    <url>/2020/07/03/NTUT_note/capital-budget-decision/</url>
    <content><![CDATA[<h2 id="筆記說明"><a href="#筆記說明" class="headerlink" title="筆記說明"></a>筆記說明</h2><blockquote>
<p>此筆記用途在於台北科技大學資訊與財金管理系大一下財務管理中資本預算決策重點整理<br><font color="#dd0000">並非所有人都適用，部分對我而言稍加容易的內容並不會寫在此內。</font></p>
</blockquote>
<a id="more"></a>

<h5 id="名詞解釋"><a href="#名詞解釋" class="headerlink" title="名詞解釋"></a>名詞解釋</h5><ul>
<li>\(r_{s} = 股東要求報酬率\)</li>
<li>\(r_{d} = 債權人要求報酬率 \)</li>
<li>\(n = 年數 \)</li>
</ul>
<h4 id="基本觀念"><a href="#基本觀念" class="headerlink" title="基本觀念"></a>基本觀念</h4><ul>
<li>資本<ul>
<li>運用於長期投資方案資金為資本</li>
</ul>
</li>
<li>資本預算決策<ul>
<li>判斷資本應投資在哪項長期資產</li>
</ul>
</li>
<li>決策類別<ol>
<li>在某 1 時點利用各種評估技術判定<strong>某投資方案是否可行</strong></li>
<li>在某 1 時點利用各種評估技術判定<strong>多方案中何者最佳</strong></li>
</ol>
</li>
<li>投資方案<ul>
<li>獨立方案 (independent projects)<ul>
<li>此投資案不影響其他</li>
</ul>
</li>
<li>互斥方案 (mutually exclusive projects)<ul>
<li>選 A 則其餘方案不可選</li>
</ul>
</li>
<li>初次新投資案 (new venture projects)<ul>
<li>無投資經驗，評估成本難，風險高</li>
</ul>
</li>
<li>擴增方案 (expansion projects)<ul>
<li>以增加效能為目的，評估成本與風險次難</li>
</ul>
</li>
<li>重置方案 (replacement projects)<ul>
<li>更新設備，風險低，評估容易</li>
</ul>
</li>
</ul>
</li>
<li>投資產生的現金流入<ul>
<li>在未來發生<ul>
<li>考慮貨幣時間價值</li>
</ul>
</li>
<li>發生的年數與金額不確定性高<ul>
<li>無法完美預估，總有變數</li>
</ul>
</li>
<li>受市場景氣影響<ul>
<li>受限於景氣循環</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="淨現值法-NPV"><a href="#淨現值法-NPV" class="headerlink" title="淨現值法 NPV"></a>淨現值法 NPV</h2><p>未來收益折現後，判斷投資優劣標準<br>\( NPV = \frac{現金}{(1+資金成本)^{n}} - 期初投入金額 \)</p>
<ul>
<li>優點<ol>
<li>考量到投資案本身真實現金流量，而非會計數字</li>
<li>考量到投資案所有現金流量，結果精確</li>
<li>考量了貨幣時間價值，未來現金流入折現計算</li>
</ol>
</li>
</ul>
<h2 id="還本期法-Payback-period-method-與-折現還本期法-discounted-payback-period-method"><a href="#還本期法-Payback-period-method-與-折現還本期法-discounted-payback-period-method" class="headerlink" title="還本期法 (Payback period method) 與 折現還本期法 (discounted payback period method)"></a>還本期法 (Payback period method) 與 折現還本期法 (discounted payback period method)</h2><p>投資金額需 x 年才能完全回收，通常以年為單位。<br>不考慮折現為還本期法，考慮則為折現還本期法。</p>
<ul>
<li>優點<ol>
<li>方法簡單</li>
<li>方便衡量管理者決策能力</li>
<li>可大概了解一筆資金套牢致回收的時間 </li>
</ol>
</li>
<li>缺點<ol>
<li>未考慮時間價值</li>
</ol>
</li>
</ul>
<h2 id="內部報酬率法-IRR"><a href="#內部報酬率法-IRR" class="headerlink" title="內部報酬率法 IRR"></a>內部報酬率法 IRR</h2><p>考慮今年時間價值，計算出隱含報酬率，在將報酬率與資金成本比較並判定投資案可行性</p>
<ul>
<li>特性<ol>
<li>考慮所有現金流量</li>
<li>考慮現金流量時間價值</li>
<li>獨立方案與追求公司價值最大化目標一致</li>
<li>互斥方案與追求公司價值極大化目標不一致</li>
</ol>
</li>
</ul>
<h2 id="修正後內部報酬率法-MIRR"><a href="#修正後內部報酬率法-MIRR" class="headerlink" title="修正後內部報酬率法 MIRR"></a>修正後內部報酬率法 MIRR</h2><p>IRR 可能導致誤判，因而產生此法修正。<br>如有甲乙兩互斥方案，分別畫出 NPV 線，如有相交情況則該焦點資金成本稱為銜接率 (crossover rate)<br>當資金成本低於銜接率時，IRR會<font color="#dd0000"><strong>誤判</strong></font></p>
<ul>
<li>銜接率計算:<ul>
<li>類似於 NPV，需將兩方案每次獲得的收益量相減，所得數值為銜接率。一樣使用 NPV 計算</li>
</ul>
</li>
</ul>
<h2 id="計算機按法-IRR-and-NPV"><a href="#計算機按法-IRR-and-NPV" class="headerlink" title="計算機按法 IRR and NPV"></a>計算機按法 IRR and NPV</h2><ol>
<li>輸入利率 (若想詢問 IRR 可忽略此步驟)</li>
<li>csh 點擊執行</li>
<li>第一期輸入為負數，接下來都為正數</li>
<li>在按一次 CASH </li>
<li>選擇 IRR or NPV 按執行</li>
</ol>
<h2 id="計算機按法-MIRR"><a href="#計算機按法-MIRR" class="headerlink" title="計算機按法 MIRR"></a>計算機按法 MIRR</h2><ol>
<li>先使用 CPMD 計算複利</li>
<li>PMT 輸入每年報酬</li>
<li>n 為期數</li>
<li>i 為利率</li>
<li>FV 按執行</li>
<li>\((FV / 投資價格)^{1/年數} \)</li>
</ol>
<h2 id="獲利指數法-profitability-index-PI"><a href="#獲利指數法-profitability-index-PI" class="headerlink" title="獲利指數法 (profitability index , PI)"></a>獲利指數法 (profitability index , PI)</h2><ul>
<li>特性<ol>
<li>考慮全部現金流量</li>
<li>考慮現金流量時間價值</li>
<li>獨立方案與追求公司價值極大化目標一致</li>
<li>互斥方案與追求公司價值極大化目標不一致</li>
<li>若是獨立方案只要 PI &gt; 1全部採用</li>
</ol>
</li>
<li>公式<ul>
<li>\( PI = \frac{\frac{當年度收益}{(1+資金成本)^{年數}}}{期初投資}\)</li>
</ul>
</li>
</ul>
<h2 id="實務上的資本決策方法"><a href="#實務上的資本決策方法" class="headerlink" title="實務上的資本決策方法"></a>實務上的資本決策方法</h2><ul>
<li>IRR 與 NPV 最常被使用</li>
<li>還本期法應計算方便為第二長使用</li>
</ul>
]]></content>
      <categories>
        <category>北科上課筆記</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>財務管理筆記</tag>
        <tag>北科大一下財務管理筆記</tag>
        <tag>北科上課筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>股票定價筆記</title>
    <url>/2020/07/02/NTUT_note/stock_pricing/</url>
    <content><![CDATA[<h2 id="筆記說明"><a href="#筆記說明" class="headerlink" title="筆記說明"></a>筆記說明</h2><blockquote>
<p>此筆記用途在於台北科技大學資訊與財金管理系大一下財務管理中股票定價重點整理<br><font color="#dd0000">並非所有人都適用，部分對我而言稍加容易的內容並不會寫在此內。</font></p>
</blockquote>
<a id="more"></a>

<h2 id="普通股"><a href="#普通股" class="headerlink" title="普通股"></a>普通股</h2><ul>
<li><p>普通股介紹</p>
<ol>
<li>有稅後盈餘且提撥過資本公積與盈餘公積才可以發放股利   </li>
<li>股利不可以折稅或當成公司費用使用</li>
<li>有 \( 2 \% \) 健保補充費</li>
</ol>
</li>
<li><p>普通股評價 </p>
<ul>
<li><p>現金股利零成長</p>
<ol>
<li>\( \frac{現金股利}{必要報酬率}\)</li>
</ol>
</li>
<li><p>股利固定成長型</p>
<ol>
<li>\( \frac{現金股利 * (1+股利成長率) }{必要報酬率 - 股利成長率} \)</li>
<li>\(下一次股價 = 這次股價 * (1+股利成長率)\)</li>
</ol>
</li>
<li><p>非固定成長股利</p>
<ol>
<li>\( \frac{現金股利 * (1+前面股利成長率)}{(1+要求報酬率)} + 後來的股利固定成長型 \)</li>
</ol>
</li>
<li><p>股利成長率 \((g)\)</p>
<ul>
<li>\(股利成長率(g) = 保留比率 * 普通股權益報酬率 \)</li>
</ul>
</li>
<li><p>普通股權益報酬率 \((ROE)\)</p>
<ul>
<li>\(\frac{淨利}{平均普通股股東權益}\)</li>
</ul>
</li>
<li><p>必要報酬率 \((k)\)</p>
<ul>
<li>\( k = g + \frac{明年的現金股利}{股價} \)</li>
</ul>
</li>
<li><p>\((每股盈餘 = EPS)\)</p>
</li>
</ul>
</li>
<li><p>本益比還原法</p>
<ul>
<li>\( E(p) = 產業平均比 * 預期 EPS \)</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>北科上課筆記</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>財務管理筆記</tag>
        <tag>北科大一下財務管理筆記</tag>
        <tag>北科上課筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>資本結構筆記</title>
    <url>/2020/07/02/NTUT_note/capital-structure/</url>
    <content><![CDATA[<h2 id="筆記說明"><a href="#筆記說明" class="headerlink" title="筆記說明"></a>筆記說明</h2><blockquote>
<p>此筆記用途在於台北科技大學資訊與財金管理系大一下財務管理中資本結構重點整理<br><font color="#dd0000">並非所有人都適用，部分對我而言稍加容易的內容並不會寫在此內。</font></p>
</blockquote>
<a id="more"></a>

<h5 id="名詞解釋"><a href="#名詞解釋" class="headerlink" title="名詞解釋"></a>名詞解釋</h5><ul>
<li>\(k = 負債資本成本\)</li>
<li>\(R_{s} = 權益資本成本 \)</li>
<li>\(EBIT = 稅前息前利潤\)</li>
<li>\( A = 舉債後普通股資本成本 \)</li>
<li>\( B = 舉債前普通股資本成本 \)</li>
</ul>
<h2 id="資本結構"><a href="#資本結構" class="headerlink" title="資本結構"></a>資本結構</h2><ul>
<li>資本來源<ul>
<li>長期負債</li>
<li>股東權益</li>
</ul>
</li>
<li>資本結構以負債比例衡量<ul>
<li>\(長期負債 / (股東權益 + 長期負債) \)</li>
<li>\(長期負債 / (股東權益) \) 筆記採用此定義</li>
</ul>
</li>
<li>公司價值總和計算<ol>
<li>未來所有現金流入之折現值</li>
<li>流通在外有價證劵 (股票加負債)總市值</li>
<li>上述兩者必相同</li>
</ol>
</li>
<li>資本成本<ul>
<li>資金使用者: 使用每一元付出的代價</li>
<li>資金提供者: 使用每一元獲得的報酬</li>
<li>資本成本計算<ul>
<li>\( \frac{明年現金股利}{普通股價格} + 股票成長率 \)</li>
</ul>
</li>
</ul>
</li>
<li>債務資本成本<ul>
<li>通常都以 % 為單位</li>
<li>\(資金成本 = 名目利息 - 名目利息 * 稅率 \)</li>
</ul>
</li>
<li>加權平均資金成本 (WACC)<ul>
<li>無公司所得稅時，舉債增加，WACC<strong>不變</strong></li>
<li>有公司所得稅時，舉債增加，WACC<strong>減少</strong></li>
<li>\(WACC = \frac{權益}{負債+權益} * 權益資本成本 + \frac{負債}{負債+權益} * 債務資本成本 * (1 - 所得稅率) \)</li>
</ul>
</li>
<li>固定投資成長<ul>
<li>\( PV = \frac{每年獲益量}{WACC - 成長率}\)</li>
</ul>
</li>
<li>公司價值與股東財富最大化<ul>
<li>公司價值增加，股東財富增加</li>
<li>如果資本結構影響公司價值，則經理人應讓公司價值極大化才能讓股東財富極大化</li>
</ul>
</li>
</ul>
<h2 id="MM理論"><a href="#MM理論" class="headerlink" title="MM理論"></a>MM理論</h2><ul>
<li><font color="#dd0000"><strong>無所得稅</strong></font><ul>
<li>在<font color="#dd0000"><strong>無所得稅</strong></font>下，公司價值與資本結構無關</li>
<li>\(公司價值 = \frac{EBIT}{普通股資本成本} \)</li>
<li>舉債後會提高普通股的資金成本，因舉債後公司風險上升，股東勢必會要求更高報酬率。公式與定義如下:<br>\(A = B +  (B - 此債務資本成本) * (舉債 / (公司價值 - 舉債) )\)<br>且總和必定會跟原先計算 WACC 不變</li>
</ul>
</li>
<li><font color="#dd0000"><strong>有所得稅</strong></font><ul>
<li>在<font color="#dd0000"><strong>有所得稅</strong></font>下，公司價值與資本結構有關且提升   </li>
<li>\(公司價值 = \frac{EBIT * (1 - 稅率)}{普通股資本成本} + 舉債 * 稅率\)</li>
<li>\(A = B + (B - 此債務資本成本) * (1 - 稅率) * (舉債 / (公司價值 - 舉債))\)</li>
</ul>
</li>
</ul>
<h2 id="槓桿關聯成本"><a href="#槓桿關聯成本" class="headerlink" title="槓桿關聯成本"></a>槓桿關聯成本</h2><ul>
<li>財務危機成本 (financial distress cost)<ul>
<li>直接破產成本: 公司已破產，申請破產之行政費用。如:律師、會計師行政費用</li>
<li>間接破產成本: 處於財務危機，避免破產而產生的相關費用</li>
</ul>
</li>
<li>負債代理成本<ul>
<li>債權人避免經理人做出對股東有利而對債權人不利的相關費用。如:監督經理人相關費用</li>
<li>高風險投資<ul>
<li>如投資成功，債權人只能拿到一樣利息，但股東可拿更多。反之，失敗則債權人可能完全拿不回來，股東也只會失去先前投資金額</li>
</ul>
</li>
<li>不作該做投資<ul>
<li>若投資案可能影響到股東利益，而使股東要求經理人不投資</li>
</ul>
</li>
<li>舉債發放現金股利<ul>
<li>損害公司的償債能力</li>
</ul>
</li>
</ul>
</li>
<li>債權人減少監督股東的代理成本做法<ol>
<li>限制舉債投資項目</li>
<li>舊債之優先求償權</li>
<li>限制債務期間現金股利發放</li>
<li>限制舉新債</li>
</ol>
</li>
</ul>
<h2 id="訊號發射理論"><a href="#訊號發射理論" class="headerlink" title="訊號發射理論"></a>訊號發射理論</h2><p>公司管理人員與投資人員存在資訊不對稱 (information asymmetry)，當公司資本結構已給投資人知道時，公司經營狀況就已經改變，投資人可在這時重新評估公司價值</p>
<ul>
<li>舉債增加<ul>
<li>有高獲利投資機會時，公司會選擇舉債而避免發行新股而造成利益稀釋</li>
</ul>
</li>
<li>發行新股<ul>
<li>公司投資機會風險高或經營狀況不佳時，所需資金則會以發行股票來獲得，以避免無法還債風險</li>
</ul>
</li>
<li><strong>舉債是好消息而發行新股是壞消息</strong></li>
<li>公司應該將負債水準控制在較低水準，有好機會再使用負債融資</li>
</ul>
<h2 id="融資順利理論"><a href="#融資順利理論" class="headerlink" title="融資順利理論"></a>融資順利理論</h2><p>融資可分成三類，保留盈餘、舉債、發行新股。而企業優先採有的資訊來源順序如下:</p>
<ol>
<li>保留盈餘</li>
<li>舉債</li>
<li>發行新股</li>
</ol>
<ul>
<li>此理論並不認為公司存在最理想之負債水準，公司視資金需要時機不同，而決定是否採用負債融資</li>
<li>此理論認為足夠獲利公司會先採用保留盈餘，MM理論則認為會先使用負債，達到稅盾效果</li>
<li>此理論認為最先利用應為保留盈餘，而備投資案所用。但MM理論考慮權益代理成本認為過多的自由現金會導致管理階層浪費</li>
</ul>
]]></content>
      <categories>
        <category>北科上課筆記</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>財務管理筆記</tag>
        <tag>北科大一下財務管理筆記</tag>
        <tag>北科上課筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>QUESTION! R 如果要讓程式碼換行要怎麼辦?</title>
    <url>/2020/08/12/R/R-coding-new-line/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>寫程式的時候是不可能沒遇到 bug 的，bug 紀錄整理</p>
</blockquote>
<a id="more"></a>


<h2 id="QUESTION-R-如果要讓程式碼換行要怎麼辦"><a href="#QUESTION-R-如果要讓程式碼換行要怎麼辦" class="headerlink" title="QUESTION: R 如果要讓程式碼換行要怎麼辦?"></a>QUESTION: R 如果要讓程式碼換行要怎麼辦?</h2><h3 id="answer"><a href="#answer" class="headerlink" title="answer:"></a>answer:</h3><p>如果是在 Rstudio 畫面時，就直接按 enter 即可，不須再加 \</p>
<h4 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h4><p><a href="https://bbs.pinggu.org/thread-2187964-1-1.html" target="_blank" rel="noopener">[问答] 在R程序脚本中如何换行</a></p>
<h2 id="QUESTION-R-的-if-要怎麼使用"><a href="#QUESTION-R-的-if-要怎麼使用" class="headerlink" title="QUESTION: R 的 if 要怎麼使用"></a>QUESTION: R 的 if 要怎麼使用</h2><h3 id="answer-1"><a href="#answer-1" class="headerlink" title="answer:"></a>answer:</h3><p>很簡單，但必須要注意 R 並不是用 <code>continue</code> 來當作下一個，而是使用 <code>next</code></p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">x &lt;- <span class="number">1</span>:<span class="number">5</span></span><br><span class="line"><span class="keyword">for</span> (val <span class="keyword">in</span> x) &#123;</span><br><span class="line">    <span class="keyword">if</span> (val == <span class="number">3</span>)&#123;</span><br><span class="line">    <span class="keyword">next</span></span><br><span class="line">    &#125;</span><br><span class="line">print(val)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="參考連結-1"><a href="#參考連結-1" class="headerlink" title="參考連結:"></a>參考連結:</h2><p><a href="https://www.datamentor.io/r-programming/break-next/" target="_blank" rel="noopener">R break and next Statement</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>程式語言的世界博大精神，要是沒有他們的付出我能走上現在的路嗎?<br>肯定是沒辦法的，於是我也需要更努力地去為社會付出。</p>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>貨幣時間價值筆記</title>
    <url>/2020/07/02/NTUT_note/time-value-of-money/</url>
    <content><![CDATA[<h2 id="筆記說明"><a href="#筆記說明" class="headerlink" title="筆記說明"></a>筆記說明</h2><blockquote>
<p>此筆記用途在於台北科技大學資訊與財金管理系大一下財務管理章節中貨幣時間價值筆記重點整理<br><font color="#dd0000">並非所有人都適用，部分對我而言稍加容易的內容並不會寫在此內。</font></p>
</blockquote>
<a id="more"></a>

<h5 id="名詞解釋"><a href="#名詞解釋" class="headerlink" title="名詞解釋"></a>名詞解釋</h5><ul>
<li>\(m = 月份\)</li>
<li>\(r = 利率 \)</li>
</ul>
<h2 id="複利與有效年利率"><a href="#複利與有效年利率" class="headerlink" title="複利與有效年利率"></a>複利與有效年利率</h2><ul>
<li>\(現值 = PV \)</li>
<li>問複利的利率，給期初、期末金額<ul>
<li>\( (期末/期初)^{\frac{1}{年數}}\)</li>
</ul>
</li>
<li>七二法則<ul>
<li>如果利率為 k 倍，期數為 n，則要使本金成長一倍的時間可由 \(k * n = 72 \)來求出近似值。</li>
</ul>
</li>
<li>複利<ul>
<li>\( FV = PV*(1+\frac{r}{m})^{m}\)   </li>
</ul>
</li>
<li>有效年利率 \( EAR \)<ul>
<li>\(EAR = (1+ \frac{r}{m})^{m} -1 \)</li>
</ul>
</li>
<li>連續複利下的 EAR <ul>
<li>\((1+ \frac{r}{m})^{m} -1 \)</li>
</ul>
</li>
</ul>
<h2 id="年金"><a href="#年金" class="headerlink" title="年金"></a>年金</h2><ul>
<li>普通年金<ul>
<li>每一期<strong>末</strong>領取或支付金額，直到期滿為止</li>
</ul>
</li>
<li>期初年金<ul>
<li>每一期<strong>初</strong>領取或支付金額，直到期滿為止</li>
</ul>
</li>
<li>永續年金<ul>
<li>普通年金或期初年金方式，但期數為無限多期</li>
</ul>
</li>
</ul>
<h3 id="普通、期初年金計算機按法"><a href="#普通、期初年金計算機按法" class="headerlink" title="普通、期初年金計算機按法"></a>普通、期初年金計算機按法</h3><ol>
<li>點 CMPD</li>
<li>PMT 為每年要付的金額</li>
<li>FV 未來要提領的金額</li>
<li>I 利率</li>
<li>n 期數</li>
<li>set 選擇普通年金還是期初年金</li>
<li>PV 現在所提領金額 (基本上不用到)</li>
<li><strong>未用到的數值都要歸零</strong></li>
</ol>
<h3 id="永續年金計算方式"><a href="#永續年金計算方式" class="headerlink" title="永續年金計算方式"></a>永續年金計算方式</h3><p>\(PV = \frac{PMT}{r}\)</p>
<h2 id="貸款形式與攤銷"><a href="#貸款形式與攤銷" class="headerlink" title="貸款形式與攤銷"></a>貸款形式與攤銷</h2><ul>
<li>純折價貸款 (pure discont loan)<ul>
<li>期初借入，期中<strong>不給錢</strong>，期末一次給清</li>
</ul>
</li>
<li>純付息貸款 (interest-only loan)<ul>
<li>期初借入，期中<strong>付利息</strong>，期末付最後一次利息與本金</li>
</ul>
</li>
<li>分期貸款 (amortized loan) 有下述兩種<ol>
<li>期初借入，期中<strong>付利息也支付固定金額償還本金欠款</strong>，期末償還完畢</li>
<li>期初借入，期中<strong>支付固定金額內包含部分本金與利息</strong>，期末償還完畢</li>
</ol>
</li>
</ul>
<h3 id="貸款題型"><a href="#貸款題型" class="headerlink" title="貸款題型"></a>貸款題型</h3><ul>
<li>氣球型貸款<ul>
<li>給你帶 x 年貸款，但在第 y 年時貸款就必須付清。其中 x &gt; y <ol>
<li>每月底償付固定本息的金額是多少?<br>A:  一樣用 x 算不必在算 y</li>
<li>y 年到期時時未償還金額為多少?<br>A:  將第一題算出的 PMT 帶入年金公式即可，因為它題目詢問為現值。</li>
</ol>
</li>
</ul>
</li>
<li>每 x 年支付一次的年金，利率應該怎麼算?<ul>
<li>\(利率 = (1+r)^{x}-1\)</li>
</ul>
</li>
<li>我每年付 x 年，但我最後 y 年都必須提取 z 元，則我每年該存入多少固定資金<ol>
<li>使用期初年金公式，先將 y 年存取 z 元折現回來，那就是我們要存錢時期的最後終值</li>
<li>再用最後終值帶入普通年金公式，PMT就是我們要的答案</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>北科上課筆記</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>財務管理筆記</tag>
        <tag>北科大一下財務管理筆記</tag>
        <tag>北科上課筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>透過 plumber 完成 RESTAPI 在 R 上的應用</title>
    <url>/2020/07/23/R/R-api/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>RESTAPI 有點類似於打包程式碼成為 class 的概念，一開始再碰 RESTAPI 會較難懂。<del>我第一次學 API 就是現在，我花了快兩三個小時才懂RRR</del><br>plumber 可以應用在 RESTAPI<br>以下紀錄 plumber 在 R 上的應用與<strong><font color="#dd0000">需要注意的地方</font></strong></p>
</blockquote>
<a id="more"></a>

<h2 id="安裝-plumber"><a href="#安裝-plumber" class="headerlink" title="安裝 plumber"></a>安裝 plumber</h2><p>首先需要 plumber</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">install.packages(<span class="string">"plumber"</span>)</span><br></pre></td></tr></table></figure>

<h2 id="教學範例"><a href="#教學範例" class="headerlink" title="教學範例"></a>教學範例</h2><h3 id="使用-R-plumber-可以檢的使用-R-創建-RESTFUL-API，plumber-識別-，以下提供簡單範例"><a href="#使用-R-plumber-可以檢的使用-R-創建-RESTFUL-API，plumber-識別-，以下提供簡單範例" class="headerlink" title="使用 R plumber 可以檢的使用 R 創建 RESTFUL API，plumber 識別 #*，以下提供簡單範例"></a>使用 R <code>plumber</code> 可以檢的使用 R 創建 RESTFUL API，plumber 識別 <code>#*</code>，以下提供簡單範例</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(plumber)</span><br><span class="line"></span><br><span class="line"><span class="comment">#* @method /url</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#* Echo provided text</span></span><br><span class="line"><span class="comment">#* @param text The text to be echoed in the response</span></span><br><span class="line"><span class="comment">#* @get /echo</span></span><br><span class="line"><span class="keyword">function</span>(text = <span class="string">""</span>) &#123;</span><br><span class="line">  list(</span><br><span class="line">    message_echo = paste(<span class="string">"The text is:"</span>, text)</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="在-R-上面啟動-api-指令"><a href="#在-R-上面啟動-api-指令" class="headerlink" title="在 R 上面啟動 api 指令"></a>在 R 上面啟動 api 指令</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">plumber::plumb(file=<span class="string">'./plumber.R'</span>)$run(port = <span class="number">5762</span>)</span><br></pre></td></tr></table></figure>

<p>其中 port 可以忽略不打(則會隨機產生)，接下來用 curl 來試著呼叫</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl --data &quot;text&#x3D;hi_my_friend&quot; &quot;localhost:5762&#x2F;echo&quot;</span><br></pre></td></tr></table></figure>

<h3 id="如果要輸出-json-呢"><a href="#如果要輸出-json-呢" class="headerlink" title="如果要輸出 json 呢"></a>如果要輸出 json 呢</h3><p>這點 R 完全幫你做好，R 可以自動幫你轉成 json，但還是有少部分情況例外。<strong><font color="#dd0000">裡面完全不需要轉成 json，就放心地給他輸出吧！</font></strong></p>
<h3 id="我想要輸入-json，但我卻輸入不進去"><a href="#我想要輸入-json，但我卻輸入不進去" class="headerlink" title="我想要輸入 json，但我卻輸入不進去.."></a>我想要輸入 json，但我卻輸入不進去..</h3><p>這點就比較有趣了，看下面的程式碼就能了解箇中奧妙</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#* parse JSON</span></span><br><span class="line"><span class="comment">#* @param req  the request object</span></span><br><span class="line"><span class="comment">#* @get /json</span></span><br><span class="line"><span class="comment">#* @post /json</span></span><br><span class="line">echo_json &lt;- <span class="keyword">function</span>(req)&#123;</span><br><span class="line">  print(req$postBody)</span><br><span class="line">  <span class="keyword">return</span>(req$postBody)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看到了嘛!? 我們必須在物件後使用 <code>$postBody</code>，就可以成功輸入 json</p>
<h3 id="我遇到了一個問題，我不懂要怎麼把-json-post-給-api"><a href="#我遇到了一個問題，我不懂要怎麼把-json-post-給-api" class="headerlink" title="我遇到了一個問題，我不懂要怎麼把 json post 給 api"></a>我遇到了一個問題，我不懂要怎麼把 json post 給 api</h3><p>小問題，我已經試過了，早就狀況排除了~ <del>血與淚的過程</del></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl &quot;localhost:8551&#x2F;url&quot; --header &quot;Content-type:application&#x2F;json&quot; -X POST -d @path&#x2F;file</span><br></pre></td></tr></table></figure>

<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>其實不得不說，要不是因為有上班的地方願意讓我磨練，不然我可能連 api 是甚麼都還需要等到未來 2,3 年後我才能夠熟悉並且知道這些事物，也很謝謝<strong>高鈺成學長</strong>在我有些遇到狀況時會給我些許提示，然後專案報告真的好趕阿QwQ，希望我能夠如期做完，那就是最完美的了！謝謝 <strong>Luft 學長</strong> 幫我很多忙，也謝謝 steam 基礎教育聯盟給我機會學習。</p>
<h2 id="連結"><a href="#連結" class="headerlink" title="連結"></a>連結</h2><p>我在翻找資料的過程中，閱讀到一些對我非常有意義的資料。如下:</p>
<p><a href="https://rviews.rstudio.com/2018/07/23/rest-apis-and-plumber/" target="_blank" rel="noopener">REST APIs and Plumber</a><br><a href="https://www.rplumber.io/articles/routing-and-input.html" target="_blank" rel="noopener">Routing &amp; Input</a><br><a href="https://stackoverflow.com/questions/51944328/sending-json-file-in-curl-and-receiving-it-in-r-using-plumber/51945300#51945300" target="_blank" rel="noopener">Sending json file in curl and receiving it in R using plumber</a><br><a href="https://stackoverflow.com/questions/7172784/how-do-i-post-json-data-with-curl" target="_blank" rel="noopener">How do I POST JSON data with cURL?</a></p>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
        <tag>RESTAPI</tag>
      </tags>
  </entry>
  <entry>
    <title>ERROR! source(path) 裡面有中文字體時會出現無效位元的輸出解析</title>
    <url>/2020/08/12/R/R-chinese-bug/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>寫程式的時候是不可能沒遇到 bug 的，bug 紀錄整理</p>
</blockquote>
<a id="more"></a>

<h2 id="ERROR-source-path-裡面有中文字體時會出現無效位元的輸出解析"><a href="#ERROR-source-path-裡面有中文字體時會出現無效位元的輸出解析" class="headerlink" title="ERROR: source(path) 裡面有中文字體時會出現無效位元的輸出解析"></a>ERROR: source(path) 裡面有中文字體時會出現無效位元的輸出解析</h2><blockquote>
<p>由於 R 對於漢字的不友善，使華語系國家需要使用其他方式來解決漢字問題。</p>
</blockquote>
<h3 id="solution-1"><a href="#solution-1" class="headerlink" title="solution 1:"></a>solution 1:</h3><p>嘗試用著各位前輩完成的方法</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">source</span>(path,encoding = <span class="string">"UTF-8"</span> , local=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>
<h3 id="solution-2"><a href="#solution-2" class="headerlink" title="solution 2:"></a>solution 2:</h3><p>須將 source 改寫，透過 <code>R eval()</code>進行改寫，eval() 可將字串變成表達式(即 R 的程式碼)使用。<br>R 是可以進行覆寫的語言，可用這招來解決問題。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">source</span> &lt;- <span class="keyword">function</span>(path, encoding = <span class="string">'UTF-8'</span>) &#123;</span><br><span class="line">    l &lt;- readLines(path, encoding=encoding)</span><br><span class="line">    eval(parse(text=l),envir=.GlobalEnv)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">source</span>(path)</span><br></pre></td></tr></table></figure>
<p>envir = 環境<br>.GlobalEnv = 全域環境</p>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://stackoverflow.com/questions/5031630/how-to-source-r-file-saved-using-utf-8-encoding" target="_blank" rel="noopener">How to source() .R file saved using UTF-8 encoding?</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>程式語言的世界博大精神，要是沒有他們的付出我能走上現在的路嗎?<br>肯定是沒辦法的，於是我也需要更努力地去為社會付出。</p>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>QUESTION! data.frame 要 append 新 data 太麻煩，有沒有比較快的方法?</title>
    <url>/2020/08/12/R/R-data-frame-append-data/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>寫程式的時候是不可能沒遇到 bug 的，bug 紀錄整理</p>
</blockquote>
<a id="more"></a>

<h2 id="QUESTION-data-frame-要-append-新-data-太麻煩，有沒有比較快的方法"><a href="#QUESTION-data-frame-要-append-新-data-太麻煩，有沒有比較快的方法" class="headerlink" title="QUESTION: data.frame 要 append 新 data 太麻煩，有沒有比較快的方法?"></a>QUESTION: data.frame 要 append 新 data 太麻煩，有沒有比較快的方法?</h2><h3 id="answer"><a href="#answer" class="headerlink" title="answer:"></a>answer:</h3><p>那肯定是有的，使用最新的 tribble，就可以搞定。但要記住一開始如果宣告的為空值則必須使用</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">t &lt;- tribble(x=character() , y=numeric())</span><br></pre></td></tr></table></figure>
<p>之後如果要加入資料就使使用</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">t &lt;- tribble(t , x=num , y = num)</span><br></pre></td></tr></table></figure>
<p><strong><font color="#dd0000">必須特別注意: 他要求型態，於是你每次 add 的資料型態都絕對必須要對，可以從這裡進行檢查</font></strong></p>
<h4 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h4><p><a href="https://stackoverflow.com/questions/48833807/initialize-an-empty-tibble-with-column-names-and-0-rows" target="_blank" rel="noopener">Initialize an empty tibble with column names and 0 rows</a><br><a href="https://github.com/tidyverse/tibble/issues/215" target="_blank" rel="noopener">Allow tribble to create empty tibble with defined column type</a><br><a href="https://tibble.tidyverse.org/reference/add_row.html" target="_blank" rel="noopener">Add rows to a data frame</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>程式語言的世界博大精神，要是沒有他們的付出我能走上現在的路嗎?<br>肯定是沒辦法的，於是我也需要更努力地去為社會付出。</p>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>透過 httr 來使用 API 完成在 R 上的應用</title>
    <url>/2020/08/13/R/R-httr/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>透過 httr 來方便 R 的使用者 post , get …。<br>以下紀錄 httr 在 R 上的應用與</p>
</blockquote>
<a id="more"></a>

<h2 id="安裝-httr"><a href="#安裝-httr" class="headerlink" title="安裝 httr"></a>安裝 httr</h2><p>當然需要安裝 httr 呀</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">install.packages(<span class="string">"httr"</span>)</span><br></pre></td></tr></table></figure>

<h2 id="教學範例"><a href="#教學範例" class="headerlink" title="教學範例"></a>教學範例</h2><p>我會記錄關於我所有用到的相關語法，會不斷進行補充</p>
<h3 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">object &lt;- POST(url , body=list(data) , timeout(seconds) , encode = c(<span class="string">"multipart"</span>,<span class="string">"text"</span> , <span class="string">"json"</span>),  accept_json())</span><br></pre></td></tr></table></figure>
<p><strong>url</strong> = 網址<br><strong>body</strong> 則放入你需要傳送給他的資料，EX: 密碼…<br><strong>timeout()</strong> 最多等待幾秒後就退出<br>程式範例如下 <code>body = list(a=1 , b=2 , c=3)</code><br><strong>encode</strong> 編碼有分</p>
<ol>
<li>multipart 多重</li>
<li>text 文字</li>
<li>json </li>
</ol>
<h3 id="傳進來的資料竟然只是資料介紹"><a href="#傳進來的資料竟然只是資料介紹" class="headerlink" title="傳進來的資料竟然只是資料介紹!"></a>傳進來的資料竟然只是資料介紹!</h3><p>傳進來的資料其實都還並不算是資料，應該算是「資料介紹」，需要再加 </p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">content(object)</span><br></pre></td></tr></table></figure>
<p>就可以了。</p>
<h3 id="將傳進來的資料轉換成-json"><a href="#將傳進來的資料轉換成-json" class="headerlink" title="將傳進來的資料轉換成 json"></a>將傳進來的資料轉換成 json</h3><p>則需要些比較麻煩的方式，然後注意 <strong>encoding</strong> 必須正確。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">library</span>(jsonlite)</span><br><span class="line">data_json &lt;- jsonlite::fromJSON(content(data , type=<span class="string">"text"</span> , encoding=<span class="string">"UTF8"</span>))</span><br></pre></td></tr></table></figure>

<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://community.rstudio.com/t/get-timeout-error-httr-package-error-in-curl/21349" target="_blank" rel="noopener">GET Timeout Error - httr package - Error in Curl</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>httr 真的很好用，他是我在學 R 過程中最容易上手的 ಥ⌣ಥ。能夠將難的東西變成簡單，我真的敬佩那些人的能力。比起 igraph 真的好用太多..，不過應該是我不會用拉，我沒慧根。</p>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
        <tag>RESTAPI</tag>
      </tags>
  </entry>
  <entry>
    <title>ERROR! A 物件無法轉成 B 物件</title>
    <url>/2020/08/12/R/R-objectA-convert-to-objectB/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>寫程式的時候是不可能沒遇到 bug 的，bug 紀錄整理</p>
</blockquote>
<a id="more"></a>

<h2 id="ERROR-A-物件無法轉成-B-物件"><a href="#ERROR-A-物件無法轉成-B-物件" class="headerlink" title="ERROR: A 物件無法轉成 B 物件"></a>ERROR: A 物件無法轉成 B 物件</h2><h3 id="solution-1"><a href="#solution-1" class="headerlink" title="solution 1:"></a>solution 1:</h3><p>上網查找其他替代語法或套件進行解決。</p>
<h3 id="solution-2"><a href="#solution-2" class="headerlink" title="solution 2:"></a>solution 2:</h3><p>也許有可能是你其他套件與此語法一樣，但並不支持 A 物件轉成 B 物件，嘗試考慮在前面加上 namespace，EX: 套件::語法()</p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>程式語言的世界博大精神，要是沒有他們的付出我能走上現在的路嗎?<br>肯定是沒辦法的，於是我也需要更努力地去為社會付出。</p>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux R 在 install packages 遇到的問題集</title>
    <url>/2020/07/24/R/R-server-install-package/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>以 <strong>CentOS 6</strong> 為例，在這會遇到非常多關於 R server 要安裝套件時遇到的問題，在這邊進行記錄。</p>
</blockquote>
<a id="more"></a>

<h2 id="Warning-關於-Install-Packages-的萬用解"><a href="#Warning-關於-Install-Packages-的萬用解" class="headerlink" title="Warning: 關於 Install Packages 的萬用解"></a>Warning: 關於 Install Packages 的萬用解</h2><p>可先嘗試用此方法，假如不行再根據下面錯誤改變</p>
<h3 id="solution-1"><a href="#solution-1" class="headerlink" title="solution 1"></a>solution 1</h3><p>嘗試用此方法</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">install.packages(<span class="string">"packages"</span>, dependencies = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>
<h3 id="連結"><a href="#連結" class="headerlink" title="連結"></a>連結</h3><p><a href="https://stackoverflow.com/questions/20923209/problems-installing-the-devtools-package" target="_blank" rel="noopener">Problems installing the devtools package</a></p>
<h2 id="Warning-unable-to-access-index-for-repository-https-cran-csie-ntu-edu-tw-src-contrib"><a href="#Warning-unable-to-access-index-for-repository-https-cran-csie-ntu-edu-tw-src-contrib" class="headerlink" title="Warning: unable to access index for repository https://cran.csie.ntu.edu.tw/src/contrib"></a>Warning: unable to access index for repository <a href="https://cran.csie.ntu.edu.tw/src/contrib" target="_blank" rel="noopener">https://cran.csie.ntu.edu.tw/src/contrib</a></h2><h3 id="solution-1-1"><a href="#solution-1-1" class="headerlink" title="solution 1:"></a>solution 1:</h3><p>嘗試看看至 chooseCRANmirror() 然後再使用 http ， <strong><font color="#dd0000">注意，並不是 https</font></strong></p>
<h4 id="連結-1"><a href="#連結-1" class="headerlink" title="連結"></a>連結</h4><h2 id="Warning-message-package-‘magrittr’-is-not-available-for-R-version-3-2-0"><a href="#Warning-message-package-‘magrittr’-is-not-available-for-R-version-3-2-0" class="headerlink" title="Warning message: package ‘magrittr’ is not available (for R version 3.2.0)"></a>Warning message: package ‘magrittr’ is not available (for R version 3.2.0)</h2><h3 id="solution-1-2"><a href="#solution-1-2" class="headerlink" title="solution 1:"></a>solution 1:</h3><p>透過 Bioconductor ，嘗試並下載或更新套件包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source(&quot;http:&#x2F;&#x2F;bioconductor.org&#x2F;biocLite.R&quot;)</span><br><span class="line">biocLite(&quot;包名&quot;)</span><br></pre></td></tr></table></figure>
<h4 id="連結-2"><a href="#連結-2" class="headerlink" title="連結"></a>連結</h4><p><a href="https://blog.csdn.net/yepeng2007fei/article/details/78112557" target="_blank" rel="noopener">R语言 关于package’***’ is not available(for R version 3.4.1)</a></p>
<h2 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h2>]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 shinyapps 建立網站</title>
    <url>/2020/07/28/R/R-shinyapps-experence/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>shinyapps 也是一個說坑不坑，建立起來速度很快，但是又有很多小細節要處理。<br>以下紀錄 shinyapps 怎麼建立網站與<strong><font color="#dd0000">需要注意的地方</font></strong></p>
</blockquote>
<a id="more"></a>

<h2 id="前置作業"><a href="#前置作業" class="headerlink" title="前置作業"></a>前置作業</h2><ul>
<li>需要有 R </li>
<li>需要註冊 shinyapps 這<a href="https://ithelp.ithome.com.tw/articles/10197292" target="_blank" rel="noopener">網站</a>教學不錯，建議點擊</li>
<li>you need server.R and ui.R </li>
</ul>
<h2 id="安裝教學"><a href="#安裝教學" class="headerlink" title="安裝教學"></a>安裝教學</h2><ol>
<li><p>首先需要安裝 rsconnect</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">install.packages(&quot;rsconnect&quot;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>點擊<a href="https://ithelp.ithome.com.tw/articles/10197292" target="_blank" rel="noopener">網站</a>查看關於 shinyapps 的教學</p>
</li>
<li><p>執行!<br>很簡單吧，一下子就完成了。這時候直接按 R studio 右上角的 run 即可，如果測試成功後，可直接點擊發布</p>
</li>
<li><p>發布<br><img src="/images/R-shinyapps-experence/1.PNG" alt=""><br>先點擊右上角的紅色圈圈，跳出視窗後點擊 publish，稍等一刻就可以看到結果拉！</p>
</li>
</ol>
<h2 id="錯誤排除"><a href="#錯誤排除" class="headerlink" title="錯誤排除"></a>錯誤排除</h2><h3 id="等等，為甚麼我出來的是一段英文字母不是我的網頁阿"><a href="#等等，為甚麼我出來的是一段英文字母不是我的網頁阿" class="headerlink" title="等等，為甚麼我出來的是一段英文字母不是我的網頁阿"></a>等等，為甚麼我出來的是一段英文字母不是我的網頁阿</h3><p>漂亮，兄弟。你已進入到 shinyapps 深淵中的第一步，還有好多步在等著你喔 QwQ。<br><img src="/images/R-shinyapps-experence/2.PNG" alt=""></p>
<h3 id="所有程式碼都必須要用-utf-8-編碼"><a href="#所有程式碼都必須要用-utf-8-編碼" class="headerlink" title="所有程式碼都必須要用 utf-8 編碼"></a>所有程式碼都必須要用 utf-8 編碼</h3><p>只要是需要上傳至 shinyapps 的都必須需要使用 utf-8 編碼，否則無法上傳成功。並在 source 屬性內加入 local=TRUE</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">source</span>(path , local=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure>

<h3 id="有用到其他檔案，但是無法推送給-server-成功"><a href="#有用到其他檔案，但是無法推送給-server-成功" class="headerlink" title="有用到其他檔案，但是無法推送給 server 成功"></a>有用到其他檔案，但是無法推送給 server 成功</h3><p>這就需要特別注意了，這邊我也是花了約 1 小時才找出問題，如果你需要用到其他檔案<strong>一定要在 server.R and ui.R 的目錄層下</strong>，不然他沒辦法跑動。<br>P.S. 我猜測她是會直接把 server.R and ui.R 裡面的資料全部推送給 shinyapps。</p>
<h3 id="如果你真的很需要很需要用到中文，那怎麼辦"><a href="#如果你真的很需要很需要用到中文，那怎麼辦" class="headerlink" title="如果你真的很需要很需要用到中文，那怎麼辦?"></a>如果你真的很需要很需要用到中文，那怎麼辦?</h3><p>目前根據我的嘗試，你只要能夠將中文放在 server.R 或是 其他 source，是可以成功出現中文字體。其他方式我還沒嘗試需要各位的努力拉!</p>
<h4 id="連結說明"><a href="#連結說明" class="headerlink" title="連結說明"></a>連結說明</h4><p><a href="https://dotblogs.com.tw/Im_sqz777/2017/07/26/220713" target="_blank" rel="noopener">Web 基本觀念 - 相對路徑 和 絕對路徑</a><br><a href="https://support.rstudio.com/hc/en-us/articles/229848967-Why-does-my-app-work-locally-but-not-on-shinyapps-io-" target="_blank" rel="noopener">為什麼我的應用程序可以在本地運行，而不能在Shinyapps.io上運行？</a></p>
<h3 id="程式若有提到路徑則全必須使用相對路徑"><a href="#程式若有提到路徑則全必須使用相對路徑" class="headerlink" title="程式若有提到路徑則全必須使用相對路徑"></a>程式若有提到路徑則全必須使用相對路徑</h3><p>如果你是使用絕對路徑，非常高的機率會出錯，可以去 shinyapps 的 log 檔查看，應該會出現</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Warning: Error in file: 無法開啟連結</span><br></pre></td></tr></table></figure>
<p>這裡使用相對路徑則沒有問題</p>
<h3 id="如果有從外部加入檔案，但檔案編碼並非是-utf-8-則需要特別注意"><a href="#如果有從外部加入檔案，但檔案編碼並非是-utf-8-則需要特別注意" class="headerlink" title="如果有從外部加入檔案，但檔案編碼並非是 utf-8 則需要特別注意"></a>如果有從外部加入檔案，但檔案編碼並非是 utf-8 則需要特別注意</h3><p>我這次的經驗為 csv 編碼是用 big5，所以當我程式碼都有使用 utf-8 編碼時，他還是跟我說這裡出現問題，在我花了許多時間去除錯後，根據其他大佬得出如果外部檔案並非使用 utf-8，必須先在將檔案讀入程式時增加 fileEncoding = “編碼代號”，即可完成。</p>
<h4 id="連結說明-1"><a href="#連結說明-1" class="headerlink" title="連結說明"></a>連結說明</h4><p><a href="https://www.ptt.cc/bbs/R_Language/M.1421390552.A.D5C.html" target="_blank" rel="noopener">讀取csv檔的小問題</a><br><a href="https://stackoverflow.com/questions/14363085/invalid-multibyte-string-in-read-csv" target="_blank" rel="noopener">Invalid multibyte string in read.csv</a></p>
<h2 id="我覺得這應該會很有用，但是我現在還用不到"><a href="#我覺得這應該會很有用，但是我現在還用不到" class="headerlink" title="我覺得這應該會很有用，但是我現在還用不到"></a>我覺得這應該會很有用，但是我現在還用不到</h2><p>由於我在翻找資料的過程中，找到一篇文章。感覺會對未來有幫助，所以先留下來<br><a href="https://d.cosx.org/d/412685-shinyapps" target="_blank" rel="noopener">[已解决] shinyapps 的中文显示问题</a></p>
<h2 id="R-shiny-一些小技巧"><a href="#R-shiny-一些小技巧" class="headerlink" title="R shiny 一些小技巧"></a>R shiny 一些小技巧</h2><p>可以的話，盡量不要將資料寫在 mainpanel，寫在 tabPanel，可以少掉一些使用者如果來回點擊網頁時，先前網頁的畫面內容殘留。</p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>其實要很感謝寫 shiny 套件，還讓我們免費發佈在 shinyapps 的強大團隊，才有辦法讓我僅僅只使用 R，就可以讓我獨自一人建立網站，雖然有很多坑、很多雷點，但是其實只要修復好了，我對於雷點甚麼的就沒那麼怨恨XD，雖然當下還是會不開心拉，但是現在的我因為有 shiny 幫助我，反而更開心！也謝謝北市大教授 <strong>魏惠貞</strong> 給我機會讓我學習到，真的很謝謝老師。</p>
<h2 id="更新日誌"><a href="#更新日誌" class="headerlink" title="更新日誌"></a>更新日誌</h2><p>2020-07-20 14:45:16 - 建立文章<br>2020-07-28 20:42:25 - 增加錯誤排除</p>
<ol>
<li>有用到其他檔案，但是無法推送給 server 成功</li>
<li>如果你真的很需要很需要用到中文，那怎麼辦?</li>
<li>所有程式碼都必須要用 utf-8 編碼</li>
</ol>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>R-teach</title>
    <url>/2020/05/01/R/R-teach/</url>
    <content><![CDATA[<h2 id="主要"><a href="#主要" class="headerlink" title="主要"></a>主要</h2><p>此網頁主要是在幫助大衛在 北市大幼保系研究助理期間中所遇到的 R 語言問題。</p>
<p>並非教學用，但學習資源會在這並透過我加以整理。</p>
<ol>
<li><a href="https://cran.r-project.org/bin/windows/base/" target="_blank" rel="noopener">R download</a></li>
<li><a href="https://rstudio.com/products/rstudio/download/" target="_blank" rel="noopener">Rstudio download</a></li>
<li><a href="https://joe11051105.gitbooks.io/r_basic/content/environment_settings/RStudio_introduction.html" target="_blank" rel="noopener">Rstudio introduction</a></li>
<li><a href="https://cosx.org/2009/07/studying-notes-on-oop-in-r/" target="_blank" rel="noopener">R_oop</a></li>
<li><a href="https://blog.gtwang.org/r/r-vectors-matrices-and-arrays/" target="_blank" rel="noopener">R_vector</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10197004" target="_blank" rel="noopener">使用 R 與 C# 開發網站</a></li>
<li><a href="https://molecular-service-science.com/2015/08/01/r-shiny-business-intelligence-tutorial/" target="_blank" rel="noopener">R shiny 套件可運用在網頁上</a></li>
<li><a href="https://shiny.rstudio.com/reference/shiny/latest/" target="_blank" rel="noopener">shiny 語法大全</a></li>
<li><a href="https://shiny.rstudio.com/gallery/" target="_blank" rel="noopener">shiny 套版</a></li>
<li><a href="https://github.com/daattali/shinyjs/issues/16" target="_blank" rel="noopener">useShinyjs() in navbarPage()</a></li>
<li><a href="https://stackoverflow.com/questions/40621393/disabling-buttons-in-shiny" target="_blank" rel="noopener">Disabling buttons in Shiny</a></li>
<li><a href="https://statistics.berkeley.edu/computing/r-t-tests" target="_blank" rel="noopener">R test 圖表繪製</a></li>
<li><a href="http://yanping.me/shiny-tutorial" target="_blank" rel="noopener">中文教程：用R构建Shiny应用程序</a></li>
</ol>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa10050 - Combination Lock</title>
    <url>/2020/03/30/UVa/UVa10050/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>解保險箱鎖盤，透過他獨家的開鎖方式，試問你需要轉幾度，</p>
<ol>
<li>先轉順時鐘兩圈</li>
<li>順時鐘轉到第 1 個密碼</li>
<li>逆時鐘再轉一圈</li>
<li>逆時鐘轉第二個密碼</li>
<li>順時鐘轉第三個密碼</li>
</ol>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>在開鎖時，必定要轉 3 圈，所以角度 必定是 360*3。</p>
<font color="#dd0000">
當順時鐘在轉時，但表其實是逆時鐘，我理解了很久才能理解 (作者理解力還需加強)

<p>Ex: 0度 轉至 30度<br>A:  你會覺得 應該是轉了 30度，但不是這樣的。<br>    對於表的指針來說，實際上只轉了 10度。 (酷吧)</p>
<p>逆時鐘則將 0 , 30 互換即可，意思大同小異。<br></font></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> a, b, c, d ;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d &amp;&amp; (a + b + c + d) != <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> calibration = <span class="number">120</span>;</span><br><span class="line">        calibration += (<span class="number">40</span> + a - b ) % <span class="number">40</span> ;</span><br><span class="line">        calibration += (<span class="number">40</span> - b + c ) % <span class="number">40</span> ;</span><br><span class="line">        calibration += (<span class="number">40</span> + c - d ) % <span class="number">40</span> ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; calibration * <span class="number">9</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa10036 - Divisibility</title>
    <url>/2020/03/17/UVa/UVa10036/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>給你 n 個數字 與 x ，在 n 個數字中加上 - or + ， 判斷組合後的總合是否可以被 x 整除?</p>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>可能很多人會想排列組合，但會TLE</p>
<p><font color="#dd0000"><strong>但是，想法其實只要在稍微思考一下就能想通了 <del>(除非你太笨)</del></strong></font></p>
<p>每一次在幫數字做 加減法後餘數儲存至二維陣列，狀態轉移即可 (是不是不難阿)</p>
<p>可寫成 DP 遞迴式， Dp[y + 1 , intNum[i] % x  ]= DP[ y , intNum[i] ]</p>
<p>其中 y 為第 n 個數字， intNum 為 數字隊列。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> intMap[<span class="number">10010</span>][<span class="number">110</span>] = &#123;<span class="number">0</span>&#125; ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">non_negative</span><span class="params">(<span class="keyword">int</span> intNum , <span class="keyword">int</span> K , <span class="keyword">int</span> J)</span></span>&#123;</span><br><span class="line">    <span class="comment">//debug</span></span><br><span class="line">    <span class="comment">//cout &lt;&lt; intNum &lt;&lt; ' ' ;</span></span><br><span class="line"></span><br><span class="line">    intNum = (intNum + J ) % K ;</span><br><span class="line">    <span class="keyword">while</span>(intNum &lt; <span class="number">0</span>)</span><br><span class="line">        intNum += K ;</span><br><span class="line">    <span class="keyword">return</span> intNum % K ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_map</span><span class="params">(<span class="keyword">int</span> *intMap , <span class="keyword">int</span> N , <span class="keyword">int</span> K)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; N ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; K ; j++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; *(intMap + i + j) &lt;&lt; <span class="string">' '</span> ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> intCase , N , K ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; intCase ;</span><br><span class="line">    <span class="keyword">while</span>(intCase--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; K ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; N &lt;&lt; K ;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> intNum[N] ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**&lt; debug</span></span><br><span class="line"><span class="comment">        for(int i = 0 ; i &lt; N ; i++)&#123;</span></span><br><span class="line"><span class="comment">            for(int j = 0 ; j &lt; K ; j++)</span></span><br><span class="line"><span class="comment">                cout &lt;&lt; intMap[i][j] &lt;&lt; ' ' ;</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//print_map((int *)intMap , N , K ) ;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; N ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; K ; j++)</span><br><span class="line">                intMap[i][j] = <span class="number">0</span> ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; N ; i++)</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; intNum[i] ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**&lt;//debug</span></span><br><span class="line"><span class="comment">        for(int i = 0 ; i &lt; N ; i++)</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; intNum[i] &lt;&lt; ' ' ;</span></span><br><span class="line"><span class="comment">        cout &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        intMap[<span class="number">0</span>][non_negative(intNum[<span class="number">0</span>], K , <span class="number">0</span> )] = <span class="number">1</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; N ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; K ; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(intMap[i<span class="number">-1</span>][j])&#123;</span><br><span class="line">                    intMap[i][ non_negative(intNum[i], K , j ) ] = <span class="number">1</span> ;</span><br><span class="line">                    intMap[i][ non_negative(-intNum[i], K , j ) ] = <span class="number">1</span> ;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//print_map((int *)intMap , N , K ) ;</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; intMap[N-1][0] &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(intMap[N<span class="number">-1</span>][<span class="number">0</span>])</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Divisible"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Not divisible"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>UVa</tag>
        <tag>動態規劃</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa10101 - Bangla Numbers</title>
    <url>/2020/04/09/UVa/UVa10101/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給一數字，用題目獨家的單位詞做輸出</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>透過遞迴 (recursive)，來幫助 x lakh y kuti。<br>數字要開 long long</p>
<p><del>本人覺得這題我寫得很好，但可能會被其他大神嫌棄</del></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">recursive</span><span class="params">(<span class="built_in">string</span> strInt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len , intCout ;</span><br><span class="line">    <span class="comment">// hajar 10000000</span></span><br><span class="line">    len = strInt.length() - <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">if</span>(len &gt; <span class="number">0</span> )&#123;</span><br><span class="line">        recursive(strInt.substr(<span class="number">0</span>,len));</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">" kuti"</span> ;</span><br><span class="line">        strInt = strInt.substr(strInt.length()<span class="number">-7</span> , <span class="number">7</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// lakh 100000</span></span><br><span class="line">    len = strInt.length() - <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span>(len &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        intCout = stoi(strInt.substr(<span class="number">0</span>,len));</span><br><span class="line">        <span class="keyword">if</span>(intCout)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; intCout &lt;&lt; <span class="string">" lakh"</span>;</span><br><span class="line">        strInt = strInt.substr(strInt.length()<span class="number">-5</span> , <span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// hajar 1000</span></span><br><span class="line">    len = strInt.length() - <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span>(len &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        intCout = stoi(strInt.substr(<span class="number">0</span>, len));</span><br><span class="line">        <span class="keyword">if</span>(intCout)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; intCout &lt;&lt; <span class="string">" hajar"</span>;</span><br><span class="line">        strInt = strInt.substr(strInt.length()<span class="number">-3</span> , <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// shata 100</span></span><br><span class="line">    len = strInt.length() - <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(len &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        intCout = stoi(strInt.substr(<span class="number">0</span>,len));</span><br><span class="line">        <span class="keyword">if</span>(intCout)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; intCout &lt;&lt; <span class="string">" shata"</span>;</span><br><span class="line">        strInt = strInt.substr(strInt.length()<span class="number">-2</span> , <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(stoi(strInt))</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; stoi(strInt) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="built_in">string</span> strInt;</span><br><span class="line">    <span class="keyword">int</span> intCase=<span class="number">1</span> , len , intTemp;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; strInt)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">4</span>- to_string(intCase).length() ; i++ )</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; intCase++ &lt;&lt; <span class="string">"."</span> ;</span><br><span class="line">        recursive(strInt);</span><br><span class="line">        <span class="keyword">if</span>(strInt == <span class="string">"0"</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">" 0"</span> ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa10010 - Where&#39;s Waldorf?</title>
    <url>/2020/03/16/UVa/UVa10010/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>給你一張圖，再給你x個單字，這些單字必定會在圖中出現，請輸入單字的第一個字母再圖中的哪個位置? ( 如果有重複的，輸出最左上的 )</p>
</blockquote>
<a id="more"></a>


<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p><font color = "dd0000">  –麻煩的– DFS </font></p>
<p>逐行檢查每一個字元，與8個方向，邏輯夠好，就能很快解出</p>
<p>Hint: 但第一個字元確定好方向，之後就必須依照這個方向檢查</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> arrGraph[<span class="number">52</span>][<span class="number">52</span>] = &#123;&#125; ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//debug</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_map</span><span class="params">(<span class="keyword">int</span> n , <span class="keyword">int</span> m )</span></span>&#123;</span><br><span class="line">    <span class="comment">//debug print map</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++ )&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= m ; j++)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; arrGraph[i][j] ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">intact_letter</span><span class="params">(<span class="built_in">string</span> strLine , <span class="keyword">int</span> intLine_Index , <span class="keyword">int</span> intDirection , <span class="keyword">int</span> n , <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(strLine.length()<span class="number">-1</span> == intLine_Index )&#123;</span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; strLine &lt;&lt; intLine_Index &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( intDirection == <span class="number">1</span>  &amp;&amp; arrGraph[n<span class="number">-1</span>][m<span class="number">-1</span>] == strLine[intLine_Index +<span class="number">1</span> ])</span><br><span class="line">        <span class="keyword">return</span> intact_letter(strLine , intLine_Index +<span class="number">1</span> , <span class="number">1</span> , n<span class="number">-1</span>,m<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( intDirection == <span class="number">2</span>  &amp;&amp; arrGraph[n<span class="number">-1</span>][m] == strLine[intLine_Index +<span class="number">1</span> ])</span><br><span class="line">        <span class="keyword">return</span> intact_letter(strLine , intLine_Index +<span class="number">1</span> , <span class="number">2</span> , n<span class="number">-1</span>,m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( intDirection == <span class="number">3</span>  &amp;&amp; arrGraph[n<span class="number">-1</span>][m+<span class="number">1</span>] == strLine[intLine_Index +<span class="number">1</span> ])</span><br><span class="line">        <span class="keyword">return</span> intact_letter(strLine , intLine_Index +<span class="number">1</span> , <span class="number">3</span> , n<span class="number">-1</span>,m+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( intDirection == <span class="number">4</span> &amp;&amp; arrGraph[n][m<span class="number">-1</span>] == strLine[intLine_Index +<span class="number">1</span> ])</span><br><span class="line">        <span class="keyword">return</span> intact_letter(strLine , intLine_Index +<span class="number">1</span> , <span class="number">4</span> , n,m<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( intDirection == <span class="number">5</span>  &amp;&amp; arrGraph[n+<span class="number">1</span>][m<span class="number">-1</span>] == strLine[intLine_Index +<span class="number">1</span> ])</span><br><span class="line">        <span class="keyword">return</span> intact_letter(strLine , intLine_Index +<span class="number">1</span> , <span class="number">5</span> , n+<span class="number">1</span>,m<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( intDirection == <span class="number">6</span>  &amp;&amp; arrGraph[n+<span class="number">1</span>][m] == strLine[intLine_Index +<span class="number">1</span> ])</span><br><span class="line">        <span class="keyword">return</span> intact_letter(strLine , intLine_Index +<span class="number">1</span> , <span class="number">6</span> , n+<span class="number">1</span>,m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( intDirection == <span class="number">7</span>  &amp;&amp; arrGraph[n+<span class="number">1</span>][m+<span class="number">1</span>] == strLine[intLine_Index +<span class="number">1</span> ])</span><br><span class="line">        <span class="keyword">return</span> intact_letter(strLine , intLine_Index +<span class="number">1</span> , <span class="number">7</span> , n+<span class="number">1</span>,m+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( intDirection == <span class="number">8</span>  &amp;&amp; arrGraph[n][m+<span class="number">1</span>] == strLine[intLine_Index +<span class="number">1</span> ])</span><br><span class="line">        <span class="keyword">return</span> intact_letter(strLine , intLine_Index +<span class="number">1</span> , <span class="number">8</span> , n,m+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">search_letter</span><span class="params">( <span class="built_in">string</span> strLine , <span class="keyword">int</span> n , <span class="keyword">int</span> m )</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++ )&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= m ; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arrGraph[i][j] == strLine[<span class="number">0</span>] )&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span> ; k &lt; <span class="number">9</span> ; k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(intact_letter(strLine , <span class="number">0</span> , k , i , j))&#123;</span><br><span class="line">                        <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">' '</span> &lt;&lt; j &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">                        <span class="keyword">return</span> ;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span>,<span class="string">"r"</span> , <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> indicating , n , m , k , isInit= <span class="number">0</span> ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; indicating ;</span><br><span class="line">    <span class="built_in">string</span> strLine ;</span><br><span class="line">    <span class="keyword">while</span>(indicating--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(isInit)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        isInit = <span class="number">1</span> ;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; strLine ;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= m ; j++)&#123;</span><br><span class="line">                arrGraph[i][j] = <span class="built_in">tolower</span>(strLine[j<span class="number">-1</span>]) ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//print_map(n,m);</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; k ;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; k ; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; strLine ;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; k ; i++)</span><br><span class="line">                strLine[i] = <span class="built_in">tolower</span>(strLine[i]);</span><br><span class="line">            search_letter(strLine , n , m);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>圖論</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa10221 - Satellites</title>
    <url>/2020/03/17/UVa/UVa10221/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>如圖，給你圓上兩點夾角，和點圓心的距離<br>求出兩點的弧長與弦長。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p><font color = "#dd0000" >分水嶺，看出來你先學會數學在學會程式 還是 先學會程式在學會數學(我是後者 QQ ) </font></p>
<p>對於本人來說是，非常難的一題阿！！！！ (我真笨，想不到數學弦長，餘弦定理)</p>
<p>如果你也不知道餘弦定理，沒關係可以的，我幫你找到傳送門了 &rarr; <a href="https://zh.wikipedia.org/wiki/%E9%A4%98%E5%BC%A6%E5%AE%9A%E7%90%86" target="_blank" rel="noopener">餘弦定理</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> minutes = minute of angle not time minutes</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span>) ;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="built_in">string</span> strA ;</span><br><span class="line">    <span class="keyword">double</span> a , s , douArc , douChord ;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; s &gt;&gt; a &gt;&gt; strA )&#123;</span><br><span class="line">        <span class="keyword">if</span>(strA == <span class="string">"min"</span>)</span><br><span class="line">            a /= <span class="number">60</span> ;</span><br><span class="line">        s += <span class="number">6440</span> ;</span><br><span class="line">        <span class="keyword">if</span>(a &gt; <span class="number">180</span>)</span><br><span class="line">            a = <span class="number">360</span> - a ;</span><br><span class="line">        douArc = <span class="number">2</span> * s * <span class="number">2</span> * <span class="built_in">acos</span>(<span class="number">0</span>) * a / <span class="number">360</span> ;</span><br><span class="line">        douChord = <span class="built_in">sqrt</span>(s * s + s * s - <span class="number">2</span> * s * s * <span class="built_in">cos</span>(<span class="number">2</span>*<span class="built_in">acos</span>(<span class="number">0</span>) * a / <span class="number">180</span> ) ) ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">6</span>) &lt;&lt; douArc &lt;&lt; <span class="string">' '</span> &lt;&lt; douChord &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>math theorm</tag>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa10530 - Guessing Game</title>
    <url>/2020/03/17/UVa/UVa10530/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p><strong>玩猜數字</strong></p>
<p><font color = "#dd0000" > *<em>是得你沒看錯，這應該是我看過 UVa 最簡單的題目了 *</em> </font></p>
<p>不過要注意的是:<br>還要看這個小屁孩，要不要說謊www</p>
</blockquote>
<a id="more"></a> 

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>不斷更新上下界，如果她說謊了，就告訴他，他是 <font color="#dd0000">Lier </font></p>
<p>需要注意的是: 當我說 8 too high 的話， 8 也算是太高喔</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> ) ;</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> intMax= <span class="number">11</span> , intMin = <span class="number">0</span> , isRight = <span class="number">1</span> , n ;</span><br><span class="line">    <span class="built_in">string</span> strLine ;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d\n"</span> , &amp;n ) &amp;&amp; n )&#123;</span><br><span class="line">        getline(<span class="built_in">cin</span> , strLine ) ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (strLine == <span class="string">"right on"</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(intMax &lt;= n || intMin &gt;= n)</span><br><span class="line">                isRight = <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(isRight)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"Stan may be honest"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"Stan is dishonest"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//debug</span></span><br><span class="line">            <span class="comment">//cout &lt;&lt; intMax &lt;&lt; ' ' &lt;&lt; intMin &lt;&lt; ' ' &lt;&lt; n &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">            isRight = <span class="number">1</span> ;</span><br><span class="line">            intMax = <span class="number">11</span> ;</span><br><span class="line">            intMin = <span class="number">0</span> ;</span><br><span class="line">            <span class="keyword">continue</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(strLine == <span class="string">"too high"</span> &amp;&amp; intMax &gt; n )&#123;</span><br><span class="line">            intMax = n ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (strLine == <span class="string">"too low"</span> &amp;&amp; intMin &lt; n )&#123;</span><br><span class="line">            intMin = n ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa1056 - Degrees of Separation</title>
    <url>/2020/03/12/UVa/UVa1056/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>有一個大型的人類組織社會，詢問人與人的最大距離為何? 如果沒有的話，輸出 “DISCONNECTED”。</p>
</blockquote>
<a id="more"></a> 

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p><font color = "#dd0000"> 人名需要雜湊喔 ε٩(๑&gt; ₃ &lt;)۶з </font></p>
<p>由於是 All-Pairs Shortest Path 問題，所以這題使用 Floyd-Warshall algorithm 解題</p>
<p>甚麼!? 你不知道 Floyd! <a href="https://zh.wikipedia.org/wiki/Floyd-Warshall%E7%AE%97%E6%B3%95" target="_blank" rel="noopener"><del>那你先去看影片</del></a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 99999999</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span> , <span class="keyword">int</span>&gt; mapMember ;</span><br><span class="line"><span class="keyword">int</span> intPath[<span class="number">55</span>][<span class="number">55</span>] ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> P , R , intCase = <span class="number">1</span> , intHash ;</span><br><span class="line">    <span class="built_in">string</span> strNameA , strNameB ;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; P &gt;&gt; R)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!(P + R))</span><br><span class="line">            <span class="keyword">break</span> ;</span><br><span class="line">        mapMember.clear() ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= P ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= P ; j++)</span><br><span class="line">                intPath[i][j] = INF ;</span><br><span class="line">        &#125;</span><br><span class="line">        intHash = <span class="number">1</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; R ; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; strNameA &gt;&gt; strNameB ;</span><br><span class="line">            <span class="keyword">if</span>(!mapMember[strNameA])</span><br><span class="line">                mapMember[strNameA] = intHash++ ;</span><br><span class="line">            <span class="keyword">if</span>(!mapMember[strNameB])</span><br><span class="line">                mapMember[strNameB] = intHash++ ;</span><br><span class="line">            intPath[ mapMember[strNameA] ][ mapMember[strNameB] ] = <span class="number">1</span> ;</span><br><span class="line">            intPath[ mapMember[strNameA] ][ mapMember[strNameA] ] = <span class="number">0</span> ;</span><br><span class="line">            intPath[ mapMember[strNameB] ][ mapMember[strNameA] ] = <span class="number">1</span> ;</span><br><span class="line">            intPath[ mapMember[strNameB] ][ mapMember[strNameB] ] = <span class="number">0</span> ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//floyd</span></span><br><span class="line">        <span class="keyword">int</span> intMax = <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= P ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j  = <span class="number">1</span> ; j &lt;= P ; j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span> ; k &lt;= P ; k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(intPath[j][k] &gt; intPath[j][i] + intPath[i][k])&#123;</span><br><span class="line">                        intPath[j][k] = intPath[j][i] + intPath[i][k] ;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= P ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= P ; j++)&#123;</span><br><span class="line">                intMax = max(intPath[i][j] , intMax);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(intMax == INF)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Network "</span> &lt;&lt; intCase++ &lt;&lt; <span class="string">": "</span> &lt;&lt; <span class="string">"DISCONNECTED"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Network "</span> &lt;&lt; intCase++ &lt;&lt; <span class="string">": "</span> &lt;&lt; intMax &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>Floyd-Warshall algorithm</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa10603 - Fill</title>
    <url>/2020/03/17/UVa/UVa10603/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>有 3 個杯子， a , b , c ，以及目標水量 d ， 一開始只有 c 裝滿了水，其他為空，透過倒入杯子&gt;的方式，來讓其他的杯子加滿水，試問能否達到 d ，要是不行，給出最接近數。</p>
<p>輸出要求：輸出最符合 d 的水量與達到 d 的最小倒水量。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>膜拜 劉汝佳 大佬，邏輯分析師</p>
<img src="https://pic1.xuehuaimg.com/proxy/csdn/https://img-blog.csdn.net/20170804143214141?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzQ4NDUwODI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="UVa10603.jpg">

<p><font color= "#dd0000"> <del>要是你還是看不懂，我建議你跳過，這對現在的你太難了</del> </font></p>
<p>沒有拉，開玩笑地。 不過這題確實有點小難。</p>
<p>不過老實說，包裝得很好，這題由 Dijkstra’s 可以得出，不過要記得的是， Dijkstra’s 的缺點就是，容易造成效率的低落，權重很重要。 </p>
<p>所以善用 priority_queue ， priority_queue 寫得好，程式沒煩惱！</p>
<h3 id="備註"><a href="#備註" class="headerlink" title="備註:"></a>備註:</h3><p>這裡有兩個蠻推薦的網站，寫得不錯，有些我這裡沒有補充倒的，可以查看這裡的網頁</p>
<p><a href="https://theriseofdavid.github.io/2020/03/11/UVa929/" target="_blank" rel="noopener">大衛的筆記-UVa929 - Number Maze (圖論，Dijkstra’s，優先隊列)</a></p>
<p><a href="https://www.twblogs.net/a/5b87da1e2b71775d1cd945e5" target="_blank" rel="noopener">UVA 10603 Fill(狀態空間搜索，倒水問題)</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 220</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> visit[MAXN][MAXN] , ans[MAXN] , cap[<span class="number">5</span>] , d ;</span><br><span class="line"><span class="comment">// https://www.twblogs.net/a/5b87da1e2b71775d1cd945e5</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">status</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> jug[<span class="number">3</span>] , vol ;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> status&amp; rhs ) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> vol &gt; rhs.vol ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">priority_queue&lt;status&gt; p ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_ans</span><span class="params">(status s )</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">3</span> ; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> d = s.jug[i] ;</span><br><span class="line">        <span class="keyword">if</span>(ans[d] &lt; <span class="number">0</span> )</span><br><span class="line">            ans[d] = s.vol ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    status s , cs ; <span class="comment">// cs copy_s</span></span><br><span class="line">    s.jug[<span class="number">0</span>] = <span class="number">0</span> ; s.jug[<span class="number">1</span>] = <span class="number">0</span> ; s.jug[<span class="number">2</span>] = cap[<span class="number">2</span>] ; s.vol = <span class="number">0</span> ;</span><br><span class="line">    p.push(s) ;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">while</span>(!p.empty())&#123;</span><br><span class="line">        s = p.top() ;</span><br><span class="line">        p.pop() ;</span><br><span class="line">        update_ans(s);</span><br><span class="line">        visit[s.jug[<span class="number">0</span>]][s.jug[<span class="number">1</span>]] = <span class="number">1</span> ;</span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; "" &lt;&lt; s.jug[0] &lt;&lt; ' ' &lt;&lt; s.jug[1] &lt;&lt; ' ' &lt;&lt; s.jug[2] &lt;&lt; ' ' &lt;&lt; s.vol &lt;&lt; '\n' ;</span></span><br><span class="line">        <span class="keyword">if</span>(ans[d] &gt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">3</span> ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; <span class="number">3</span> ; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i == j || s.jug[j] == cap[j] || s.jug[i] == <span class="number">0</span>) <span class="comment">// e.v[j] == cap[j] this cup water is full , so it doesn't have any water</span></span><br><span class="line">                    <span class="keyword">continue</span> ;</span><br><span class="line">                cs = s ;</span><br><span class="line">                temp = min(cap[j] , s.jug[i] + s.jug[j]) -s.jug[j] ;</span><br><span class="line">                cs.jug[i] -= temp ;</span><br><span class="line">                cs.jug[j] += temp ;</span><br><span class="line">                cs.vol += temp ;</span><br><span class="line">                <span class="keyword">if</span>(!visit[cs.jug[<span class="number">0</span>]][cs.jug[<span class="number">1</span>]])&#123;</span><br><span class="line">                    p.push(cs);</span><br><span class="line">                    <span class="comment">//debug</span></span><br><span class="line">                    <span class="comment">//cout &lt;&lt; cs.jug[0] &lt;&lt; ' ' &lt;&lt; cs.jug[1] &lt;&lt; ' ' &lt;&lt; cs.jug[2] &lt;&lt; ' ' &lt;&lt; cs.vol &lt;&lt; '\n' ;</span></span><br><span class="line">                    <span class="comment">//cout &lt;&lt; visit[cs.jug[0]][cs.jug[1]] &lt;&lt; '\n' ;</span></span><br><span class="line">                    <span class="comment">//cout &lt;&lt; &amp;s &lt;&lt; ' ' &lt;&lt; &amp;cs &lt;&lt; '\n' ;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(d&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ans[d] != <span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; ans[d] &lt;&lt; <span class="string">' '</span> &lt;&lt; d &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">            <span class="keyword">break</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        d-- ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> n ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; cap[<span class="number">0</span>] &gt;&gt; cap[<span class="number">1</span>] &gt;&gt; cap[<span class="number">2</span>] &gt;&gt; d ;</span><br><span class="line">        <span class="built_in">memset</span>(visit , <span class="number">0</span> , <span class="keyword">sizeof</span>(visit)) ;</span><br><span class="line">        <span class="built_in">memset</span>(ans , <span class="number">-1</span> , <span class="keyword">sizeof</span>(ans)) ;</span><br><span class="line">        <span class="keyword">while</span>(!p.empty()) <span class="comment">// priority_queue doesn't have clear</span></span><br><span class="line">            p.pop() ;</span><br><span class="line">        bfs() ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>圖論</tag>
        <tag>UVa</tag>
        <tag>Dijkstra&#39;s</tag>
        <tag>優先隊列</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa10810 - Ultra-QuickSort</title>
    <url>/2020/03/18/UVa/UVa10810/</url>
    <content><![CDATA[<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>排序一個數組，但只能左右交換，試問數組最少要交換幾次。</p>
</blockquote>
<a id="more"></a> 

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p><font color = "#dd0000"> <del><strong>這題真的好賤，上面寫著 QuickSort 結果是 MergeSort， 這代表經驗真的還是只能相信，不能先入為主阿</strong></del> </font></p>
<p>QuickSort 是在每一次分治 (divide) 的時候，就已經分好大小邊，<br>但 MergeSort 是不斷分治，直到不能再做分治後，才開始進行排序，透過此優點，所以很容易推算出左右交換的次數，加上 MergeSort 的複雜度也跟 QuickSort 一樣，所以一樣可以完成此問題！</p>
<p>需要注意的點是: 由於他最大的是 500050 ， 最複雜的排序可能來到 O ( \({n^2}\) )， 所以要使用 long long 以防溢位(overflow) 。</p>
<p><a href="https://www.youtube.com/watch?v=mB5HXBb_HY8&t" target="_blank" rel="noopener">MergeSort - Abdul Bari</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> intNum[<span class="number">500050</span>] , intTemp[<span class="number">500050</span>] ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">merge_sort</span><span class="params">(<span class="keyword">int</span> l , <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="comment">//debug</span></span><br><span class="line">    <span class="comment">//cout &lt;&lt; l &lt;&lt; ' ' &lt;&lt; r &lt;&lt; '\n';</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">    ll L , R ;</span><br><span class="line">    L = merge_sort(l , (r+l)/<span class="number">2</span>) ;</span><br><span class="line">    R = merge_sort( (r+l) /<span class="number">2</span> +<span class="number">1</span> , r );</span><br><span class="line">    <span class="keyword">int</span> intP_Start , intQ_Start , intP_End , intPosition ;</span><br><span class="line">    intP_Start = l ;</span><br><span class="line">    intP_End = (r+l) /<span class="number">2</span> ;</span><br><span class="line">    intQ_Start = intP_End +<span class="number">1</span> ;</span><br><span class="line">    intPosition = l ;</span><br><span class="line">    <span class="keyword">while</span>(intPosition &lt;= r )&#123;</span><br><span class="line">        <span class="keyword">if</span>(intQ_Start &lt;= r &amp;&amp; (intP_Start &gt; intP_End || intNum[intQ_Start] &lt; intNum[intP_Start] ) )&#123;</span><br><span class="line">            intTemp[intPosition++] = intNum[intQ_Start++] ;</span><br><span class="line">            L += intP_End - intP_Start + <span class="number">1</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            intTemp[intPosition++] = intNum[intP_Start++] ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = l ; i &lt;= r ; i++)</span><br><span class="line">        intNum[i] = intTemp[i] ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//debug</span></span><br><span class="line">    <span class="comment">//for(int i = 0 ; i &lt; 10 ; i++)</span></span><br><span class="line">    <span class="comment">//    cout &lt;&lt; intNum[i] &lt;&lt; ' ' ;</span></span><br><span class="line">    <span class="comment">//cout &lt;&lt; '\n' ;</span></span><br><span class="line">    <span class="keyword">return</span> L + R ;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> n ;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &amp;&amp; n )&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; intNum[i] ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; merge_sort(<span class="number">0</span> , n<span class="number">-1</span> ) &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>UVa</tag>
        <tag>Merge-sort</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa11220 - Decoding the message</title>
    <url>/2020/03/19/UVa/UVa11220/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>會給很多英文單字，第 x 個的英文單字中找出第 x 的字元，之後再將它印出。</p>
</blockquote>
<a id="more"></a> 

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p><font color = "dd0000"> <strong>這題要是不會，我建議你先去看初學者影片 (良心推薦)</strong> </font></p>
<p>我覺得這題不需要解釋，也沒人看我解釋，模擬操作就好了，對吧?</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> intCase , n , intPosition ;</span><br><span class="line">    <span class="built_in">string</span> strWord , strAns , strLine ;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vecAns ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; intCase ;</span><br><span class="line">    n = <span class="number">1</span> ;</span><br><span class="line">    getline(<span class="built_in">cin</span> , strLine ) ;</span><br><span class="line">    getline(<span class="built_in">cin</span> , strLine ) ;</span><br><span class="line">    <span class="keyword">while</span>(getline(<span class="built_in">cin</span> , strLine ))&#123;</span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; strLine &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(strLine != <span class="string">""</span>)&#123;</span><br><span class="line">            <span class="built_in">stringstream</span> ss ;</span><br><span class="line">            ss.str(<span class="string">""</span>);</span><br><span class="line">            ss.clear() ;</span><br><span class="line">            ss &lt;&lt; strLine ;</span><br><span class="line">            intPosition = <span class="number">0</span> ;</span><br><span class="line">            strAns = <span class="string">""</span> ;</span><br><span class="line">            <span class="keyword">while</span>(ss &gt;&gt; strWord)&#123;</span><br><span class="line">                <span class="comment">//debug-</span></span><br><span class="line">                <span class="comment">//cout &lt;&lt; strWord &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(strWord.length() &gt; intPosition)&#123;</span><br><span class="line">                    strAns += strWord[intPosition++] ;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//debug</span></span><br><span class="line">                    <span class="comment">//cout &lt;&lt; strAns &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            vecAns.push_back(strAns) ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Case #"</span> &lt;&lt; n++ &lt;&lt; <span class="string">":"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; vecAns.size()<span class="number">-1</span> ; i++)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; vecAns[i] &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; vecAns[vecAns.size()<span class="number">-1</span>] ;</span><br><span class="line">            <span class="keyword">if</span>(n<span class="number">-1</span> != intCase)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">            vecAns.clear() ;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa11349 - Symmetric Matrix</title>
    <url>/2020/03/19/UVa/UVa11349/</url>
    <content><![CDATA[<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>給你一個正方形矩陣 M ， 你必須判斷矩陣是否對稱 (symmetric)</p>
<p>矩陣定義: 矩陣內部元素不會有負數，且是對中間點對稱</p>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>這題的包裝手法，個人覺得非常之妙阿，小弟我的能力太差了!</p>
<p>由於此題的定義是僅限對 「中心點」 對稱，你可以發現，但你將它變成一維陣列表示時，會發現它其實是一個迴文！ 太神奇了，高手中的高手阿</p>
<p>解開的方式就中間切一半，然後開始判斷是否迴文就可以了。</p>
<h3 id="陷阱"><a href="#陷阱" class="headerlink" title=" 陷阱 : "></a><font color="#dd0000"> 陷阱 : </font ></h3><p>有兩點需要特別注意，這題有骯髒的手法wwww</p>
<ol>
<li>cin 的值會有負數，但矩陣內禁止有負號需特別注意</li>
<li>元素的值為 \({-2^{32} }\) &lt;= \(M_{ij} \) &lt;= \({2^{32}}\)，超出int的範圍(\({-2^{31}}\) &lt;= int &lt;= <font color = "dd0000"> \({2^{31}-1}\) </font >)，所以必須使用 long long 處理。</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">ll llnNum[<span class="number">12100</span>] ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span>,<span class="string">"r"</span> , <span class="built_in">stdin</span>) ;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> intCase , n , t , intLen ;</span><br><span class="line">    <span class="built_in">string</span> strNon ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; intCase ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//debug</span></span><br><span class="line">    <span class="comment">//cout &lt;&lt; intCase &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> t = <span class="number">1</span> ; t &lt;= intCase ; t++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; strNon &gt;&gt; strNon &gt;&gt; n ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; n &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">        intLen = n * n ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; intLen ; i++)</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; llnNum[i] ;</span><br><span class="line">        <span class="keyword">int</span> isFlag = <span class="number">1</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; intLen /<span class="number">2</span>+<span class="number">1</span> ; i++)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//debug</span></span><br><span class="line">            <span class="comment">//cout &lt;&lt; intNum[i] &lt;&lt; ' ' &lt;&lt; intNum[intLen-i-1] &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(llnNum[i] != llnNum[intLen-i<span class="number">-1</span>] || llnNum[i] &lt; <span class="number">0</span> || llnNum[intLen-i<span class="number">-1</span>] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                isFlag = <span class="number">0</span> ;</span><br><span class="line">                <span class="keyword">break</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; isFlag &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isFlag)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Test #"</span> &lt;&lt; t &lt;&lt; <span class="string">": Symmetric."</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Test #"</span> &lt;&lt; t &lt;&lt; <span class="string">": Non-symmetric."</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>UVa</tag>
        <tag>創新題</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa11541 - Decoding</title>
    <url>/2020/03/20/UVa/UVa11541/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>輸入是一串 (英文，數字) * n 的組合</p>
<p>輸出 英文字 * n</p>
</blockquote>
<a id="more"></a> 

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p><font color = "#dd0000"> <strong>簡單到一個不行的題目 <del>，這題千萬不要問我解釋</del></strong> </font></p>
<p>使用 for 即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decode</span><span class="params">(<span class="built_in">string</span> strLetter , <span class="keyword">int</span> intCount )</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; intCount ; i++ )</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; strLetter ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span>,<span class="string">"r"</span> , <span class="built_in">stdin</span>) ;</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span> ) ;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> intCase ;</span><br><span class="line">    <span class="built_in">string</span> strLine , strLetter , strCount ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; intCase ; <span class="built_in">cin</span>.ignore() ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> t = <span class="number">1</span> ; t &lt;= intCase ; t++)&#123;</span><br><span class="line">        getline(<span class="built_in">cin</span> , strLine) ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Case "</span> &lt;&lt; t &lt;&lt; <span class="string">": "</span> ;</span><br><span class="line">        strCount = <span class="string">"0"</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; strLine.length() ; i++ )&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isalpha</span>(strLine[i]))&#123;</span><br><span class="line">               decode(strLetter , stol(strCount)) ;</span><br><span class="line">               strLetter = strLine[i] ;</span><br><span class="line">               strCount = <span class="string">""</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                strCount += strLine[i] ;</span><br><span class="line">        &#125;</span><br><span class="line">        decode(strLetter , stol(strCount));</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa11636 - Hello World!</title>
    <url>/2020/03/30/UVa/UVa11636/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>一開始給你一段句子，你只能透過 「複製 (copy)」 方式，複製出 x 段句子</p>
<p>給你一數字 x ，試問在幾次後可以複製可達到 x 個句子？</p>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>只需要不斷複製 *2 即可完成，每一次都可以全句複製已達到複製的兩倍量。</p>
<p>再透過陣列預先處理即可。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">10010</span>] ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">1</span> , step = <span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; <span class="number">10010</span> ; i++)&#123;</span><br><span class="line">        num[i] = step ;</span><br><span class="line">        <span class="keyword">if</span>(i == n)&#123;</span><br><span class="line">            n = n &lt;&lt; <span class="number">1</span>;</span><br><span class="line">            step++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    step = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &amp;&amp; n &gt;= <span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Case "</span> &lt;&lt; step &lt;&lt; <span class="string">": "</span> &lt;&lt; num[n] &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        step++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa11678 - Cards&#39; Exchange</title>
    <url>/2020/03/20/UVa/UVa11678/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>兩個非常可愛的小女孩，想要玩交換卡片的遊戲 (ﾉ&gt;ω&lt;)ﾉ</p>
<p>可是他們不想拿到的重複卡片，試問他們最多可以交換幾張卡片。 </p>
</blockquote>
<a id="more"></a> 

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p><font color = "#dd0000"> 水到不行的水題 </font></p>
<p>Step</p>
<ol>
<li>使用集合 (排除重複 (muliple) )</li>
<li>差集 (set_difference) </li>
<li>求差集後的總元素</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; A , B , diff_A , diff_B ;</span><br><span class="line">    <span class="keyword">int</span> x , y , intTemp ;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y &amp;&amp; x &amp;&amp; y)&#123;</span><br><span class="line">        A.clear() ;</span><br><span class="line">        B.clear() ;</span><br><span class="line">        diff_A.clear() ;</span><br><span class="line">        diff_B.clear() ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; x ; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; intTemp ;</span><br><span class="line">            A.insert(intTemp) ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; y ; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; intTemp ;</span><br><span class="line">            B.insert(intTemp) ;</span><br><span class="line">        &#125;</span><br><span class="line">        set_difference(A.begin() , A.end() , B.begin() , B.end() , inserter(diff_A, diff_A.begin()) ) ;</span><br><span class="line">        set_difference(B.begin() , B.end() , A.begin() , A.end() , inserter(diff_B, diff_B.begin()) ) ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; min(diff_A.size() , diff_B.size()) &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa11747 - Heavy Cycle Edges</title>
    <url>/2020/03/20/UVa/UVa11747/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>無向圖，之後生成 Minimum Spanning Tree (最小生成樹)</p>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>Kruskal 是你最好的朋友，暴力簡單又方便</p>
<p><del>~ Prim</del> 禁止，會搞死你的 ，我一開始還想用 Prim 來解呢~~</p>
<h2 id="備註"><a href="#備註" class="headerlink" title="備註:"></a>備註:</h2><p>要是不知道 Kruskal 就看 <a href="https://www.youtube.com/watch?v=4ZlRH0eK-qQ" target="_blank" rel="noopener">Abdul Bari</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> parent[<span class="number">1020</span>] ;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    ll n1 , n2 , w ;</span><br><span class="line">&#125;node[<span class="number">25020</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(edge A , edge B )</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> A.w &lt; B.w ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find_root</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a != parent[a] )</span><br><span class="line">        <span class="keyword">return</span> parent[a] = find_root(parent[a]) ;</span><br><span class="line">    <span class="keyword">return</span> a ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> n , m , p_n1 , p_n2 ; <span class="comment">// parent_n1 , parent_n2</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; hce ; <span class="comment">//heavy edge circle</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &amp;&amp; n + m != <span class="number">0</span> )&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; m ; i++ )&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; node[i].n1 &gt;&gt; node[i].n2 &gt;&gt; node[i].w ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">            parent[i] = i ;</span><br><span class="line">        sort(node , node + m , compare ) ;</span><br><span class="line">        hce.clear() ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//kruskal</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; m ; i++)&#123;</span><br><span class="line">            p_n1 = find_root(node[i].n1) ;</span><br><span class="line">            p_n2 = find_root(node[i].n2) ;</span><br><span class="line">            <span class="keyword">if</span>(p_n1 != p_n2 )</span><br><span class="line">                parent[p_n2] = p_n1 ;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                hce.push_back(node[i].w) ;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//debug</span></span><br><span class="line">            <span class="comment">/**&lt;</span></span><br><span class="line"><span class="comment">            for(int i = 0 ; i &lt; n ; i++)</span></span><br><span class="line"><span class="comment">                cout &lt;&lt; parent[i] &lt;&lt; ' ' ;</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">        &#125;</span><br><span class="line">        sort(hce.begin() , hce.end()) ;</span><br><span class="line">        <span class="keyword">if</span>(hce.size())&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; hce.size()<span class="number">-1</span> ; i++)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; hce[i] &lt;&lt; <span class="string">' '</span> ;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; hce[hce.size()<span class="number">-1</span>] ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"forest"</span> ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>UVa</tag>
        <tag>Kruskal</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa1207 - AGTC</title>
    <url>/2020/03/13/UVa/UVa1207/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>有 a , b 兩個字串求他們的 LCS(最長公共子序列) 最短修改數?</p>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>LCS 與 LCS-less modify</p>
<img src = "https://imgur.com/pwPRhyI.jpg" alt ="UVa1207.jpg">

<p><font color = "dd0000"> 透過此圖可以了解 DP 原理 </font ></p>
<p>LCS 遞迴公式:</p>
<ul>
<li>LCS(x, y) =<ul>
<li>max( LCS( x-1, y ), LCS( x , y-1 ) ) , when str[x] != str[y]</li>
<li>LCS( x-1 , y-1 ) + e1                , when str[x] == sty[y]</li>
</ul>
</li>
</ul>
<p>LCS-less modify(LCS-lm) 遞迴公式:</p>
<ul>
<li>LCS-lm( x, y ) =<ul>
<li>min( LCS-lm( x , y ), LCS-lm( x , y) , LCS-lm( x-1 , y-1) ) +1 , when str[x] != str[y]</li>
<li>LCS-lm( x -1 , y -1 ) +1                , when str[x] == str[y]</li>
</ul>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LCS</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> step , max_len ;</span><br><span class="line">&#125;Dp[<span class="number">5000</span>][<span class="number">5000</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> intX , intY , Min_step , Max_len ;</span><br><span class="line">    <span class="built_in">string</span> strX , strY ;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; intX &gt;&gt; strX &gt;&gt; intY &gt;&gt; strY )&#123;</span><br><span class="line">        <span class="comment">//init</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt;= intY ; i++)&#123;</span><br><span class="line">            Dp[<span class="number">0</span>][i].max_len = <span class="number">0</span> ;</span><br><span class="line">            Dp[<span class="number">0</span>][i].step = i ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt;= intX ; i++)&#123;</span><br><span class="line">            Dp[i][<span class="number">0</span>].max_len = <span class="number">0</span> ;</span><br><span class="line">            Dp[i][<span class="number">0</span>].step = i ;</span><br><span class="line">        &#125;</span><br><span class="line">        Max_len = <span class="number">0</span> ;</span><br><span class="line">        Min_step = <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//lcs</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= intX ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= intY ; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(strX[i<span class="number">-1</span>] == strY[j<span class="number">-1</span>])&#123;</span><br><span class="line">                    Dp[i][j].max_len = Dp[i<span class="number">-1</span>][j<span class="number">-1</span>].max_len +<span class="number">1</span> ;</span><br><span class="line">                    Dp[i][j].step = Dp[i<span class="number">-1</span>][j<span class="number">-1</span>].step ;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//debug</span></span><br><span class="line">                    <span class="comment">//cout &lt;&lt; strX[i-1] &lt;&lt; ' ' &lt;&lt; strY[j-1] &lt;&lt; ' ' &lt;&lt; Dp[i][j].max_len &lt;&lt; '\n' ;</span></span><br><span class="line">                    <span class="comment">//cout &lt;&lt; strX[i-1] &lt;&lt; ' ' &lt;&lt; strY[j-1] &lt;&lt; ' ' &lt;&lt; Dp[i][j].step &lt;&lt; '\n' ;</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    Dp[i][j].max_len = max(Dp[i<span class="number">-1</span>][j].max_len , Dp[i][j<span class="number">-1</span>].max_len ) ;</span><br><span class="line">                    Dp[i][j].step = min( min(Dp[i<span class="number">-1</span>][j<span class="number">-1</span>].step , Dp[i][j<span class="number">-1</span>].step ) , Dp[i<span class="number">-1</span>][j].step ) +<span class="number">1</span> ;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; Dp[intX][intY].step &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>UVa</tag>
        <tag>動態規劃</tag>
        <tag>LCS</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa12096 - The SetStack Computer</title>
    <url>/2020/03/23/UVa/UVa12096/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>模擬一個集合的堆疊計算機。該計算機有5種指令</p>
<ol>
<li>PUSH：新增一個{}空集合到 Stack</li>
<li>DUP：複製 Stack 的 Top 集合，再Push到 Stack</li>
<li>ADD：將 Stack Pop 2個集合，最先 Pop 的集合 a 和第 2 個 Pop 的集合 b，將集合 a 加入至集合 b 後再 Push 到 Stack</li>
<li>UNION：將 Stack Pop 2 個集合做 Union 後，再 Push 到 Stack</li>
<li>INTERSECT：將Stack Pop 2個集合做Intersect後，再Push到Stack</li>
</ol>
<p>輸入有T筆測資，每筆測資會有 n 個前面 5 種的指令，每當一個指令完成後，要輸出目前 Stack Top  的集合的元素數量。當N個指令完成後，輸出 ***。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p><font color="#dd0000">這題我也是看其他優秀大神寫出來的，高手太多了，小弟我只是一個小孩子罷了。</font></p>
<p>STL 真的棒，省去底層的操作。</p>
<p>在操作 set 的過程中，請記住，不要就傻傻可愛的直接用 set ( set 裡面又有 set 的話，交、聯集的函式庫無法被使用的！)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; , <span class="keyword">int</span>&gt; mapSet ;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span> , <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; &gt; mapSetReverse ;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vecStack ;</span><br><span class="line"><span class="keyword">int</span> intHash ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">set_hash</span><span class="params">(<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; setTemp)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> &amp;intTemp = mapSet[setTemp] ;</span><br><span class="line">    <span class="keyword">if</span>(!intTemp)&#123;</span><br><span class="line">        mapSetReverse[intHash] = setTemp ;</span><br><span class="line">        intTemp = intHash++ ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> intTemp ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> t , n ;</span><br><span class="line">    <span class="built_in">string</span> strCommand  ;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; setA , setB , setC ;</span><br><span class="line">    <span class="keyword">int</span> intA , intB , intC ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t ;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">        intHash = <span class="number">1</span> ;</span><br><span class="line">        vecStack.clear() ;</span><br><span class="line">        mapSet.clear() ;</span><br><span class="line">        mapSetReverse.clear() ;</span><br><span class="line">        <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; strCommand ;</span><br><span class="line">            <span class="keyword">if</span>(strCommand == <span class="string">"PUSH"</span>)&#123;</span><br><span class="line">                setA = &#123;&#125; ;</span><br><span class="line">                vecStack.push_back(set_hash(setA)) ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(strCommand == <span class="string">"DUP"</span>)&#123;</span><br><span class="line">                vecStack.push_back(vecStack.back()) ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (strCommand == <span class="string">"UNION"</span>)&#123;</span><br><span class="line">                setA = mapSetReverse[vecStack.back()] ;</span><br><span class="line">                vecStack.pop_back() ;</span><br><span class="line">                setB = mapSetReverse[vecStack.back()] ;</span><br><span class="line">                vecStack.pop_back() ;</span><br><span class="line">                setC = &#123;&#125; ;</span><br><span class="line">                set_union(setA.begin() , setA.end() , setB.begin() , setB.end() , inserter(setC , setC.begin())) ;</span><br><span class="line">                vecStack.push_back(set_hash(setC)) ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (strCommand == <span class="string">"INTERSECT"</span>)&#123;</span><br><span class="line">                setA = mapSetReverse[vecStack.back()] ;</span><br><span class="line">                vecStack.pop_back() ;</span><br><span class="line">                setB = mapSetReverse[vecStack.back()] ;</span><br><span class="line">                vecStack.pop_back() ;</span><br><span class="line">                setC = &#123;&#125; ;</span><br><span class="line">                set_intersection(setA.begin() , setA.end() , setB.begin() , setB.end() , inserter(setC , setC.begin())) ;</span><br><span class="line">                vecStack.push_back(set_hash(setC)) ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(strCommand == <span class="string">"ADD"</span>)&#123;</span><br><span class="line">                intA = vecStack.back() ;</span><br><span class="line">                vecStack.pop_back() ;</span><br><span class="line">                setB = mapSetReverse[vecStack.back()] ;</span><br><span class="line">                vecStack.pop_back() ;</span><br><span class="line">                setB.insert(intA) ;</span><br><span class="line">                vecStack.push_back(set_hash(setB)) ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; mapSetReverse[vecStack.back()].size() &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"***"</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>UVa</tag>
        <tag>創新題</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa12299 - RMQ with Shifts</title>
    <url>/2020/03/23/UVa/UVa12299/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給予一個數組，有兩種操作</p>
<ol>
<li>query l r : 查詢 l 到 r 的最小值</li>
<li>shift x1 , x2 , x3 : 原本的值都往前循環一個位置</li>
</ol>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>透過線段樹來維護最小值查詢，加上 shift 的數字最多只有 30 位，透過單點修改的方式即可完成。</p>
<h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>shift 給的是位置，並不是數值，也不一定給你的位置會是照順序，所以必須要進行 sort</p>
<h2 id="備註："><a href="#備註：" class="headerlink" title="備註："></a>備註：</h2><p>要是不知道 RMQ (Range Minimum/Maximum Query)) 就看 <a href="https://www.youtube.com/watch?v=c5O7E_PDO4U" target="_blank" rel="noopener">Tushar Roy - Coding Made Simple</a></p>
<p><del>印度人教程式真的強，不知道為甚麼感覺看中文的教學影片都比較沒辦法聽得懂阿，難道真的是語言的關係嗎QQ</del></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Lson(x) ((x &lt;&lt; 1) +1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Rson(x) ((x &lt;&lt; 1) +2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 99999999</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100005</span> ;</span><br><span class="line"><span class="keyword">int</span> shift[<span class="number">35</span>] , num[N] , len_shift ;</span><br><span class="line"><span class="built_in">string</span> strLine ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> left , right , Min_Value  ;</span><br><span class="line">&#125;node[<span class="number">4</span> * N ];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> left , <span class="keyword">int</span> right , <span class="keyword">int</span> x = <span class="number">0</span> )</span></span>&#123;</span><br><span class="line">    node[x].left = left ;</span><br><span class="line">    node[x].right = right ;</span><br><span class="line">    <span class="keyword">if</span>(left == right)&#123;</span><br><span class="line">        node[x].Min_Value = num[left] ;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (left + right ) / <span class="number">2</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//debug</span></span><br><span class="line">    <span class="comment">//cout &lt;&lt; mid &lt;&lt; '\n' ;</span></span><br><span class="line">    <span class="comment">//cout &lt;&lt; x &lt;&lt; ' ' &lt;&lt; node[x].left &lt;&lt; ' ' &lt;&lt; node[x].right &lt;&lt; ' ' &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">    build(left , mid , Lson(x)) ;</span><br><span class="line">    build(mid + <span class="number">1</span> , right , Rson(x)) ;</span><br><span class="line">    node[x].Min_Value = min(node[Lson(x)].Min_Value  , node[Rson(x)].Min_Value ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">handle</span><span class="params">()</span></span>&#123;</span><br><span class="line">    len_shift = <span class="number">0</span> ;</span><br><span class="line">    shift[len_shift] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">6</span> ; i &lt; strLine.length() ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(strLine[i] &gt;= <span class="string">'0'</span> &amp;&amp; strLine[i] &lt;= <span class="string">'9'</span> )&#123;</span><br><span class="line">            shift[len_shift] = shift[len_shift] * <span class="number">10</span> + (<span class="keyword">int</span>) (strLine[i] - <span class="string">'0'</span> ) ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            shift[++len_shift ] = <span class="number">0</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//finaly char is ')' , so len_shift is right</span></span><br><span class="line">    sort(shift , shift + len_shift ) ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//debug</span></span><br><span class="line">    <span class="comment">/**&lt;</span></span><br><span class="line"><span class="comment">    for(int i = 0 ; i &lt; len_shift ; i++)</span></span><br><span class="line"><span class="comment">        cout &lt;&lt; shift[i] &lt;&lt; ' ' ;</span></span><br><span class="line"><span class="comment">    cout &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> left , <span class="keyword">int</span> right , <span class="keyword">int</span> x = <span class="number">0</span> )</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(node[x].left &gt;= left &amp;&amp; node[x].right &lt;= right)</span><br><span class="line">        <span class="keyword">return</span> node[x].Min_Value ;</span><br><span class="line">    <span class="keyword">int</span> mid = (node[x].left + node[x].right ) / <span class="number">2</span> ;</span><br><span class="line">    <span class="keyword">int</span> ans = INF ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//debug</span></span><br><span class="line">    <span class="comment">//cout &lt;&lt; x &lt;&lt; ' ' &lt;&lt; node[x].left &lt;&lt; ' ' &lt;&lt; node[x].right &lt;&lt; ' ' &lt;&lt; node[x].Min_Value &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( left &lt;= mid )</span><br><span class="line">        ans = min(ans , query(left , right , Lson(x))) ;</span><br><span class="line">    <span class="keyword">if</span>(mid &lt; right )</span><br><span class="line">        ans = min(ans , query(left , right , Rson(x))) ;</span><br><span class="line">    <span class="keyword">return</span> ans ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_num</span><span class="params">(<span class="keyword">int</span> position , <span class="keyword">int</span> value , <span class="keyword">int</span> x = <span class="number">0</span> )</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(node[x].left == position &amp;&amp; node[x].right == position )&#123;</span><br><span class="line">       node[x].Min_Value = value ;</span><br><span class="line">       <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (node[x].left + node[x].right ) / <span class="number">2</span> ;</span><br><span class="line">    <span class="keyword">if</span>(position &lt;= mid )</span><br><span class="line">        set_num(position , value , Lson(x) );</span><br><span class="line">    <span class="keyword">if</span>(mid &lt; position )</span><br><span class="line">        set_num(position , value , Rson(x)) ;</span><br><span class="line">    node[x].Min_Value = min(node[Lson(x)].Min_Value , node[Rson(x)].Min_Value );</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n , q , intTemp ;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span> ) ;</span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> ) ;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; q ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num[i] ;</span><br><span class="line">    build(<span class="number">1</span>,n);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//debug</span></span><br><span class="line">    <span class="comment">/**&lt;</span></span><br><span class="line"><span class="comment">    for(int i = 0 ; i &lt; 13 ; i++)&#123;</span></span><br><span class="line"><span class="comment">        cout &lt;&lt; node[i].left &lt;&lt; ' ' &lt;&lt; node[i].right &lt;&lt; ' ' &lt;&lt; node[i].Min_Value &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    return 0 ;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; strLine ;</span><br><span class="line">        <span class="keyword">if</span>(strLine[<span class="number">0</span>] == <span class="string">'q'</span>)&#123;</span><br><span class="line">            handle();</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; query(shift[<span class="number">0</span>] , shift[<span class="number">1</span>] ) &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (strLine[<span class="number">0</span>] == <span class="string">'s'</span>)&#123;</span><br><span class="line">            handle();</span><br><span class="line">            intTemp = num[shift[<span class="number">0</span>]] ;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; len_shift ; i++)&#123;</span><br><span class="line">                set_num(shift[i<span class="number">-1</span>] , num[shift[i]]) ;</span><br><span class="line">                num[shift[i<span class="number">-1</span>]] = num[shift[i]] ;</span><br><span class="line">            &#125;</span><br><span class="line">            num[shift[len_shift<span class="number">-1</span>]] = intTemp ;</span><br><span class="line">            set_num(shift[len_shift<span class="number">-1</span>] , intTemp );</span><br><span class="line"></span><br><span class="line">            <span class="comment">//debug</span></span><br><span class="line">            <span class="comment">//cout &lt;&lt; intTemp &lt;&lt; ' ' &lt;&lt; shift[len_shift-1] &lt;&lt; '\n' ;</span></span><br><span class="line">            <span class="comment">//for(int i = 1 ; i &lt;= n ; i++)</span></span><br><span class="line">             <span class="comment">//   cout &lt;&lt; num[i] &lt;&lt; ' ' ;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>UVa</tag>
        <tag>線段樹</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa12385 - Interesting Sequences</title>
    <url>/2020/04/28/UVa/UVa12385/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給你一個數列，請找出 「Interesting Sequences」共有幾組。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>唉，看來我的英文能力需要增加。</p>
<p>「Interesting Sequences」 定義如下:</p>
<ol>
<li>在 Interesting Sequences 中頭尾數字一樣</li>
<li><del>不是每個 Interesting Sequences 的數字都要一樣</del></li>
</ol>
<p>ex1: 4 2 3 5 9 2 1 </p>
<ol>
<li>2 3 5 9 2 </li>
</ol>
<p>ex2: 3 2 3 1 3 2 3 2 2 2 2</p>
<ol>
<li>2 3 1 3 2</li>
<li>2 2  index: 8 9 </li>
<li>2 2  index: 9 10</li>
<li>2 2  index: 10 11</li>
</ol>
<p><font color="#ff0000"><strong>就這麼簡單，用「動態規劃」解決這題即可</strong></font></p>
<h4 id="DP規則如下-透過-greedy-優化-："><a href="#DP規則如下-透過-greedy-優化-：" class="headerlink" title="DP規則如下( 透過 greedy 優化 )："></a>DP規則如下( 透過 greedy 優化 )：</h4><ol>
<li>透過陣列記住每個數字最後的位置</li>
<li>last 做為上次 Interesting Sequences 的最後 index，因為 Interesting Sequences 不可以重疊。</li>
<li>如果 數字最後的位置 &gt;= last , ans +=1  </li>
</ol>
<h5 id="題外話"><a href="#題外話" class="headerlink" title="題外話:"></a>題外話:</h5><p>這題幾乎沒什麼人寫過，資源量好少，然後英文真的是不太好理解阿，花了 2、3 天才理解這題題意是甚麼</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n ,t , last , ans , temp ;</span><br><span class="line">    <span class="keyword">int</span> num[<span class="number">100020</span>] = &#123;&#125; ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t ;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        last = <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">100020</span> ; i++)</span><br><span class="line">            num[i] = <span class="number">-1</span> ;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; temp ;</span><br><span class="line">            <span class="keyword">if</span>( num[temp] &gt;= last)&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//debug</span></span><br><span class="line">                <span class="comment">//cout &lt;&lt; "debug: " &lt;&lt;  i &lt;&lt; " last: " &lt;&lt; last &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">                ans++ ;</span><br><span class="line">                last = i ;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            num[temp] = i ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa1262 - Password</title>
    <url>/2020/04/13/UVa/UVa1262/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給你兩個 5*6 的表格，尋找這兩個表格的第 n 個 column 一樣的字母。<br>輸出第 x 個組合(透過字典序順序排列)</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>明顯第一直覺就是排列組合，時間複雜度最多為 (6^4)，合理可接受範圍內。</p>
<p>我原本的做法是只記錄共同的字母，然後進行排列組合。 =&gt; <font color="#dd0000">程式碼不好維護</font></p>
<p><a href="https://geniustanley.github.io/2017/02/26/UVa-1262-Password/" target="_blank" rel="noopener">參考他的寫法後，覺得很棒。雖然時間複雜度比較高，但比較好維護</a></p>
<p>用二維陣列紀錄 Array[A-Z][column]，易讀易維護。</p>
<p><strong>看來我對於 C++ 還是不夠了解，沒辦法當機立下用最好、最易讀的解法</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> ax[<span class="number">30</span>][<span class="number">7</span>] = &#123;&#125; ;</span><br><span class="line"><span class="keyword">int</span> ay[<span class="number">30</span>][<span class="number">7</span>] = &#123;&#125; ;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; Ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> j , <span class="built_in">string</span> strAns)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(j == <span class="number">5</span>)&#123;</span><br><span class="line">        Ans.push_back(strAns);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">26</span> ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ax[i][j] &amp;&amp; ay[i][j])</span><br><span class="line">            dfs(j+<span class="number">1</span> , strAns+ (<span class="keyword">char</span>)(<span class="string">'A'</span> + i));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span>) ;</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n , x ;</span><br><span class="line">    <span class="built_in">string</span> strLine ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        Ans.clear();</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">26</span> ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; <span class="number">6</span> ; j++)&#123;</span><br><span class="line">                ax[i][j] = <span class="number">0</span>;</span><br><span class="line">                ay[i][j] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">6</span> ; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; strLine;</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; strLine.length() ; j++)&#123;</span><br><span class="line">                ax[strLine[j] - <span class="string">'A'</span>][j] = <span class="number">1</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">6</span> ; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; strLine;</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; strLine.length() ; j++)&#123;</span><br><span class="line">                ay[strLine[j] - <span class="string">'A'</span>][j] = <span class="number">1</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dfs(<span class="number">0</span>, <span class="string">""</span>);</span><br><span class="line">        <span class="keyword">if</span>(Ans.size() &lt; x)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; Ans[x<span class="number">-1</span>] &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa12918 - Lucky Thief</title>
    <url>/2020/06/09/UVa/UVa12918/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>小偷有 a 把 key 與 b 的房子，小偷想要找出 key 於房間的配對，每個 key 只能跟一個房間配對。</p>
<p>請告訴小偷，在有邏輯分析的情況下，小偷最少需要失敗幾次才能成功知道每個 key 要配每個房間。<br>P.S. a &lt;= b </p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p><strong>最非常簡單的題目，但是我竟然卡關了 20 分鐘…，老人家不給力阿。</strong></p>
<p>最後是向一個對數學敏感的朋友，才發現他只需要「嘗試失敗」，不需要計算成功次數。害我在那邊思考半天rrrrr</p>
<p>使用梯形公式 (上底 + 下底 ) * 高 /2 即可。(等差公式)</p>
<p>上底：(house -1 ) 因為最多只會失敗 house -1<br>下底：(house - key) 因為 key 數量就只有這麼多，後面的房子不需要常識。<br>高： (key) 乘以 key 數量</p>
<p>非常簡單，你一定也可以地啦！</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll t ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t ;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        ll a , b;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b ;</span><br><span class="line">        ll sum ;</span><br><span class="line">        sum = ((b-a) + (b<span class="number">-1</span>))* a / <span class="number">2</span> ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa1583 - Digit Generator</title>
    <url>/2020/03/13/UVa/UVa1583/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>給你一個數字，求出此數的原本 + 每個位數的 sum(總和)，假如有同時兩個數字符合需求時輸出最小值。<br>example: 216<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = (198 + 1 + 9 + 8 )<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = (207 + 2 + 0 + 7 )</p>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p><font color = "dd0000"> <strong>暴力、枚舉，唯一信仰</strong> </font></p>
<p>你覺得效率很差? 沒關係！ 電腦不在意。</p>
<p>先透過字典得方式建表，之後查表就好。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 99999999</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> intDict[<span class="number">200010</span>] = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> n , num , sum , intTemp ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">100000</span> ; i &gt; <span class="number">0</span> ; i-- )&#123;</span><br><span class="line">        intDict[i] = INF ;</span><br><span class="line">        sum = i ;</span><br><span class="line">        intTemp = i ;</span><br><span class="line">        <span class="keyword">while</span>(intTemp)&#123;</span><br><span class="line">            sum += intTemp % <span class="number">10</span> ;</span><br><span class="line">            intTemp /= <span class="number">10</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(intDict[sum] &gt; i  )</span><br><span class="line">        intDict[sum] = i ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(intDict[n] == INF)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; intDict[n] &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>暴力</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa1594 - Ducci Sequence</title>
    <url>/2020/03/16/UVa/UVa1594/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>給你一個隊列，每一次計算後生成新的隊列，隊列規則如下:</p>
</blockquote>
<center> [a1,a1, ...., an] </center>
更新為:
<center > [|a1-an|, |a1-a2|, ...., |an-1-an|] </center>

<p>最多不生成超過1000個隊列</p>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p><font color = "dd0000"> <strong>暴力、枚舉，唯一信仰</strong> </font></p>
<p>每一次生成隊列後，總計它的序列，要是為 0 輸出 “ZERO” ，不是的話，輸出 “LOOP” </p>
<p>複雜度最多 o(1000) 很安全</p>
<h3 id="備註"><a href="#備註" class="headerlink" title="備註:"></a>備註:</h3><p>這位大神的網站寫得很棒，要是看不懂可以看她的</p>
<p><a href="http://glj8989332.blogspot.com/2019/12/uva-1594-ducci-sequence.html" target="_blank" rel="noopener">http://glj8989332.blogspot.com/2019/12/uva-1594-ducci-sequence.html</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> intCase , n , intTemp , intNum[<span class="number">25</span>] , isFlag , intSum  ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; intCase ;</span><br><span class="line">    <span class="keyword">while</span>(intCase--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; intNum[i] ;</span><br><span class="line"></span><br><span class="line">        isFlag = <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">1010</span> ; i++)&#123;</span><br><span class="line">            intSum = <span class="number">0</span> ;</span><br><span class="line">            intNum[n] = intNum[<span class="number">0</span>] ;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; n ; j++ )</span><br><span class="line">                intNum[j] = <span class="built_in">abs</span>(intNum[j] - intNum[j+<span class="number">1</span>]) ;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">                <span class="comment">//debug</span></span><br><span class="line">                <span class="comment">//cout &lt;&lt; intNum[i] &lt;&lt; ' ' ;</span></span><br><span class="line"></span><br><span class="line">                intSum += intNum[i] ;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//debug</span></span><br><span class="line">            <span class="comment">//cout &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!intSum)&#123;</span><br><span class="line">                isFlag = <span class="number">1</span> ;</span><br><span class="line">                <span class="keyword">break</span> ;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(isFlag)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"ZERO"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"LOOP"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>暴力</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa255 - Correct Move</title>
    <url>/2020/03/07/UVa/UVa255/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給定 queen 與 king 的位置， queen 下一步移動，判斷狀態和移動的合法性。</p>
</blockquote>
<a id="more"></a> 

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>水題</p>
<p>枚舉每個位置，並嘗試各種狀態與移動的合法性</p>
<p>tip: 1. 可以將二維陣列壓縮成一維陣列<br>     2. 四個角直接用if寫死即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> k , q1 , q2 ;</span><br><span class="line"><span class="keyword">int</span> q1x , q1y , q2x , q2y , kx , ky ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_between</span><span class="params">(<span class="keyword">int</span> a , <span class="keyword">int</span> b , <span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> intMax , intMin  ;</span><br><span class="line">    <span class="keyword">if</span>(b &gt; a)</span><br><span class="line">        swap(a , b);</span><br><span class="line">    <span class="keyword">if</span>(a &gt; c &amp;&amp; c &gt; b)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_illegal_move</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(k == q2 || q1 == q2)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">if</span>(q1 % <span class="number">8</span> != q2 % <span class="number">8</span> &amp;&amp; q1 / <span class="number">8</span> != q2 / <span class="number">8</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">if</span>((is_between(q1x , q2x , kx) &amp;&amp; q1y == ky ) || (is_between(q1y , q2y , ky) &amp;&amp; q1x == kx))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_move_not_allow</span><span class="params">()</span></span>&#123;                                            <span class="comment">//�W�U���S�����i�H ����I�l���a�� q2���줣�F</span></span><br><span class="line">    <span class="keyword">if</span>((k+<span class="number">1</span> == q2 &amp;&amp; q2 % <span class="number">8</span> != <span class="number">0</span> ) || (k<span class="number">-1</span> == q2 &amp;&amp; q2 % <span class="number">8</span> != <span class="number">7</span>) || (k<span class="number">-8</span> == q2) || k+<span class="number">8</span> == q2)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_stop</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( (k == <span class="number">0</span> &amp;&amp; q2 == <span class="number">9</span>) || (k == <span class="number">7</span> &amp;&amp; q2 == <span class="number">14</span>) || \</span><br><span class="line">        (k == <span class="number">56</span> &amp;&amp; q2 == <span class="number">49</span> ) || (k == <span class="number">63</span>) &amp;&amp; (q2 == <span class="number">54</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; k &gt;&gt; q1 &gt;&gt; q2)&#123;</span><br><span class="line">        q1x = q1 / <span class="number">8</span> ;</span><br><span class="line">        q1y = q1 % <span class="number">8</span> ;</span><br><span class="line">        q2x = q2 / <span class="number">8</span> ;</span><br><span class="line">        q2y = q2 % <span class="number">8</span> ;</span><br><span class="line">        kx = k / <span class="number">8</span> ;</span><br><span class="line">        ky = k % <span class="number">8</span> ;</span><br><span class="line">        <span class="keyword">if</span>(k == q1)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Illegal state"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(is_illegal_move())</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Illegal move"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(is_move_not_allow())</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Move not allowed"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(is_stop())</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Stop"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Continue"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa294 - Divisors</title>
    <url>/2020/04/09/UVa/UVa294/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給你一段數字，求出範圍數字內可以被最多數字整除於 0。(如果有一樣，輸出最小)<br><strong>並透過格式輸出</strong></p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>這裡有一個地方我覺得很酷，就是</p>
<p>6 的除數有 1 2 4 6 總共為 4<br>6 = 2^1 * 3^1<br>=&gt; 2 * 2 =&gt; 4</p>
<p>一開始覺得很神奇，但後來想通了也沒什麼，但想出方法的真的很強呢。</p>
<p>Hint:<br>x ^ 0 = 1，能明白固中道理，這題目就簡單了。</p>
<p><a href="http://celinechiu0809.blogspot.com/2015/04/uva294-divisors.html" target="_blank" rel="noopener">教會我的blog</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Maxn_Num 1000000000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">enum</span> &#123;Maxn = Maxn_Num , sqrt_max = (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(Maxn_Num)&#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; prime ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count_div</span><span class="params">(<span class="keyword">int</span> x )</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> total =<span class="number">1</span> , j ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; prime.size() &amp;&amp; x ; i++)&#123;</span><br><span class="line">        j = <span class="number">1</span> ;</span><br><span class="line">        <span class="keyword">while</span>(x % prime[i] ==<span class="number">0</span> )&#123;</span><br><span class="line">            x /= prime[i];</span><br><span class="line">            j++ ;</span><br><span class="line">        &#125;</span><br><span class="line">        total *= j ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span>) ;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> flag ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span> ; i &lt;= sqrt_max ; i++)&#123;</span><br><span class="line">        flag = <span class="number">1</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span> ; j &lt;= <span class="built_in">sqrt</span>(i) ; j++ )&#123;</span><br><span class="line">            <span class="keyword">if</span>(i % j == <span class="number">0</span> )&#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)</span><br><span class="line">            prime.push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**&lt;      //debug</span></span><br><span class="line"><span class="comment">    for(auto it : prime)</span></span><br><span class="line"><span class="comment">        cout &lt;&lt; it &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="keyword">int</span> n , l , u, temp;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; l &gt;&gt; u ;</span><br><span class="line">        pair&lt;<span class="keyword">int</span> , <span class="keyword">int</span>&gt; divMax = &#123;<span class="number">0</span>,<span class="number">0</span>&#125; ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = l ; i &lt;= u ; i++)&#123;</span><br><span class="line">            temp = count_div(i);</span><br><span class="line">            <span class="keyword">if</span> ( temp &gt; divMax.second)&#123;</span><br><span class="line">                divMax.first = i ;</span><br><span class="line">                divMax.second = temp ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Between "</span> &lt;&lt; l &lt;&lt; <span class="string">" and "</span> &lt;&lt; u &lt;&lt; <span class="string">", "</span> &lt;&lt; divMax.first &lt;&lt; <span class="string">" has a maximum of "</span> &lt;&lt; divMax.second &lt;&lt; <span class="string">" divisors.\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>math theorm</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa544 - Heavy Cargo</title>
    <url>/2020/03/08/UVa/UVa544/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>有一個載重無限的卡車從 a 地到 b 地路徑可乘載的最大重量為何?</p>
</blockquote>
<a id="more"></a> 

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>圖論，最短路徑問題，最大生成樹。</p>
<p>使用kruskal特性，將權重最大的邊加入，當起點與終點為同一樹時，輸出答案</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> strA , strB ;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; mapHash;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> intSegments = <span class="number">20000</span>;</span><br><span class="line"><span class="keyword">int</span> intParent[<span class="number">250</span>] ,intHash ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="built_in">string</span> strA )</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!mapHash.count(strA))&#123;</span><br><span class="line">       mapHash[strA] = intHash++ ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; strA &lt;&lt; ' ' &lt;&lt; intHash &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> mapHash[strA] ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> u , v , val ;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; strA &gt;&gt; strB &gt;&gt; val ;</span><br><span class="line">        u = get(strA);</span><br><span class="line">        v = get(strB);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;nodEdge[intSegments];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find_root</span><span class="params">(<span class="keyword">int</span> intA)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> intA == intParent[intA] ?  intA : intParent[intA] = find_root(intParent[intA]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">4</span> , m=<span class="number">4</span> , intValue , intCase = <span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m  &amp;&amp; n + m != <span class="number">0</span>)&#123;</span><br><span class="line">        intCase++ ;</span><br><span class="line">        mapHash.clear();</span><br><span class="line">        intHash = <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++) intParent[i] = i ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; m ; i++) nodEdge[i].read() ;</span><br><span class="line">        <span class="built_in">string</span> strStart , strDestination ;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; strStart &gt;&gt; strDestination ;</span><br><span class="line">        sort(nodEdge , nodEdge+m , [](node nodA , node nodB)&#123;</span><br><span class="line">             <span class="keyword">return</span>  nodA.val &gt; nodB.val ;</span><br><span class="line">              &#125;</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**&lt;debug</span></span><br><span class="line"><span class="comment">        for(int i = 0 ; i &lt; m ; i++)</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; nodEdge[i].u &lt;&lt; ' ' &lt;&lt; nodEdge[i].v &lt;&lt; ' ' &lt;&lt; nodEdge[i].val &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; m ; i++)&#123;</span><br><span class="line">            <span class="comment">/**&lt;debug</span></span><br><span class="line"><span class="comment">            for(int i = 0 ; i &lt; n ; i++)&#123;</span></span><br><span class="line"><span class="comment">                cout &lt;&lt; nodEdge[i].u &lt;&lt; ' ' &lt;&lt; intParent[nodEdge[i].u] &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">                cout &lt;&lt; nodEdge[i].v &lt;&lt; ' ' &lt;&lt; intParent[nodEdge[i].v] &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> intRootU , intRootV ;</span><br><span class="line">            intRootU = find_root(nodEdge[i].u);</span><br><span class="line">            intRootV = find_root(intParent[nodEdge[i].v]);</span><br><span class="line">            <span class="keyword">if</span>( intRootU != intRootV)&#123;</span><br><span class="line">                intParent[intRootU] = find_root(intRootV) ;</span><br><span class="line">                <span class="comment">/**&lt; debug</span></span><br><span class="line"><span class="comment">                cout &lt;&lt; "start" &lt;&lt; intParent[mapHash[strStart]] &lt;&lt; ' ' \</span></span><br><span class="line"><span class="comment">                     &lt;&lt; "Destination" &lt;&lt; intParent[mapHash[strDestination]] &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(find_root(intParent[mapHash[strStart]]) == find_root(intParent[mapHash[strDestination]]))&#123;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Scenario #"</span> &lt;&lt; intCase &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; nodEdge[i].val &lt;&lt; <span class="string">" tons"</span> &lt;&lt; <span class="string">"\n\n"</span>;</span><br><span class="line">                    <span class="keyword">break</span> ;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**&lt;debug</span></span><br><span class="line"><span class="comment">        for(int i = 0 ; i &lt; m ; i++)&#123;</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; nodEdge[i].u &lt;&lt; ' ' &lt;&lt; intParent[nodEdge[i].u] &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; nodEdge[i].v &lt;&lt; ' ' &lt;&lt; intParent[nodEdge[i].v] &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        cout &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>UVa</tag>
        <tag>Kruskal</tag>
        <tag>最小生成樹 MST</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa846 - Steps</title>
    <url>/2020/03/11/UVa/UVa846/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給你兩個數字，每次走的步伐必須為上一步的 +1 , -1 , 0 步伐，試問最短的步伐為?</p>
</blockquote>
<a id="more"></a> 

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p><font color= "%dd0000"> <strong>數學題。</strong> </font></p>
<p>設第一個數字為 x ，第二個數字為 y<br>最好的情況為 x+1 , x+2 , …. , r , y-3 , y-2 , y-1<br>數列看起來相似於 <font color= "%dd0000"> 梯形公式 </font></p>
<p>以此得出策略為 &rarr; 每次將 n * 2 ( n 為上一步的 +1)</p>
<p>圖示如下:</p>
<ul>
<li><code>1 2 3 2 1</code> 轉變為 <code>2 3 2</code></li>
</ul>
<p>以此類推，透過這種方式每一次的 Step += 2</p>
<h3 id="額外注意"><a href="#額外注意" class="headerlink" title="額外注意:"></a>額外注意:</h3><ul>
<li><p><code>4 5 4</code><br>將 4 刪除掉後，剩下 5 ，程式在下一次操作時，則會刪除掉兩個 5 ，但實際題目並沒有兩個 5 ，需要加上額外判斷</p>
<p>如果 只有一個 5 時 則 step += 1 </p>
</li>
<li><p><code>4 4</code><br>將 4 刪除掉後，並沒有剩下任何東西，則下次會刪除兩個 5 ，但實際題目並沒有 5 ，所以不增加 Step 直接輸出</p>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> intCase , x , y , intStep , intDistance , intSum , intLength ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; intCase ;</span><br><span class="line">    <span class="keyword">while</span>(intCase--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y ; </span><br><span class="line">        intStep = <span class="number">0</span> ;</span><br><span class="line">        intDistance = y - x ;</span><br><span class="line">        intSum = <span class="number">0</span> ;</span><br><span class="line">        intLength = <span class="number">0</span> ;</span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; intDistance &lt;&lt; '\n' &lt;&lt; '\n' ;</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        if(intDistance == 1)&#123;</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; 1 &lt;&lt; '\n' ;</span></span><br><span class="line"><span class="comment">            continue ;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       </span><br><span class="line">        <span class="keyword">while</span>(++intLength)&#123;</span><br><span class="line">            <span class="keyword">if</span>(intSum + intLength * <span class="number">2</span> &gt; intDistance)</span><br><span class="line">                <span class="keyword">break</span> ;</span><br><span class="line">            intSum += intLength * <span class="number">2</span> ;</span><br><span class="line">            intStep +=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; "intLength: " &lt;&lt; intLength &lt;&lt; '\n' ;</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; "intSum: " &lt;&lt; intSum &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(intSum + intLength &lt; intDistance)</span><br><span class="line">            intStep += <span class="number">2</span> ;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (intSum != intDistance )</span><br><span class="line">            intStep ++ ;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; intStep &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>math theorm</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa679 - Dropping Balls</title>
    <url>/2020/03/08/UVa/UVa679/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>有一顆二元樹，每次走訪會經過走訪次數最小的 node直到leaf node<br>試問在經過 x 次走訪後將會走到哪個 leaf node ?</p>
</blockquote>
<a id="more"></a> 

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><ol>
<li>寫樹模擬 -&gt; TLE!</li>
<li>依循規則找出規律 -&gt; AC!</li>
</ol>
<p>舉例： 假設 D 為 3 , I 為 3</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">     1                 </span><br><span class="line">   &#x2F;   \               </span><br><span class="line">  2     3              </span><br><span class="line"> &#x2F; \  &#x2F;  \             </span><br><span class="line">4  5  6  7</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center">node</th>
<th align="center">1</th>
<th align="center">2</th>
<th align="center">3</th>
<th align="center">4</th>
<th align="center">5</th>
<th align="center">6</th>
<th align="center">7</th>
</tr>
</thead>
<tbody><tr>
<td align="center">num of time 1</td>
<td align="center">T</td>
<td align="center">T</td>
<td align="center"></td>
<td align="center">T</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">num of time 2</td>
<td align="center">T</td>
<td align="center"></td>
<td align="center">T</td>
<td align="center"></td>
<td align="center"></td>
<td align="center">T</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">num of time 3</td>
<td align="center">T</td>
<td align="center">T</td>
<td align="center"></td>
<td align="center"></td>
<td align="center">T</td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<blockquote>
<p>看得出來嗎?</p>
<p>在深度為 2 時:<br>當 I 為奇數時， 必定會經過數字 2<br>當 I 為偶數時， 必定會經過數字 3</p>
<p>已此類推，找到它的規律了! </p>
</blockquote>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 奇數則往左邊<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ↗  <br>             
我每次將 I /2 後商數為&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ↘<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 偶數則往右邊 <br>
<br>                

<p>但要記住的是，當 I /2 = 奇數時，之後在實際走訪時 要變成 (I + 1) /2 以預防 ( I = 1 ) / 2 = 0 的冏境<br>(會導致每一次的走訪都會走至另一邊)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> intCase , D , I , intNow ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; intCase ;</span><br><span class="line">    <span class="keyword">while</span>(intCase--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; D &gt;&gt; I ;</span><br><span class="line">        intNow = <span class="number">1</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; D ; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(I % <span class="number">2</span> )&#123;</span><br><span class="line">                intNow = intNow * <span class="number">2</span> ;</span><br><span class="line">                I = (I+<span class="number">1</span>) /<span class="number">2</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                intNow = intNow * <span class="number">2</span> +<span class="number">1</span> ;</span><br><span class="line">                I /= <span class="number">2</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; intNow &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>UVa</tag>
        <tag>binary tree</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>Uva10420 - List of Conquests</title>
    <url>/2020/03/17/UVa/Uva10420/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>給你 n 行話，第一個空白前是國家名，之後則全是人名。</p>
<p>非常水題，考你 string 語法熟不熟 <font color = "dd0000"> (寫 py 的孩子們，一定會很討厭吧www) </font></p>
</blockquote>
<a id="more"></a> 

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>dict 解決一切，還可以靠著 dict 紅黑樹，自動把資料排序完。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> n , p ;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span> , <span class="keyword">int</span> &gt; MapCountry ;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="built_in">string</span> , <span class="keyword">int</span>&gt; MapName ;</span><br><span class="line">    <span class="built_in">string</span> strLine , strCountry , strName ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">    <span class="built_in">cin</span>.ignore() ;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        getline(<span class="built_in">cin</span> , strLine) ;</span><br><span class="line">        p = strLine.find(<span class="string">' '</span>) ;</span><br><span class="line">        strCountry = strLine.substr(<span class="number">0</span> , p ) ;</span><br><span class="line">        strName = strLine.substr(p+<span class="number">1</span> , strLine.length() ) ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; strName &lt;&lt; ' ' &lt;&lt; strCountry &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(MapCountry[strCountry])</span><br><span class="line">            MapCountry[strCountry]++ ;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            MapCountry[strCountry] = <span class="number">1</span> ;</span><br><span class="line">        <span class="keyword">if</span>(!MapName[strName])</span><br><span class="line">            MapName[strName] = <span class="number">1</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> it : MapCountry )</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; it.first &lt;&lt; <span class="string">' '</span> &lt;&lt; it.second &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>UVa</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa929 - Number Maze</title>
    <url>/2020/03/11/UVa/UVa929/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>從左上角開始走，走至右下角，最短路徑為多少?</p>
</blockquote>
<a id="more"></a> 

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p><font color= "%dd0000"> <strong><del>傻孩子都看的出來是用 Dijkstra’s 吧?</del></strong> </font></p>
<p><a href="https://zh.wikipedia.org/wiki/%E6%88%B4%E5%85%8B%E6%96%AF%E7%89%B9%E6%8B%89%E7%AE%97%E6%B3%95" target="_blank" rel="noopener">戴克斯特拉演算法( Dijkstra’s algorithm ) from wiki </a> 使用類似廣度優先搜尋的方法解決賦權圖的單源最短路徑問題</p>
<p>如果是初學者，可以看看 <a href="https://www.youtube.com/channel/UCZCFT11CWBi3MHNlGf019nw" target="_blank" rel="noopener">Abdul Bari</a> 大神的影片，他總是可以把很玄的演算法(algorithm)，講到連小孩子都聽得懂，常讓我覺得要是我也有這麼聰明的頭腦就好了(唉</p>
<h3 id="額外注意"><a href="#額外注意" class="headerlink" title="額外注意:"></a>額外注意:</h3><p>Dijkstra’s algorithm 的問題在於他會有機率性重複回到某點搜尋(在搜尋過程中找到比原先更好的權重)，會造成效率大幅下降，此題必須使用 <a href="http://alrightchiu.github.io/SecondRound/priority-queueintrojian-jie.html" target="_blank" rel="noopener">優先隊列( Priority Queue)</a> 透過最小堆積樹 (Min Heap) 加速(否則會吃 TLE ， 小弟我就被搞了很久，甚至還複習了一下 c++ priority_queue 怎麼寫www)</p>
<h3 id="影片教學"><a href="#影片教學" class="headerlink" title="影片教學:"></a>影片教學:</h3><p><a href="https://www.youtube.com/watch?v=HqPJF2L5h9U" target="_blank" rel="noopener">戴克斯特拉演算法( Dijkstra’s algorithm ) from Abdul Bari </a></p>
<p><a href="https://www.youtube.com/watch?v=HqPJF2L5h9U" target="_blank" rel="noopener">Heap - Heap Sort - Heapify - Priority Queues from Abdul Bari </a></p>
<p>我私心很喜歡他，於是放一張大神的圖片</p>
<img src="https://i.udemycdn.com/user/200_H/27878376_ce40_3.jpg" alt="Abdul Bari.jpg" >

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 99999999</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> intMap[<span class="number">1010</span>][<span class="number">1010</span>] = &#123;&#125; , intValue[<span class="number">1010</span>][<span class="number">1010</span>] = &#123;&#125;;</span><br><span class="line"><span class="keyword">int</span> m , n ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x , y , v ;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">( <span class="keyword">int</span> _x , <span class="keyword">int</span> _y , <span class="keyword">int</span> _v)</span></span>&#123;</span><br><span class="line">        x = _x ; y = _y ; v = _v ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Node &amp;a) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> v &gt; a.v ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;nodNode;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_map</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= m ; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(intValue[i][j] == <span class="number">99999999</span>)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">'r'</span> &lt;&lt; <span class="string">' '</span> ;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; intValue[i][j] &lt;&lt; <span class="string">' '</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x , y , intDirection[<span class="number">4</span>][<span class="number">2</span>] = &#123;<span class="number">-1</span>,<span class="number">0</span> ,<span class="number">0</span>,<span class="number">1</span> ,<span class="number">1</span>,<span class="number">0</span> ,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> intDx , intDy ;</span><br><span class="line">    Node nodTemp ;</span><br><span class="line">    priority_queue&lt;Node&gt; deqNode ;</span><br><span class="line">    nodTemp.read(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    deqNode.push(nodTemp);</span><br><span class="line">    <span class="keyword">while</span>(deqNode.size())&#123;</span><br><span class="line">        x = deqNode.top().x ;</span><br><span class="line">        y = deqNode.top().y ;</span><br><span class="line">        deqNode.pop() ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">4</span> ; i++)&#123;</span><br><span class="line">            intDx = intDirection[i][<span class="number">0</span>] + x ;</span><br><span class="line">            intDy = intDirection[i][<span class="number">1</span>] + y ;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//debug</span></span><br><span class="line">            <span class="comment">//cout &lt;&lt; intDx &lt;&lt; ' ' &lt;&lt; intDy &lt;&lt; ' ' &lt;&lt; intValue[x][y] + intMap[intDx][intDy] &lt;&lt; ' ' &lt;&lt; i &lt;&lt;  '\n' ;</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(intValue[x][y] + intMap[intDx][intDy] &lt; intValue[intDx][intDy]  )&#123;</span><br><span class="line">                intValue[intDx][intDy] = intValue[x][y] + intMap[intDx][intDy] ;</span><br><span class="line">                nodTemp.read(intDx , intDy , intValue[intDx][intDy]);</span><br><span class="line">                deqNode.push(nodTemp) ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//print_map() ;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span>) ;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> intCase ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; intCase ;</span><br><span class="line">    <span class="keyword">while</span>(intCase --)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= m ; j++)&#123;</span><br><span class="line">                 <span class="built_in">cin</span> &gt;&gt; intMap[i][j] ;</span><br><span class="line">                intValue[i][j] = INF ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">            intValue[i][<span class="number">0</span>] = <span class="number">0</span> ;</span><br><span class="line">            intValue[i][m+<span class="number">1</span>] = <span class="number">0</span> ;</span><br><span class="line">            intMap[i][<span class="number">0</span>] = INF +<span class="number">1</span> ;</span><br><span class="line">            intMap[i][m+<span class="number">1</span>] = INF +<span class="number">1</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= m ; i++)&#123;</span><br><span class="line">            intValue[<span class="number">0</span>][i] = <span class="number">0</span> ;</span><br><span class="line">            intValue[n+<span class="number">1</span>][i] = <span class="number">0</span> ;</span><br><span class="line">            intMap[<span class="number">0</span>][i] = INF +<span class="number">1</span> ;</span><br><span class="line">            intMap[n+<span class="number">1</span>][i] = INF +<span class="number">1</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        intValue[<span class="number">1</span>][<span class="number">1</span>] = intMap[<span class="number">1</span>][<span class="number">1</span>] ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; intValue[1][1] &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">        bfs();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; intValue[n][m] &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>圖論</tag>
        <tag>UVa</tag>
        <tag>Dijkstra&#39;s</tag>
        <tag>優先隊列</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>Uva11456 - Trainsorting</title>
    <url>/2020/03/19/UVa/Uva11456/</url>
    <content><![CDATA[<h2 id="題目大意"><a href="#題目大意" class="headerlink" title="題目大意:"></a>題目大意:</h2><blockquote>
<p>有一台火車， x 輛汽車，目的是要讓火車上載滿最多汽車 (可以選擇不要加入這台汽車)，且要排序。</p>
<p>值得注意的是我們只能從前面或後面新增，火車是沒辦法讓我們從中間插入的，試問最多可以載幾台汽車？</p>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>naivered 大大跟天才一樣，我都沒有想到可以前後面都增加，由於數字不會重複的特性，可以這樣子使用！</p>
<h3 id="舉例"><a href="#舉例" class="headerlink" title="舉例:"></a>舉例:</h3><p>1 2 3 4 =&gt; 4 3 2 1 1 2 3 4</p>
<p>分解成最初狀態後則:</p>
<p>1 =&gt; 1<br>2 =&gt; 2 1 2 </p>
<p>2 這樣子可以假設到加入前面與後面 (由於數字不會重複)</p>
<p>接著就算 <a href="http://www.csie.ntnu.edu.tw/~u91029/LongestIncreasingSubsequence.html" target="_blank" rel="noopener">LIS (之前我很喜歡看的演算法教學文章)</a> 即可。</p>
<h2 id="備註"><a href="#備註" class="headerlink" title="備註:"></a>備註:</h2><p>要是我寫得不好，就去看這位 <a href="http://naivered.github.io/2018/03/04/Problem_Solving/UVa/UVa-11456-Trainsorting/" target="_blank" rel="noopener">naivered</a> 大神這題的教學文，十分好理解</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> , <span class="string">"w"</span> , <span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> intCase , n , intPosition ;</span><br><span class="line">    <span class="built_in">string</span> strWord , strAns , strLine ;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vecAns ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; intCase ;</span><br><span class="line">    n = <span class="number">1</span> ;</span><br><span class="line">    getline(<span class="built_in">cin</span> , strLine ) ;</span><br><span class="line">    getline(<span class="built_in">cin</span> , strLine ) ;</span><br><span class="line">    <span class="keyword">while</span>(getline(<span class="built_in">cin</span> , strLine ))&#123;</span><br><span class="line">        <span class="comment">//debug</span></span><br><span class="line">        <span class="comment">//cout &lt;&lt; strLine &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(strLine != <span class="string">""</span>)&#123;</span><br><span class="line">            <span class="built_in">stringstream</span> ss ;</span><br><span class="line">            ss.str(<span class="string">""</span>);</span><br><span class="line">            ss.<span class="built_in">clear</span>() ;</span><br><span class="line">            ss &lt;&lt; strLine ;</span><br><span class="line">            intPosition = <span class="number">0</span> ;</span><br><span class="line">            strAns = <span class="string">""</span> ;</span><br><span class="line">            <span class="keyword">while</span>(ss &gt;&gt; strWord)&#123;</span><br><span class="line">                <span class="comment">//debug-</span></span><br><span class="line">                <span class="comment">//cout &lt;&lt; strWord &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(strWord.length() &gt; intPosition)&#123;</span><br><span class="line">                    strAns += strWord[intPosition++] ;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//debug</span></span><br><span class="line">                    <span class="comment">//cout &lt;&lt; strAns &lt;&lt; '\n' ;</span></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            vecAns.push_back(strAns) ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Case #"</span> &lt;&lt; n++ &lt;&lt; <span class="string">":"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; vecAns.<span class="built_in">size</span>()<span class="number">-1</span> ; i++)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; vecAns[i] &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; vecAns[vecAns.<span class="built_in">size</span>()<span class="number">-1</span>] ;</span><br><span class="line">            <span class="keyword">if</span>(n<span class="number">-1</span> != intCase)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">            vecAns.<span class="built_in">clear</span>() ;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>UVa</tag>
        <tag>LIS 最長遞增子序列</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>Uva11987 - Almost Union-Find</title>
    <url>/2020/03/23/UVa/Uva11987/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>並查集，有三種操作</p>
<ol>
<li>Union: 把 x , y 加入同一集合</li>
<li>Move:  將 x 移動到 y 集合</li>
<li>Return:將 x 的集合總和，與多少元素</li>
</ol>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h2><p>老實講，其實沒有很難，第二點比較特殊，我直接進行改點。</p>
<p>有個地方比較麻煩，算總和跟多少元素，原本是想要每一次都掃描陣列，發現會 TLE (廢話，但是作者太爛不知道阿<del>~</del>)</p>
<p>所以開陣列並在做 Union , Move 操作時，順便紀錄集合總和與內部元素。</p>
<h2 id="備註："><a href="#備註：" class="headerlink" title="備註："></a>備註：</h2><p>要是不知道 Disjoint Set 就看 <a href="https://www.youtube.com/watch?v=wU6udHRIkcc" target="_blank" rel="noopener">Abdul Bari</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> intSum[<span class="number">200080</span>] , intParent[<span class="number">200080</span>] , intSet[<span class="number">200080</span>] ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find_root</span><span class="params">(<span class="keyword">int</span> intA)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(intParent[intA] == intA)</span><br><span class="line">        <span class="keyword">return</span> intA ;</span><br><span class="line">    intParent[intA] = find_root(intParent[intA]) ;</span><br><span class="line">    <span class="keyword">return</span> intParent[intA] ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">each_debug</span><span class="params">(<span class="keyword">int</span> n )</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">' '</span> &lt;&lt; intParent[i] &lt;&lt; <span class="string">' '</span>  \</span><br><span class="line">            &lt;&lt; intSet[find_root(i)] &lt;&lt; <span class="string">' '</span> &lt;&lt; intSum[find_root(i)] &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"Pause"</span>) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span>,<span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"out.txt"</span> ,<span class="string">"w"</span> , <span class="built_in">stdout</span>) ;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n, m , operation , p , q  ;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">            intParent[i] = i+n ;</span><br><span class="line">            intParent[i+n] = i+n ;</span><br><span class="line">            intSum[i+n] = i;</span><br><span class="line">            intSet[i+n] = <span class="number">1</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; operation ;</span><br><span class="line">            <span class="keyword">if</span>(operation == <span class="number">1</span> )&#123;</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; p &gt;&gt; q ;</span><br><span class="line">                <span class="keyword">int</span> intRoot_p , intRoot_q ;</span><br><span class="line">                intRoot_p = find_root(intParent[p]) ;</span><br><span class="line">                intRoot_q = find_root(intParent[q]) ;</span><br><span class="line">                <span class="keyword">if</span>(intRoot_p != intRoot_q)&#123;</span><br><span class="line">                    intParent[intRoot_q] = intRoot_p ;</span><br><span class="line">                    intSum[intRoot_p] += intSum[intRoot_q] ;</span><br><span class="line">                    intSet[intRoot_p] += intSet[intRoot_q] ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//debug</span></span><br><span class="line">                <span class="comment">//each_debug(n) ;</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (operation == <span class="number">2</span> )&#123;</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; p &gt;&gt; q ;</span><br><span class="line">                <span class="keyword">int</span> intRoot_p , intRoot_q ;</span><br><span class="line">                intRoot_p = find_root(intParent[p]) ;</span><br><span class="line">                intRoot_q = find_root(intParent[q]) ;</span><br><span class="line">                <span class="keyword">if</span>(intRoot_p != intRoot_q)&#123;</span><br><span class="line">                    intParent[p] = intRoot_q ;</span><br><span class="line">                    intSum[intRoot_q] += p ;</span><br><span class="line">                    intSum[intRoot_p] -= p ;</span><br><span class="line">                    intSet[intRoot_q] ++ ;</span><br><span class="line">                    intSet[intRoot_p] -- ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//debug</span></span><br><span class="line">                <span class="comment">//each_debug(n) ;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (operation == <span class="number">3</span>)&#123;</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; p ;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; intSet[find_root(p)] &lt;&lt; <span class="string">' '</span> &lt;&lt; intSum[find_root(p)] &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>UVa</tag>
        <tag>Disjoint Set 並查集</tag>
        <tag>程式解題</tag>
      </tags>
  </entry>
  <entry>
    <title>部落格編排格式</title>
    <url>/2020/07/20/blog/blog-format/</url>
    <content><![CDATA[<h2 id="主要內容"><a href="#主要內容" class="headerlink" title="主要內容"></a>主要內容</h2><blockquote>
<p>礙於我每次寫完文章後，過一個月後總會對自己過去編排不滿意，於是我現在特此寫一篇文章來規定自己的部落格編排模式</p>
</blockquote>
<a id="more"></a>

<h2 id="關於全-BLOG"><a href="#關於全-BLOG" class="headerlink" title="關於全 BLOG"></a>關於全 BLOG</h2><ul>
<li>大標題必定都是使用 兩個 tag(##)</li>
<li>要先觀看 blog 的 tag 內容有哪些選擇後並加入</li>
<li>如果清單並沒有要用數字清單，如 1. 2. 3.，請先使用 * 在使用 - </li>
<li>寫完文章後，通常在最底下用一標題來寫心得，如 ##心得</li>
<li>通常每個 分類 他也都是一個 tag，需要注意</li>
<li>必須記得加入 !– more – ，需要再 - 旁加入&lt;&gt;</li>
<li>只要是數字、中文、英文切換，必定都要先透過空白來增加排版觀看度，但如果遇到標點符號則不用</li>
<li>如果要本地新增圖片 使用 <img src="%E6%9C%AC%E5%9C%B0%E8%B7%AF%E5%BE%91" alt=""> </li>
</ul>
<h2 id="關於解題程式"><a href="#關於解題程式" class="headerlink" title="關於解題程式"></a>關於解題程式</h2><ul>
<li>必要兩個章節<ol>
<li>題目大意：</li>
<li>分析：</li>
</ol>
</li>
<li>需放入程式碼</li>
</ul>
<h2 id="將-blog-當作字典時"><a href="#將-blog-當作字典時" class="headerlink" title="將 blog 當作字典時"></a>將 blog 當作字典時</h2><ul>
<li>必要一個章節<ol>
<li>主要內容</li>
</ol>
</li>
</ul>
<h2 id="關於需要更新的文章時"><a href="#關於需要更新的文章時" class="headerlink" title="關於需要更新的文章時"></a>關於需要更新的文章時</h2><ul>
<li>需加入一章節<ol>
<li>更新日誌，格式為 yyyy-mm-dd hh:mm:ss - 內容</li>
</ol>
</li>
</ul>
<h2 id="關於自己的心得"><a href="#關於自己的心得" class="headerlink" title="關於自己的心得"></a>關於自己的心得</h2><ul>
<li>必須加入 TAG ，人生紀錄</li>
</ul>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>人生旅途</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo d -g 指令錯誤 Deployer not found</title>
    <url>/2020/07/11/blog/hexo-d-g-error-to-deployer-not-found/</url>
    <content><![CDATA[<blockquote>
<p>當你在使用 hexo 建置屬於你的 Blog 時，發生 Deploy not found : git 的解決方式</p>
</blockquote>
<a id="more"></a>

<h2 id="問題描述"><a href="#問題描述" class="headerlink" title="問題描述"></a>問題描述</h2><p>我有在外層的 config.yml 加入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: </span><br><span class="line">    github: https:&#x2F;&#x2F;github.com&#x2F;XXX&#x2F;XXX.github.io.git</span><br></pre></td></tr></table></figure>
<p>但是在執行 <code>hexo d -g</code>時發生錯誤</p>
<h2 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h2><p>由於缺少 <code>hexo-deployer-git</code> 套件，在當前目錄安裝套件即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>接下來再使用 <code>hexo d -g</code> 就可以成功推送了！<br>很簡單對巴~</p>
<p><a href="https://blog.csdn.net/qq_21808961/article/details/84476504" target="_blank" rel="noopener">參考來源</a></p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>大學程式能力檢定 CPE 2020/06/09 心得</title>
    <url>/2020/06/15/contest_experence/CPE20200609/</url>
    <content><![CDATA[<blockquote>
<p>僅此記錄在 2020/06/09 CPE 程式設計心得</p>
</blockquote>
<a id="more"></a>

<h2 id="國北教，連走路都能感受到青春的氣息"><a href="#國北教，連走路都能感受到青春的氣息" class="headerlink" title="國北教，連走路都能感受到青春的氣息"></a>國北教，連走路都能感受到青春的氣息</h2><p>09 日的下午三點，我在北市大旁的燒肉便當店用餐，便當普通，接著我進入國北教準備進入 CPE 的場地，由於武漢疫情的關係，大學有了出入管制，當我一進去大門時，就向駐警致意我是要來參加 CPE ，駐警先讓我填了一張居家、身體健康調查表，我就順利的進入國北教。當我進入國北教時，在往視聽館 (即 CPE 考試場所)，沿途上我都沒有看到任何男生。對於我高職、大學都在工科環境下長大，這還是我第一次看到一間大學會有那麼多的女生阿…，現在轉學還來的及嗎XD!</p>
<h2 id="考場前的準備"><a href="#考場前的準備" class="headerlink" title="考場前的準備"></a>考場前的準備</h2><p>老實說，那天我的狀態是不好的。<br>我的眼睛只要看到螢幕就會變得模糊，應該是最近用眼過度了，因為之前接了太多專案使自己壓力太大，導致我那天的精神狀況並不好、稍加疲累，但不得不稱讚的是，國北教的電腦設備比起北科資財系好蠻多的，不管是教室明亮度、電腦設備都比起我們系上好很多，老實說蠻喜歡的。但有一個很大缺點，對於左撇子的人並不有善，我坐在靠牆的位置，他的距離給得並不好，我的左手非常容易撞到牆壁，並不舒服。</p>
<p>我旁邊的朋友是一位師大大三的學長，他考第二次了，感覺他的能力蠻強。但她比較內向，我曾向他搭話幾句但她都是給著類程式的回應句，但她 CPE 成績挺不錯的，寫了 6 題。</p>
<h2 id="考試題目"><a href="#考試題目" class="headerlink" title="考試題目"></a>考試題目</h2><h4 id="Problem-A-11498-Division-of-Nlogonia-失敗"><a href="#Problem-A-11498-Division-of-Nlogonia-失敗" class="headerlink" title="Problem A 11498 Division of Nlogonia　失敗"></a>Problem A 11498 Division of Nlogonia　失敗</h4><p>當時的我</p>
<ul>
<li>由於我不想看長長的英文，我直接看 Input and Output，猜測題目再講甚麼，就直接寫了，但後來好像發現他其實是向量的感覺? 我想應該是我理解錯題目了</li>
</ul>
<p>現在的我</p>
<ul>
<li>待述</li>
</ul>
<h4 id="Problem-B-10189-Minesweeper-AC"><a href="#Problem-B-10189-Minesweeper-AC" class="headerlink" title="Problem B 10189 Minesweeper AC"></a>Problem B 10189 Minesweeper AC</h4><p>當時的我</p>
<ul>
<li>踩地雷，把地雷的旁邊格數都 +1，這題花了半小時寫。</li>
</ul>
<h4 id="Problem-C-1368-DNA-Consensus-String-未提交、找出-Bug"><a href="#Problem-C-1368-DNA-Consensus-String-未提交、找出-Bug" class="headerlink" title="Problem C 1368 DNA Consensus String 未提交、找出 Bug"></a>Problem C 1368 DNA Consensus String 未提交、找出 Bug</h4><p>當時的我</p>
<ul>
<li>他給與我們 N 個長度一樣字串，然後在每個字串的第 X 字元找出哪個英文字母是最多，並輸出，且紀錄非最多英文字母的其他字母出現次數，然後輸出。這題有一個很大的坑，是讓我這次只有寫兩題的最大問題，<strong>瘋狂成社沒辦法將字串陣列放在全域！</strong>，下面進行補述。</li>
</ul>
<p>現在的我</p>
<ul>
<li>待述</li>
</ul>
<h4 id="Problem-D-855-Lunch-in-Grid-City-未嘗試撰寫"><a href="#Problem-D-855-Lunch-in-Grid-City-未嘗試撰寫" class="headerlink" title="Problem D 855 Lunch in Grid City 未嘗試撰寫"></a>Problem D 855 Lunch in Grid City 未嘗試撰寫</h4><p>當時的我</p>
<ul>
<li>給你很多點，請將其中的一個點設為中心點，讓其他點到中心點的距離為最短。當時看到沒有頭緒，選擇直接跳過。直覺是需將程式碼寫得十分攏長，於是直接略過。</li>
</ul>
<p>現在的我</p>
<ul>
<li>待述</li>
</ul>
<h4 id="Problem-E-10191-Longest-Nap-AC"><a href="#Problem-E-10191-Longest-Nap-AC" class="headerlink" title="Problem E 10191 Longest Nap AC"></a>Problem E 10191 Longest Nap AC</h4><p>當時的我</p>
<ul>
<li>教授有固定的上班時間，請您找出它可以在上班時間可以休息的最大時間。</li>
<li>想法：最長區間覆蓋長，輕輕鬆鬆，花了半小時寫。</li>
</ul>
<h4 id="Problem-F-10130-SuperSale-未嘗試撰寫"><a href="#Problem-F-10130-SuperSale-未嘗試撰寫" class="headerlink" title="Problem F 10130 SuperSale 未嘗試撰寫"></a>Problem F 10130 SuperSale 未嘗試撰寫</h4><p>當時的我</p>
<ul>
<li>背包問題再給一些變化</li>
</ul>
<p>現在的我</p>
<ul>
<li>待述</li>
</ul>
<h4 id="Problem-G-10583-Ubiquitous-Religions-未嘗試撰寫"><a href="#Problem-G-10583-Ubiquitous-Religions-未嘗試撰寫" class="headerlink" title="Problem G 10583 Ubiquitous Religions 未嘗試撰寫"></a>Problem G 10583 Ubiquitous Religions 未嘗試撰寫</h4><p>當時的我</p>
<ul>
<li>連題目都沒看，到時候在補</li>
</ul>
<p>現在的我</p>
<ul>
<li>待述</li>
</ul>
<h2 id="瘋狂成設，我一生的敵人"><a href="#瘋狂成設，我一生的敵人" class="headerlink" title="瘋狂成設，我一生的敵人"></a>瘋狂成設，我一生的敵人</h2><p>「瘋狂成設是最爛的 IDE」，考完後的我真心對他超級不爽。<br>原因如下：</p>
<ol>
<li><p>無法 Debug<br> 雖然我本來就已經對 Debug 無感，已經習慣 cout &gt;&gt; “Hello World!\n” ; ，但她在執行編譯再啟動後的語法錯誤提示十分不直觀，與 Code Block 比較下，我需要花很多時間去思考哪裡語法錯誤。</p>
</li>
<li><p>沒有提示<br>這點對我就特別重要了！因為我並不是天天寫 C++ 這門語言，我其他的專案用的是其他語言，沒辦法完全記的起 C++ 全部語法，時常會忘記一些單字。很需要提示來告訴我，我要用這個語法，我將舉例一個因為沒有提示而讓我花費許多時間去找出這個語法。 EX: string.subString (ERROR) =&gt; string.substr (RIGHT)</p>
</li>
<li><p>不方便 Debug<br>這我後來有逐漸克服與習慣，但前期我在印出來時，由於他的輸出區都在左側且排版不友善，需要花點時間習慣。</p>
</li>
<li><p><font color ="#dd0000"> ** String 陣列不能放在 global **</font><br>這點我就很納悶了，我在寫 1368 DNA Consensus String 時，在 cin 字串時，發現如果你將 String 陣列放在 global 且字串陣列 index 為 5 時，就再也沒辦法 cin 進去了！我原本認為這邊 cin 字串是最簡單並且我不可能錯的，所以我從來都不曾在這邊 Debug ，直到我在也想不出來我其他地方有 Bug 時，回頭檢查 cin 才找到 Bug !!!!! 這讓我當下十分生氣、十分無力且頭痛，一點都不想再碰瘋狂成設，因為他太難用、有地雷，再來她從來都沒跑出關於 ERROR 訊息!!!! 希望未來可以廢除瘋狂成設，非常感謝主辦方明智的選擇。也或許是只有我那台的電腦也說不定，還希望有其他人可以幫我認證。</p>
</li>
</ol>
<h2 id="檢討"><a href="#檢討" class="headerlink" title="檢討"></a>檢討</h2><p>如果你想要將 CPE 考好，我認為我需要再補強我對於英文的耐性與閱讀英文能力，我的英文能力還需要再加強，我旁邊的師大朋友看完一題的英文題目時，我才看到一半，再來，我認為我需要再將瘋狂成設熟練，畢竟我們是檢定的學生沒有權力可以請主辦方改變 CPE，只能希望主辦方意識到瘋狂成設的問題。那便是我最大的榮幸。</p>
<h2 id="更新日誌"><a href="#更新日誌" class="headerlink" title="更新日誌"></a>更新日誌</h2><p>2020-06-15 14:27:24 - 寫完 CPE 心得</p>
]]></content>
      <categories>
        <category>競賽心得</category>
      </categories>
      <tags>
        <tag>大學Life</tag>
        <tag>程式比賽</tag>
        <tag>競賽心得</tag>
        <tag>人生旅途</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Hexo 搭建 Blog</title>
    <url>/2020/03/09/blog/hexo-install/</url>
    <content><![CDATA[<h2 id="使用Hexo-搭建-Blog"><a href="#使用Hexo-搭建-Blog" class="headerlink" title="使用Hexo 搭建 Blog :"></a>使用Hexo 搭建 Blog :</h2><blockquote>
<p>想怎麼用 Hexo 搭建 Blog 嗎? 那就觀看這篇文章就對喔~</p>
</blockquote>
<a id="more"></a> 

<p><a href="https://medium.com/@bebebobohaha/%E4%BD%BF%E7%94%A8-hexo-gitpage-%E6%90%AD%E5%BB%BA%E5%80%8B%E4%BA%BA-blog-5c6ed52f23db/" target="_blank" rel="noopener"> 如何搭建個人 Blog 使用 Hexo + Gitpage </a></p>
<h2 id="附註"><a href="#附註" class="headerlink" title="附註 :"></a>附註 :</h2><p>假如需要更換主題，且主題需要在透過 node.js 在下載其他套件時，須按照指示安裝。<br>若您將網頁放在 github 需要異地下載時，則需要先透過 git bash 輸入  <code>bash hexo init &lt;folder&gt;</code> ，否則無法成功將網頁呼叫成功。 </p>
<h2 id="此-Blog-使用主題"><a href="#此-Blog-使用主題" class="headerlink" title="此 Blog 使用主題 :"></a>此 Blog 使用主題 :</h2><p><a href="https://shen-yu.gitee.io/2019/ayer/" target="_blank" rel="noopener">Ayer Theme </a></p>
<img src="https://i.loli.net/2019/12/03/SHPinIAclMX1Gra.png" alt="ayer.jpg" >

<br>

<h3 id="tips"><a href="#tips" class="headerlink" title="tips :"></a>tips :</h3><p>這裡放上一些作者之前遇到的問題，且已被解決，感謝原文章的主人分享</p>
<p><font color ="dd0000" > <strong>警告: Node.js 如果沒有放在 C 槽時， Hexo 可能安裝不成功(玄學，小弟我猜是註冊表的原因)</strong></font></p>
<p><a href="https://yaoandy107.github.io/hexo-tutorial/" target="_blank" rel="noopener">Hexo+GitHub，新手也可以快速建立部落格</a>　<br><br><a href="https://wst24365888.github.io/hexo-tags/#%E5%B7%B2%E6%88%90%E5%8A%9F" target="_blank" rel="noopener">分類或標籤因為大小寫問題</a>　<br></p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項:"></a>注意事項:</h2><ol>
<li>此主題的分類<strong><font color="#dd0000">只能用一個</font></strong></li>
<li>如果 md 檔有空格再丟到外面網域時則無法連結成功</li>
</ol>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>第五屆全國科大程式競賽心得 - 金獎(5th)心得</title>
    <url>/2020/07/08/contest_experence/ncut2020-experience/</url>
    <content><![CDATA[<blockquote>
<p>僅此紀錄 2020/07/08 第五屆全國科大程式競賽心得。<br>「紀錄每個時刻，讓未來的自己不遺忘過去的自己」<br>只有自己才能體會自己的過去<br>獲得了第五屆全國科大程式競賽金獎 (5th)<br><strong>此心得並不包含解題，將額外再另外一篇特別說明</strong></p>
</blockquote>
<a id="more"></a>

<h4 id="名詞解釋"><a href="#名詞解釋" class="headerlink" title="名詞解釋"></a>名詞解釋</h4><ul>
<li>駕駛<br>Coding、上機寫程式</li>
<li>駕駛員<br>駕駛的人員，駕駛為上述意思</li>
</ul>
<h2 id="比賽前的規劃"><a href="#比賽前的規劃" class="headerlink" title="比賽前的規劃"></a>比賽前的規劃</h2><p>比賽前，其實我們每周的一、六晚上都會花 3 小時來學習或複習新的演算法，Bill and Entroy 負責思考題目，當他們將題目思考完畢後交予給我進行 Coding ，看到這裡？有些人可能會有疑惑，那這樣是不是因為我太爛才會讓我來負責寫程式呢？其實不然，主要負責上機寫程式勢必要能夠最快速理解題目與隊友的想法，並抓出隊友的思考盲點並給予想法討論，直到我們想法達成共識後，我在進行 Coding 。</p>
<p>這樣有兩個好處，第一，由於我會與負責思考題目者進行想法討論，有時可以注意到題目思考者沒有注意到的細節，而不導致題目思考者在寫程式寫到一半時或 debug 時才發現自己想法上的漏洞。第二，我們其實有思考過一策略為每個人各自解題，會的就上機撰寫的模式。但我認為每個人都獨自在進行一個解題週期過於浪費時間，也容易使隊友感到疲乏，為甚麼呢？我定義的解題週期如下：</p>
<ol>
<li>看懂題目 -&gt; 閱讀能力</li>
<li>提出想法 -&gt; 透過過去的演算法知識進行思考</li>
<li>思考可行性 -&gt; 程式會不會太難寫、我是不是沒有注意到一些細節</li>
<li>上機撰寫 -&gt; 開始進行撰寫、Debug</li>
<li>解題成功 -&gt; 上傳後 AC</li>
</ol>
<p>我個人在解題目的經驗中，要自己再不休息的情況中重複解題週期至 4 題其實就已經感到疲憊，而其中要是在第四點才發現到一些重大問題時往往需要再回到第三點再來思考到底可不可行，對於腦袋會感到相當的疲憊，於是第二好處則是可以減少每個人的疲憊感，由於每個人進行專業分工了，大家只要在自己所負責的那項做好自己的工作就好，就能完美的分工完成解題週期。但第四點的執行者通常抗壓性要是最大、撰寫程式的能力必須要是全隊最優秀的。</p>
<h2 id="到底要當天去呢？還是提前一天去呢"><a href="#到底要當天去呢？還是提前一天去呢" class="headerlink" title="到底要當天去呢？還是提前一天去呢"></a>到底要當天去呢？還是提前一天去呢</h2><p>先說結論好了，提前一天去。因為我沒去過雲林阿，當然會想要去雲林看看搂。不過其實路途費比我想像的便宜住宿費只要 1280 元(3人房)，高鐵來回票也只要 1160元，有種突然覺得國內旅遊好便宜(不過雲林好像也沒什麼好玩的？哈哈哈哈)，也能給自己一天休息的機會，不會因為比賽早上睡過頭而導致特別敢的狀況發生在<a href="https://theriseofdavid.github.io/2020/03/23/contest_experence/Skill-Contest/" target="_blank" rel="noopener">2018 (107) 學年金手獎技藝競賽程式設計 - 金手第六心得</a>那次印象真的很深刻阿QQ。</p>
<ul>
<li>出發至雲林高鐵站<br><img src="/images/ncut2020_experience/1.jpg" alt=""></li>
</ul>
<h2 id="比賽前一天，緊張的前夕"><a href="#比賽前一天，緊張的前夕" class="headerlink" title="比賽前一天，緊張的前夕"></a>比賽前一天，緊張的前夕</h2><h3 id="漂亮的高鐵-and-疑？-沒有公車嘛！？"><a href="#漂亮的高鐵-and-疑？-沒有公車嘛！？" class="headerlink" title="漂亮的高鐵 and 疑？　沒有公車嘛！？"></a>漂亮的高鐵 and 疑？　沒有公車嘛！？</h3><p>我與隊友們相約在台北車站的南3門，大家都不太會迷路花蠻快的時間就找到了，不愧都讀北科，哈哈哈哈。我們透過高鐵到雲林時已經是 11:39 ，不得不說的是雲林高鐵站真的很漂亮，頗有機場的感覺，雲林縣政府讚讚，但是外面好荒涼QQ，我原本以為會是很熱鬧的地方結果沒有阿，公車客運也不像台北一樣方便，他們的公車反而不太像是公車是路與路之間的距離就一站，比較像是鎮與鎮的距離一站，有夠遠的…。</p>
<h3 id="路途中的小插曲"><a href="#路途中的小插曲" class="headerlink" title="路途中的小插曲"></a>路途中的小插曲</h3><p>後來我們搭計程車從雲林高鐵站到民宿(近虎尾科技大學，布拉格民宿)，這裡有一點跟台北不太一樣，台北的計程車是 70 元開始跳表，但雲林是從 100 開始，一開始有種心痛感，不過因為司機態度蠻不錯的，所以其時多給 30 元我還是可以接受拉，然後搭計程車其實感覺很不錯跟在台北搭計程車的感覺不同，離開了水泥叢林，到了田野間的地方，看著一路上的風景心情也不自覺得好了起來。</p>
<p>抵達民宿大約為 200 元，司機也提醒我說以後可以直接說到家樂福(民宿對面)，司機們都比較好知道地點在倆，到達民宿後我才發現我們可以入房的時間為下午 4 點阿，可是現在的時間是下午 1 點阿，這中間 3 個小時我要怎麼辦阿阿阿阿，這<font color="#dd0000"><strong>提醒以後的我以後住民宿必須先問幾點可以入住</strong></font>，不然的話就會發生跟我一樣的窘境QQ。</p>
<h3 id="小女孩是全世界最可愛的了！"><a href="#小女孩是全世界最可愛的了！" class="headerlink" title="小女孩是全世界最可愛的了！"></a>小女孩是全世界最可愛的了！</h3><p>幸好客服人員願意先讓我們把行李先寄放在民宿那不然我們就要拖著行李箱到處流浪了 ಥ⌣ಥ，樓下有很多夾娃娃機店，其中竟然有一個是夾蓮蓬頭的！有夠酷的，竟然還被我花 10 元夾到我超開心的而且雲林的夾娃娃機店可以夾一堆東西！例如：泡麵、舒跑…等。</p>
<p>但是雲林的夾娃娃機店比便利商店還多很多害我很意外，還是雲林人如果家裡沒東西都是跑去夾娃娃機夾而不是去便利商店買阿XD。然後雲林縣立仁國小校舍好漂亮阿，害我也好想進去裡面就讀，然後小女孩真的是世界上最可愛的生物了٩(^ᴗ^)۶，不管是哪裡的小女孩。</p>
<h3 id="看完虎尾反觀北科？"><a href="#看完虎尾反觀北科？" class="headerlink" title="看完虎尾反觀北科？"></a>看完虎尾反觀北科？</h3><p>之後我們走到虎尾科技大學去參訪，虎尾科大比起台北科大來說大了許多，北科看起來真的就像小學一樣，而且他們還可以把機車停到校園裡面去真的是太棒了！北科甚麼時候也要跟進阿，外面的停車位還有夠難找的，我的愛車都被刮了 n 遍了 ಠ︵ಠ。不過他們廁所我覺得就沒有比北科好了，我們北科的廁所真的是非常漂亮 and 非常乾淨阿！每間廁所還都會有衛生紙，要是希望自己的廁所 always 都是乾淨的就來讀北科大吧！(<del>業配</del>)，開玩笑這是我的 Blog 幹嘛還要業配阿。</p>
<h3 id="雲林的夜生活"><a href="#雲林的夜生活" class="headerlink" title="雲林的夜生活"></a>雲林的夜生活</h3><p>回來的路上我們還去 KTV 唱歌 and 喝酒，這在高中的我不可能會這樣做的，考前就是要完全的嚴肅和認真準備阿，不過我的兩個隊友似乎不這麼覺得，來比賽還是要來體驗一下雲林的生活阿。我這次竟然下來雲林都沒有看程式阿…，罪惡感好重，不過 Entroy 唱歌真的很好聽，找他唱歌真得棒。</p>
<p>我們住的套房似乎是愛情套房，一進來就有一隻粉紅大熊，好可愛，我一直抱著他好想就這樣把她帶回家喔，對於分手後的我算是很大的精神安慰了 ಠ︵ಠ，然後這次睡覺我還搶了 Bill 的棉被QQ，對不起，我下次會意識到我睡覺會搶棉被得我也會注意<font color="#dd0000"><strong>下次在外面住雙人房時先跟客房人員要兩件棉被</strong></font>，辛苦你了嗚嗚嗚嗚嗚嗚。</p>
<ul>
<li>可愛的粉紅大熊<br><img src="/images/ncut2020_experience/2.jpg" alt=""></li>
</ul>
<h2 id="比賽當天，想法與思考的碰撞"><a href="#比賽當天，想法與思考的碰撞" class="headerlink" title="比賽當天，想法與思考的碰撞"></a>比賽當天，想法與思考的碰撞</h2><h3 id="開幕式"><a href="#開幕式" class="headerlink" title="開幕式"></a>開幕式</h3><p>比賽當天，我們先在虎尾科大資訊大樓外進行報到，之後進到階梯教室等待開幕式，其中開幕式的主辦單位曾說我們這比賽能夠讓一些無法勝過台清交成的科大學校也有機會得名次，當下真得是超級感動的 ಥ⌣ಥ，然後中午的便當我覺得還不錯吃只是飯有點乾再用筷子時不太方便，我也喝了能量飲料，希望能夠將自己體力充足在考試期間不會因為疲累而寫不好，但是能量飲料 75 元真的太貴了拉。</p>
<ul>
<li>比賽隊伍<br><img src="/images/ncut2020_experience/3.jpg" alt=""><br><img src="/images/ncut2020_experience/4.jpg" alt=""></li>
</ul>
<h3 id="甚麼-notebook-只能10頁！"><a href="#甚麼-notebook-只能10頁！" class="headerlink" title="甚麼 notebook 只能10頁！"></a>甚麼 notebook 只能10頁！</h3><p>我們在開幕時，接受到一個訊息是我們的筆記只能夠有 10 頁，但是我們準備了 20 頁阿！所以我們直接在當場臨時進行刪除大法，有夠緊張的。還因為沒有 latex 導致沒辦法快速生成 pdf，幸好後來 Entroy 急中生智用 online linux 來解決此危機，不然就要出事啦！</p>
<h3 id="比賽前的緊張"><a href="#比賽前的緊張" class="headerlink" title="比賽前的緊張"></a>比賽前的緊張</h3><p>當我們進去比賽的電腦教室，我發現到我周遭的其他隊們都非常吵鬧，給予我一種非常緊張的感覺，有種覺得自己是不是因為準備不足才會這麼緊張？但其實我這麼緊張也是合理的，畢竟我連歷屆試題都只有寫 4 題，肯定會緊張的吧！當下的自己只希望能夠盡量讓自己發揮自己的本事就好，不過 scoreboard 就在我的面前壓力還真的是挺大的XD。</p>
<h3 id="考試時的小插曲"><a href="#考試時的小插曲" class="headerlink" title="考試時的小插曲"></a>考試時的小插曲</h3><p>時間到，每隊開始準備進入解題環境時卻沒辦法進入，每隊幾乎都出現一個狀況為「比賽已開始，你需要輸入特定指令才能進入比賽」之類的狀況，幸好很快就解決，不到 10 mins ，主辦單位就將每台電腦輸入指令讓大家都能繼續比賽，不得不說主辦單位還挺不賴的。</p>
<h3 id="比賽開始了，顯現自己實力的時候到了！"><a href="#比賽開始了，顯現自己實力的時候到了！" class="headerlink" title="比賽開始了，顯現自己實力的時候到了！"></a>比賽開始了，顯現自己實力的時候到了！</h3><p>比賽的過程中，我開始負責駕駛，其他隊友開始進行解決與思考題目，我們在解題的過程中，一開始順利地解開 4 題。其中一開始我對於讀取一行字串中所有的數字是想用 stringstream 但我卻對那語法忘記不熟，如果再查會太浪費時間，後來 Entroy 想到用 getchar() 來解決這個問題真的是聰明，度過了最一開始的危機。</p>
<p><strong>在最後的 90 分鐘，突然我腦袋異常清醒，告訴我自己現在正是你要發揮、拯救團隊的時候，將自己所學的知識都運用上、放手一搏吧！</strong></p>
<p>在剩下 1 hr 30 min，開始卡關，有兩題並不難的題目卡關，其中 ProblemB 關於遞迴因為解不開，導致隊友開始設想要使用暴力解法，直接建立答案表，就可以達到 \( O(1)\)，原本這想法我有嘗試著跟他們溝通這想法並不好，因為我們有看到其他隊在解此題都特別快，只有我們卡關，所以我一直覺得是我們缺少了哪部分的想法，才會使我們一直 WA。</p>
<p>但是隊友有點不太能夠聽進我的想法，一直以自己的角度去思考，認為我們只要能夠把題目解開就好，所花費的時間成本再多都沒關係。結果則是發現實現上具有根本上的問題，所以不可以使用，後來我在最後半小時急中生智想到有可能是因為題目說數字最大只會到 \(2^{32}\)，但並沒有說中間計算時不會超過，於是我就使用 long long 解決了這問題，在危險中找到出路。</p>
<p>另外一題卡關的部分，就是 Problem C 題目是想要對樹進行追蹤，我第一直覺就是樹壓縮成一維陣列，然後再將資料向下延伸找回，Bill 的想法似乎跟我一樣，但他的想法我覺得錯誤了，他寫成一個 struct ，有點類似於線段樹，但其實不用那麼麻煩，我們後來在實現此方法時發現非常不友善，程式會花費太多時間。</p>
<p>後來我的另外兩位隊友想用 struct + pointer 來解決問題，當下的我聽到時是十分震驚的，因為我覺得這是個瘋狂的舉動，在比賽的時候寫 pointer 不確定性太大、Debug 時不方便，在不容易知道自己問題會在哪部分的情況下，不應該要用 pointer，在他們後來發現不可行後。根據我的想法將樹壓縮一維陣列並透過遞迴實現，透過 Bill and Entroy 在我旁邊 Debug 與檢查錯誤讓我們在最後半小時內也對了這題，隊友也是很重要的！ </p>
<h3 id="比賽結束了，名次到底是第幾呢"><a href="#比賽結束了，名次到底是第幾呢" class="headerlink" title="比賽結束了，名次到底是第幾呢"></a>比賽結束了，名次到底是第幾呢</h3><p>由於最後一小時比賽會凍結排名，我們最後一次看到我們自己的成績是第 17 名，我非常緊張，感覺這樣有失自己的自尊，不過後來有在最後半小時解出兩題，應該名次會往前，當時的猜測是自己會是第五名 or 第六名，因為都是比較晚的時間送出應該會成績不會太漂亮，果不其然，跟我的預估一樣拿到第五名、金獎。而且金獎還是最後一個名額阿，運氣真的很好。也謝謝自己的隊友可以幫助我能夠拿到金獎，沒有他們我說不定連金獎也都沒有吧！</p>
<ul>
<li><p>頒獎拉，金獎的我們<br><img src="/images/ncut2020_experience/5.jpg" alt=""></p>
</li>
<li><p>很乖的 Entroy<br><img src="/images/ncut2020_experience/6.jpg" alt=""></p>
</li>
</ul>
<h2 id="賽後，回歸的旅途總是讓人疲憊"><a href="#賽後，回歸的旅途總是讓人疲憊" class="headerlink" title="賽後，回歸的旅途總是讓人疲憊"></a>賽後，回歸的旅途總是讓人疲憊</h2><p>我在比完賽後，認識到了一位就讀虎尾科大的工作人員，原因是因為我們在最後半小時成功解出兩題時太激動，才會不小心認識到的XD，對不起啦我下次不會那麼激動的QQ，而且他們個性也都很好願意可以讓我們將程式碼帶回來做檢討跟讓我放在 Blog 可以讓未來的我觀看，也讓她告訴我哪裡有好吃的，真的，認識新朋友的感覺真的很棒。<del>但是我們都在互嘴，哈哈哈哈</del></p>
<p>由於閉幕式後，我們的高鐵是晚上 9 點，但時間才 5 點，於是我們去虎尾附近逛逛，不得不說其實虎尾的路很大條、很好走，車流量也不多挺舒服的。但是我們在比賽的過程中卻收到空汙警報，讓我覺得這裡的人好可憐阿QQ，希望台灣的每個工廠與人們都能有良心，守護好台灣人的健康與生態環境。</p>
<p>最後回到高鐵站時，我與 Bill 在虎尾高鐵站外走走聊天，晚上的雲林其實空氣挺不錯的，而且讓我對雲林的印象很加分，東西好吃、便宜，人也都蠻熱情、計程車司機們也都很友善，讓我很喜歡這裡的人事物，突然有種不想回台北的感覺呢！</p>
<ul>
<li>晚間的雲林高鐵站<br><img src="/images/ncut2020_experience/7.jpg" alt=""></li>
<li>返程的高鐵車票<br><img src="/images/ncut2020_experience/8.jpg" alt=""></li>
</ul>
<h2 id="浪漫的情話"><a href="#浪漫的情話" class="headerlink" title="浪漫的情話"></a>浪漫的情話</h2><p>我在回程的過程中，突然想到一段話，如下：<br>A: 北港在嘉義，那南港在哪裡呢？<br>B: 台北嗎?<br>A: 而我現在就在中間當南港與北港的橋梁，把南北港的思念相互傳達到彼此。</p>
<p>天阿，自己真的好浪漫喔，哈哈哈哈。<del>神經病</del></p>
<h2 id="賽後檢討"><a href="#賽後檢討" class="headerlink" title="賽後檢討"></a>賽後檢討</h2><p>每次的比賽都需要檢討才能讓自己更完美，我個人在這次賽後有想要提出一些檢討，如下:</p>
<ol>
<li>相信駕駛員的判斷、信任駕駛員<br>為甚麼會這樣說呢？因為我覺得我在這次比賽時發現一個問題，如果想法者思考錯誤時他並不會發現錯誤，但當駕駛員無法在當下提出有力證據時，容易造成衝突，勢必要給想法者去實際駕駛一遍才能夠讓他理會，但是這樣可能會浪費多餘時間。但我也無法保證駕駛員是對的，所以駕駛員必須學會一件事情就是，要是自己沒有足夠的把握就不要否定他人想法。</li>
<li>練習時，盡量讓想法者也可以寫些題目<br>因為想法者在思考題目時，大多只有思考重點的想法，忽略掉一些小細節，而往往魔鬼藏在細節裡，常常都是因為細節而讓 Coding 變得窒礙難行，或是在原本完整的程式必須要加上現在才發現的細節但卻沒有空間讓程式修改，所造成的麻煩，於是建議隊友都能寫一些來了解題目，不需要很多。比例大約駕駛員 4 : 想法者 1 即可。</li>
<li>需要有副駕駛員<br>駕駛員思考的路上真的會累，需要有第二人來輪替會更好。</li>
<li>需要更多練習<br>我們練習的時間真的不夠多，科大程式競賽歷屆試題連完整的一年都沒有實際寫過。下次要把他寫完</li>
<li><del>不要看到太漂亮的女生就呆住</del><br><del>容易今天戀愛，今天失戀。真的好難過QQ，但是皮膚白白的女生真的好可愛 (◍•ᴗ•◍)❤️</del></li>
<li>團隊氣氛更好<br>這點 Bill 做得還不錯，很感謝他 ಥ⌣ಥ</li>
<li>必須先詢問民宿幾點可以入住</li>
<li>如果睡雙人床準備兩個棉被QQ</li>
</ol>
<p><strong>希望我的未來能夠變得更好，與我的夥伴朋友共同努力。</strong></p>
<h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>也感謝系主任願意補助我經費讓我去參加比賽，讓我無後顧之憂放心大膽一博。然後與我無關真的好好聽，我聽了 4 小時都不會膩，打這篇心得也花了我 4 小時跟打比賽一樣久呢！不說了要去睡覺了拉，下台一鞠躬。</p>
<h2 id="競賽結凍後的總成績"><a href="#競賽結凍後的總成績" class="headerlink" title="競賽結凍後的總成績"></a>競賽結凍後的總成績</h2><p><img src="/images/ncut2020_experience/9.jpg" alt=""></p>
<h2 id="金獎"><a href="#金獎" class="headerlink" title="金獎"></a>金獎</h2><img src="/images/ncut2020_experience/10.jpg" style="border:2px black solid ;box-shadow:12px 12px 12px gray;padding:5px;">

<h2 id="第五名"><a href="#第五名" class="headerlink" title="第五名"></a>第五名</h2><img src="/images/ncut2020_experience/11.jpg" style="border:2px black solid ;box-shadow:12px 12px 12px gray;padding:5px;">]]></content>
      <categories>
        <category>競賽心得</category>
      </categories>
      <tags>
        <tag>大學Life</tag>
        <tag>ICPC</tag>
        <tag>第五屆全國科技大專校院程式競賽</tag>
        <tag>程式比賽</tag>
        <tag>競賽心得</tag>
        <tag>人生旅途</tag>
      </tags>
  </entry>
  <entry>
    <title>2018 (107) 學年金手獎技藝競賽程式設計 - 金手第六心得</title>
    <url>/2020/03/23/contest_experence/Skill-Contest/</url>
    <content><![CDATA[<h2 id="程式設計競賽心得："><a href="#程式設計競賽心得：" class="headerlink" title="程式設計競賽心得："></a>程式設計競賽心得：</h2><blockquote>
<p>這篇是打給未來、或是已經是程式設計技藝競賽選手的你。</p>
<p>我之前是 107 程式設計技藝競賽金手獎第六名的選手，我覺得過程中需要的是毅力與耐心，程式設計是很機車的技藝競賽，你只有兩種狀況，會與不會。</p>
<p>所以你必須要有一個覺悟，把不會的都學會，透過腦袋與紙筆將程式一一推導出來</p>
<p>學長那年是用 visual basic 撰寫，我個人偏希望改使用 C++ ，我認為對於未來學生的學習會有更好的體驗與幫助</p>
</blockquote>
<a id="more"></a>

<h2 id="對於程式的初學者："><a href="#對於程式的初學者：" class="headerlink" title="對於程式的初學者："></a>對於程式的初學者：</h2><p>建議先不要從歷屆試題開始寫，難度應該對你來說有點高(<strong>要是不會的話證明你太強了，跳下一 part 吧</strong>)，如果初期就不太能將 simple 程式寫出來的話，挫折感會很重，你不看網路、不看學長姐之前所留下的資料基本上你很難寫出來(除非你是愛因斯坦，那你也不會看到我這篇文章了，對吧！)，先試這閱讀學長姐的 code ，不會的就問學長姐，當年是怎麼構思的，熟悉學長姐的思路後，之後看學長姐的程式碼會如魚得水。</p>
<p>要是沒有學長的幫助話，建議可以將歷屆前 3 名的程式檔案都下載下來，仔細閱讀與品嘗(短可 10 秒鐘，長可 10 小時)，我在學習之路上有一句話對我獲益良多 <font color="#dd000">模仿是最好的學習</font> ，也希望大家能體驗到箇中滋味！</p>
<h2 id="程式路途中："><a href="#程式路途中：" class="headerlink" title="程式路途中："></a>程式路途中：</h2><h3 id="資料結構-Tree-："><a href="#資料結構-Tree-：" class="headerlink" title="資料結構(Tree)："></a>資料結構(Tree)：</h3><p>對於技藝競賽來說，她十分單純又十分好懂(天啊，我都想戀愛了)，熟悉結構、走訪一遍，對你來說就不會是一個難題。<br>真的不懂就找老師，千萬不要硬撐。如果覺得沒人問的話，可以來找作者(在關於我可以看到我的連絡資訊)</p>
<h3 id="演算法與動態規劃-Algorithm-and-Dynamic-programming-："><a href="#演算法與動態規劃-Algorithm-and-Dynamic-programming-：" class="headerlink" title="演算法與動態規劃(Algorithm and Dynamic programming )："></a>演算法與動態規劃(Algorithm and Dynamic programming )：</h3><p>我建議你可以先嘗試自己寫寫看或自己慢慢推導出來，這很有趣(如果是只為了拿獎找國立科大的人來說，這裡會是一個死穴，會對你們 so boring)，但<font color="#dd0000">前提是有足夠時間練習</font>，不然就放棄掉，反正技藝競賽演算法最多只有兩題。</p>
<h2 id="賽前建議："><a href="#賽前建議：" class="headerlink" title="賽前建議："></a>賽前建議：</h2><p>可以在重寫一遍全部的歷屆試題(學術科)，在重寫中，也許會讓你體驗到新領悟，這在當時的我給予了我很大幫助，不過建議你改成用原子筆開始作圖，因為我這屆限定只能用考場提供的原子筆來 做圖，不可私下帶文具。</p>
<p><font color = "#dd0000">健保卡、身分證一定要帶。</font>我當年就是忘記帶，還特地在板橋火車站請爸媽幫我送過來，到現在還是很謝謝母親願意放下手邊的事物照顧一個不成材的兒子，真的十分感謝。</p>
<h2 id="感謝的話："><a href="#感謝的話：" class="headerlink" title="感謝的話："></a>感謝的話：</h2><p>在這邊還是有些感謝的話要說，畢竟我不是只靠著我一個人努力上來的。</p>
<h3 id="吳勝雄老師："><a href="#吳勝雄老師：" class="headerlink" title="吳勝雄老師："></a>吳勝雄老師：</h3><p>幫助我排除很多關於程式設計的問題，也給予我許多在學習上的建議，就算在獨自一人的情況下也可以藉由網路排除些學習上的障礙，也陪伴我磨練。 <del>還會拿他的早餐給你吃</del><br>在技藝競賽後，我也跟著他學習了許多其他知識，受益良多。</p>
<h3 id="高鈺成學長："><a href="#高鈺成學長：" class="headerlink" title="高鈺成學長："></a>高鈺成學長：</h3><p>由於我上一屆是空缺，加上科上並沒有留下甚麼資料給我，我當年的環境十分刻苦且艱辛，學長(高鈺成學長比我大兩屆)願意回來提點我程式，並毫不客氣地將之前他寫得作品給予我，讓我在不懂時可以品嘗他的程式碼、了解思路、解惑我的疑問。</p>
<h3 id="孫龍生老師："><a href="#孫龍生老師：" class="headerlink" title="孫龍生老師："></a>孫龍生老師：</h3><p>我程式的啟蒙老師，他奠定了我寫程式的基礎，也是他在程式初期給予了我信心，度過前陣子的難關。</p>
<h3 id="勞裕安老師："><a href="#勞裕安老師：" class="headerlink" title="勞裕安老師："></a>勞裕安老師：</h3><p>勞裕安老師使我的不成熟與稚氣逐建消失，取代而之的是穩重與成長。要是沒有他對我的諄諄教誨，或許我沒有辦法成長到讓老師們放心讓我參加技藝競賽吧！</p>
<h3 id="陳建名："><a href="#陳建名：" class="headerlink" title="陳建名："></a>陳建名：</h3><p>陪伴我高 2,3 ，最重要的人呢，要是沒有你也許我甚麼都不是，生命中的貴人，比賽好戰友。<br>也謝謝你願意將選手的位置退讓給我，讓我有一個發展的舞台。</p>
<h3 id="在選手室中陪伴我的各位："><a href="#在選手室中陪伴我的各位：" class="headerlink" title="在選手室中陪伴我的各位："></a>在選手室中陪伴我的各位：</h3><p>我想，可能會有人不喜歡我將名字透露出來，於是就不透露了。</p>
<p>在選手室的練習中，我度過很愉快的時光，在難過時有陪伴，在開心時有玩伴。<br>大家互相支援、互相努力的感覺真的不錯，有時真的懷念起來。</p>
<h3 id="看這篇文章的朋友們："><a href="#看這篇文章的朋友們：" class="headerlink" title="看這篇文章的朋友們："></a>看這篇文章的朋友們：</h3><p>如果有看到這份文章，希望能夠記得我，我不求甚麼利益回饋，我只求當我看到新的程式大神曾看過我的文章並在我文章中獲得新知識，我就很滿足了。</p>
<h2 id="最後："><a href="#最後：" class="headerlink" title="最後："></a>最後：</h2><p>最後的最後，還是要放上一張照片來做總結吧。</p>
<img src="https://i.imgur.com/eAtInHR.jpg" alt="Skill-Contest me and teacher.jpg">

]]></content>
      <categories>
        <category>競賽心得</category>
      </categories>
      <tags>
        <tag>高中Life</tag>
        <tag>程式比賽</tag>
        <tag>競賽心得</tag>
        <tag>人生旅途</tag>
      </tags>
  </entry>
  <entry>
    <title>git 在使用其他電腦 remote 同網址時問題</title>
    <url>/2020/07/11/git/git-branch-problem/</url>
    <content><![CDATA[<blockquote>
<p>當你在使用 git remote 一個曾被其他電腦 remote 的 Repositories 時，發生該 branch 已存在時的解決方式</p>
</blockquote>
<a id="more"></a>

<h2 id="問題概述"><a href="#問題概述" class="headerlink" title="問題概述"></a>問題概述</h2><p>使用者遇到先前有對一個網址進行 remote ，接下來在新電腦使用 remote 就不能 remote 時該怎麼辦?</p>
<h2 id="解決問題"><a href="#解決問題" class="headerlink" title="解決問題"></a>解決問題</h2><p>換新的分支，也就是原先可能是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add A &lt;url&gt;</span><br></pre></td></tr></table></figure>
<p>變成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add B &lt;url&gt;</span><br></pre></td></tr></table></figure>
<p>就可以把此問題解決，沒想到我之前都沒遇過這問題，今天才遇到啊！</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git 教學 - 與作者的金魚腦</title>
    <url>/2020/03/09/git/git-tutorial/</url>
    <content><![CDATA[<h2 id="git-教學"><a href="#git-教學" class="headerlink" title="git 教學 :"></a>git 教學 :</h2><blockquote>
<p>想怎麼學會使用 git 操作 github ? 那就觀看這篇文章就對喔~</p>
</blockquote>
<a id="more"></a> 

<p><a href="https://gitbook.tw/chapters/github/push-to-github.html" target="_blank" rel="noopener"> Git教學 </a></p>
<img src="https://coder.tw/wp-content/uploads/2017/02/github-825x510.png" alt="github.png" >

<p><a href="https://stackoverflow.com/questions/8044675/pull-is-not-possible-because-you-have-unmerged-files-git-stash-doesnt-work-do/25453407" target="_blank" rel="noopener">git pull</a> 遇到狀況時排解</p>
<h4 id="git-push-強制接案"><a href="#git-push-強制接案" class="headerlink" title="git push 強制接案"></a>git push 強制接案</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>


<h2 id="附註"><a href="#附註" class="headerlink" title="附註 :"></a>附註 :</h2><p>大神寫得太好，小弟我只能自嘆不如</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>手機探險記(大一)</title>
    <url>/2020/04/13/life_experence/Lost-Phone-In-20200413/</url>
    <content><![CDATA[<h2 id="一天一口氣丟掉兩次手機"><a href="#一天一口氣丟掉兩次手機" class="headerlink" title="一天一口氣丟掉兩次手機"></a>一天一口氣丟掉兩次手機</h2><p>今天早上騎車的時候手機跳海了，我去到北科才發現，我以為是我放在家裡面。結果不是！</p>
<p>後來我查了手機定位竟然定不到，在此奉獻各位台灣之星的網路真的沒事不要亂用，警察叔叔的保險櫃是沒辦法收到訊號的喔！</p>
<p>再來，感謝的話，<br>嗚嗚嗚嗚，幫我撿手機到警察局的人真的好感謝(◍•ᴗ•◍)❤️<br>我從現在開始實施有禮貌運動（不說髒話，說好話，行善事）<br>然後警察真的很友善。真的<br>然後謝謝realme, 跳海了之後還會回到主人身邊。<br>愛你啦♡(&gt; ਊ &lt;)♡</p>
<p>警局的部分:<br><img src="https://i.imgur.com/C5m5OSU.jpg"></p>
<h2 id="題外話的部分："><a href="#題外話的部分：" class="headerlink" title="題外話的部分："></a>題外話的部分：</h2><ol>
<li><p>意識到自己手機可能在警察局時，我打電話過去給了警察，警察叫我過去一趟時，我詢問下「不好意思，警察局大約什 麼時候會休息了？」，一群警察大笑，我們警察局不休息喔~<br>24小時都在營業。<br>我覺得我需要補充我的常識.</p>
</li>
<li><p>在警察局時，警察說我很幸運，在騎車的情況下，手機跳海還沒事，重點是尖峰時段，你的手機避開了其他人的車子沒被碾壓，看來你的手機求生慾很高很高，我跟警察說「對啊，因為他很愛我」，怕我沒了他就不行。</p>
</li>
<li><p>晚上回到家後，我又發現我的手機又不見了，於是我又在定位了一次，發現我的手機丟在了機車上，又忘記拿回來。看起來手機不太喜歡主人呢！一天跑走兩次。</p>
</li>
</ol>
<p>手機根本不愛我吧！他只是想要換主人而已ಥ‿ಥ</p>
<p>在這邊我像手機懺悔。對不起，我不應該讓你每個月都傳輸近500g。不應該讓你清明連假24小時都被操。<br>怕你以後又逃走。我以後會增強用量，目標一個月800G，讓你忙到沒辦法逃走的 ಥ╭╮ಥ, 不過我還是很愛你的(◍•ᴗ•◍)❤️(*＾3＾)/～♡</p>
]]></content>
      <categories>
        <category>人生旅途</category>
      </categories>
      <tags>
        <tag>大學Life</tag>
        <tag>人生旅途</tag>
        <tag>旅遊日記</tag>
      </tags>
  </entry>
  <entry>
    <title>BLOG 經驗分享</title>
    <url>/2020/07/20/life_experence/blog-experience/</url>
    <content><![CDATA[<h2 id="我為甚麼會寫-BLOG"><a href="#我為甚麼會寫-BLOG" class="headerlink" title="我為甚麼會寫 BLOG"></a>我為甚麼會寫 BLOG</h2><blockquote>
<p>因為我在高中的時候，練習科展、專題、演算法，大都是看網路上大神的 BLOG，學習他們的程式、邏輯概念、思考模式，這讓我在 2020/03/07 時有了動機，我應該幫助我自己建立一個 BLOG，來整理自己的思緒、也將自己遇到的一些狀況記錄下來，未來如果有用到也不會忘記，用俗話一點說就是不想要把知識再還給老師，知識還要是我的!</p>
</blockquote>
<a id="more"></a>

<h2 id="BLOG-一開始遇到的狀況"><a href="#BLOG-一開始遇到的狀況" class="headerlink" title="BLOG 一開始遇到的狀況"></a>BLOG 一開始遇到的狀況</h2><p>老實說，一開始在撰寫 BLOG 時，我的文字表達能力並不是很好，時常打出來的文字都不滿意，詞不達意，可能現在也是一樣XD。於是這讓我在一開始寫 BLOG 時遇到了些許障礙，有點沒有動力寫，因為我寫一個題目的時間比我打出一份我的解題心得還要久時我就有點卻步了。</p>
<h2 id="那為甚麼還有動力繼續寫"><a href="#那為甚麼還有動力繼續寫" class="headerlink" title="那為甚麼還有動力繼續寫?"></a>那為甚麼還有動力繼續寫?</h2><p>這就真的是件很神奇的事情了，通常大家都說人在做一件事情時 3個月就會把他的熱情降低至百分之 50%，可能就不再願意繼續做。但為甚麼我會繼續做呢?因為我用到了！在科大程式競賽時，我需要做一些快速複習演算法的時候，這 BLOG 就派上用場了！很神奇，因為我會對我打過的心得有印象，於是我只需要大概看一下就可以恢復很大的記憶，這在我之前沒有寫 BLOG 時是不一樣的，我常常忘記就要再上網翻資料，但上網的資料有時候營養成分又不高會很浪費時間，所以現在我就一樣繼續寫 BLOG 寫到現在~</p>
<h2 id="BLOG-伴隨著我成長的鏡子"><a href="#BLOG-伴隨著我成長的鏡子" class="headerlink" title="BLOG 伴隨著我成長的鏡子"></a>BLOG 伴隨著我成長的鏡子</h2><p>因為我會把我所學到的知識放入 BLOG 內，於是當我想跟別人說我會甚麼東西時，我可以直接快速的從 BLOG 翻閱給他看，讓他知道我是有這個實力，但要是這項事情是我沒有學過，而我將它學起來時，我則可以幫我的 BLOG 增加內容，也幫我記錄下許多資料，讓我又成長了些。或是朋友們想要跟我學些東西時，我就可以將我的 BLOG 給他看，減少溝通上的失誤，也避免掉浪費時間。畢竟時間一長很多事情是會忘記的，但記錄下來後可以快速瀏覽紀錄來喚起回憶。</p>
<h2 id="甚麼，大衛！你竟然還把你的-BLOG-丟掉-google-上！"><a href="#甚麼，大衛！你竟然還把你的-BLOG-丟掉-google-上！" class="headerlink" title="甚麼，大衛！你竟然還把你的 BLOG 丟掉 google 上！"></a>甚麼，大衛！你竟然還把你的 BLOG 丟掉 google 上！</h2><p>這…其實只是我想要拉XD，因為我在學習的過程中我都是看著大家的 BLOG 才使我成長、前進。於是我也希望我可以抱持著這種精神，充足這個世界的知識量，也許我的知識可能淺薄，沒有營養。但我相信有些文章還是具有一定的影響程度，希望大家在觀看我的 BLOG、瀏覽我的知識時不要罵我怎麼那麼爛 QQ。</p>
<h2 id="整理-BLOG-真的很難"><a href="#整理-BLOG-真的很難" class="headerlink" title="整理 BLOG 真的很難"></a>整理 BLOG 真的很難</h2><p>整理 BLOG 真的是一件難事情，我到現在都還沒有抓到整理的重點，常常都要把我的文章全部打開(大約有 70 篇，在編寫此文章這時間點)，將分類與標籤重新改過，重新分類。打造出好讓我也好讓使用者可以快速查閱到他想要的資料，到現在我還不太確定我的分類到底能不能友善的讓使用者快速抓到他想要的文章，但是我正努力朝著邁進。</p>
<h2 id="提供-BLOG-主題的大神，非常感謝"><a href="#提供-BLOG-主題的大神，非常感謝" class="headerlink" title="提供 BLOG 主題的大神，非常感謝"></a>提供 BLOG 主題的大神，非常感謝</h2><p>有了這些提供 BLOG 主題的大神，我才可以致力於編寫文章，而不用受限於其他技術之苦。 hexo 幫助了我可以快速將文章發布在 github，ayer 主題則幫助我打造出漂亮的網站，我都十分感謝。要是未來我有機會，我也想要回饋你們，謝謝。</p>
<h2 id="更新日誌"><a href="#更新日誌" class="headerlink" title="更新日誌"></a>更新日誌</h2><p>2020/07/20 00:50:23 - 完成 6 段落</p>
<ul>
<li>BLOG 一開始遇到的狀況</li>
<li>那為甚麼還有動力繼續寫?</li>
<li>BLOG 伴隨著我成長的鏡子</li>
<li>甚麼，大衛！你竟然還把你的 BLOG 丟掉 google 上！</li>
<li>整理 BLOG 真的很難</li>
<li>提供 BLOG 主題的大神，非常感謝</li>
</ul>
]]></content>
      <categories>
        <category>人生旅途</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>人生旅途</tag>
      </tags>
  </entry>
  <entry>
    <title>不應該讓女朋友做的事情，男朋友應該要做的事</title>
    <url>/2020/05/20/life_experence/heart-break-with-girl-friend/</url>
    <content><![CDATA[<h2 id="致感情路上受傷的各位："><a href="#致感情路上受傷的各位：" class="headerlink" title="致感情路上受傷的各位："></a>致感情路上受傷的各位：</h2><blockquote>
<p>今天，我被分手了。<br>於是今天的我沒有什麼心情寫程式，就讓我來抒發我的情緒吧</p>
</blockquote>
<a id="more"></a>

<ol>
<li><p>絕對不可以玩交友軟體<br> 透過交友軟體上認識的男生，一定會讓你安全感很不足吧！我就是，我會時常懷疑我女朋友有沒有背著我偷腥，有沒有亂來，時常活在這種陰影下（加上我之前有被劈腿的經驗），一朝被蛇咬，十年怕草繩，這種事情千萬不准讓女朋友做。</p>
</li>
<li><p>相信女朋友<br>相信女朋友是件很重要的事，如果懷疑了，一發現，當下除了暴怒以外真的沒有什麼好說；雖然我做出了衝動的事，但是我覺得我沒錯；但是分手了，我很難過。至少相信會比不相信來的開心吧！</p>
</li>
<li><p>學會說話<br>也許可能看起來會很壞吧！但這就是我啊！不可否認的。我喜歡親親抱抱摸摸，但女朋友不一定喜歡，如果你真的很喜歡的話，請想進一切辦法哄他，讓女友願意陪你做，不要像這個笨蛋一樣，不會哄只會明白地說，搞的女朋友越來越不喜歡我….，也是因為我是寫演算法的吧，習慣性白話不會扭扭捏捏。</p>
</li>
</ol>
<h2 id="剩下就是想對自己說的話"><a href="#剩下就是想對自己說的話" class="headerlink" title="剩下就是想對自己說的話"></a>剩下就是想對自己說的話</h2><p>大衛，我覺得你已經很努力想把自己做的更完美了，也許只是自己真的不夠優秀吧。<br>其實，老實講，我生長在一個不是很健全的環境，雖然有兩個很努力要給予我好環境的父母，但是他們時常爭執，已經對我的心靈早就造成了很大的影響，如果你看過我應該就會知道我其實是個有點幽默感又有點正義感的人，但其實我的內心是很想要有一個人陪伴我，我想要有人可以保護我，在我努力時對我說辛苦了，在我難過時可以抱抱我，能對於我的直白不感到生氣，我喜歡把我當下的情緒訴說出來，我不擅長掩飾，我的難過就是難過。我也想要被人疼愛阿…。不是被分手、被說白目、因為其他男生而吃醋。</p>
<p>也許，我們在一起的時間不久。但是我真的很喜歡妳，還沒改變過。雖然我並不是、並不能擁有平淡幸福的人(我真的覺得我不配，我生長的環境，就是建立在別人的痛苦上。透過人的慾望來滋潤我成長)，曾經最好也是最棒的女朋友，謝謝你的陪伴。也許我還是沒辦法變的優秀，至少我還曾經被你相信過，我可能應該要感到非常慶幸…。</p>
<h2 id="也許痛苦才是愛情的本質"><a href="#也許痛苦才是愛情的本質" class="headerlink" title="也許痛苦才是愛情的本質"></a>也許痛苦才是愛情的本質</h2><p>由感而發的創作才會讓人感人肺腑吧。</p>
<p><strong>馬車總有一天會變回南瓜的，我們的愛情也總有一天會結束，期待下次的見面，我最愛也最想擁抱的人。</strong><br><strong>在下次見面之前，我會在夢中與現實長大，讓你不後悔我們的相遇。</strong></p>
<h2 id="題外話"><a href="#題外話" class="headerlink" title="題外話"></a>題外話</h2><p>雖然很不道德，但是我覺得我蠻支持婚後性行為的，我會害怕，我會想佔有我女朋友的全部。這樣會很自私嗎？會的話我很抱歉，但是要是沒有這樣的話，我會做惡夢，活在深淵之中阿…</p>
<h2 id="這是在痛苦與難過中，寫出來的。文筆絕對是不好的，但是這是我的內心世界，我必須要學會接納自己。"><a href="#這是在痛苦與難過中，寫出來的。文筆絕對是不好的，但是這是我的內心世界，我必須要學會接納自己。" class="headerlink" title="這是在痛苦與難過中，寫出來的。文筆絕對是不好的，但是這是我的內心世界，我必須要學會接納自己。"></a>這是在痛苦與難過中，寫出來的。文筆絕對是不好的，但是這是我的內心世界，我必須要學會接納自己。</h2>]]></content>
      <categories>
        <category>人生旅途</category>
      </categories>
      <tags>
        <tag>大學Life</tag>
        <tag>人生旅途</tag>
      </tags>
  </entry>
  <entry>
    <title>經驗談 - 備審資料 (高中升大學)</title>
    <url>/2020/03/24/life_experence/enrollment_to_university/</url>
    <content><![CDATA[<h2 id="人生，只是一張單程票，且選擇不會在你"><a href="#人生，只是一張單程票，且選擇不會在你" class="headerlink" title="人生，只是一張單程票，且選擇不會在你"></a>人生，只是一張單程票，且選擇不會在你</h2><p>製作備審資料，真的要求的不多，只要求作者願意做，讀者願意聽。足矣。</p>
<p>高三下時，我獲獎算還多的 (在高職生中應該有算到前 5 %，可能對於高中生來說，可能是前 10 % 的經歷吧，不清楚)，明明事實證明有了十足的把握一定有國立科大可以上，但做為人，對於人生大事還是會害怕的。於是我在做備審資料時，還是十分努力的。</p>
<h2 id="備審資料製作注意事項："><a href="#備審資料製作注意事項：" class="headerlink" title="備審資料製作注意事項："></a>備審資料製作注意事項：</h2><ol>
<li>字要清楚</li>
<li>重要的要讓讀者能閱讀到</li>
<li>將自己表達清楚</li>
<li><del>讀者願意觀看</del></li>
</ol>
<h2 id="作者的話："><a href="#作者的話：" class="headerlink" title="作者的話："></a>作者的話：</h2><p>看完我的備審資料，也許你會得到新的領悟，我認為，有些東西還是用作品才能表達出來。</p>
<p>作者曾經很努力的做過備審資料，但自認為回報給予得太少 (可能是我太貪心)，哈哈哈哈，當初為了想備審資料的排版、封面，那真的很難。對於一個會寫點程式設計的小孩卻沒有任美感的小孩，做出一份讓他人賞心悅目的作品非常困難。</p>
<p>最後這份備審資料的戰績公布給大家：</p>
<p>台科 不錄取  資訊管理系<br>北科 正取    資訊與財金管理系<br>北商 備5     資訊管理系<br>中科 備3     資訊管理系<br>高科 備7     資訊管理系</p>
<p>有時候這就是命運的安排，由不得自己，明明一心只想寫程式，卻只有一間學校正取，科系對於程式的比例又不高，也許這就是緣分吧</p>
<h2 id="警告："><a href="#警告：" class="headerlink" title="警告："></a>警告：</h2><p>此備審資料嚴禁抄襲，僅供使用者參考。</p>
<p><a href="https://drive.google.com/file/d/1hO9-citl3ywVZuq4Mea4a0nFHNLLIm7m/view?usp=sharing" target="_blank" rel="noopener">大衞的備審資料 - 台北科大</a></p>
]]></content>
      <categories>
        <category>人生旅途</category>
      </categories>
      <tags>
        <tag>高中Life</tag>
        <tag>人生旅途</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 新北市薦送高中職學生赴日本技職研習參訪活動</title>
    <url>/2020/07/20/life_experence/japan-experience-for-skill-contest/</url>
    <content><![CDATA[<h2 id="主要內容"><a href="#主要內容" class="headerlink" title="主要內容"></a>主要內容</h2><blockquote>
<p>紀錄我在高三下時因為參加 2018（107）學年度全國高級中等學校商業類學生技藝競賽程式設計職種 金手獎［第六名］，而赴日本技職研習參訪活動，透過 Pdf 呈現。<br>花了5個小時的嘔心瀝血之作，十分漂亮</p>
</blockquote>
<a id="more"></a>

<h2 id="封面預覽"><a href="#封面預覽" class="headerlink" title="封面預覽"></a>封面預覽</h2><p><img src="/images/japan-experience-for-skill-contest/1.jpg" alt=""></p>
<h2 id="PDF-LINK"><a href="#PDF-LINK" class="headerlink" title="PDF LINK"></a>PDF LINK</h2><p><a href="https://drive.google.com/file/d/1WoWHRXa7AHoaa6X6kIyEKEe1-W6_x1ZA/view?usp=sharing" target="_blank" rel="noopener">2019 新北市薦送高中職學生赴日本技職研習參訪活動旅遊日誌</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>我很喜歡金手獎遇到的人事物，也跟他們都成為了好朋友，希望未來的我可以更加優秀，能夠和他們一起耀眼，也謝謝大雄老師不厭其煩地陪我、開導我的人生，您說的那份愛情與故事我銘記在心。</p>
]]></content>
      <categories>
        <category>人生旅途</category>
      </categories>
      <tags>
        <tag>高中Life</tag>
        <tag>日本</tag>
        <tag>人生旅途</tag>
        <tag>旅遊日記</tag>
      </tags>
  </entry>
  <entry>
    <title>與國小好朋友高雄屏東四天行</title>
    <url>/2020/08/18/life_experence/kaohsiung-playing20200804/</url>
    <content><![CDATA[<h2 id="說明"><a href="#說明" class="headerlink" title="說明"></a>說明</h2><blockquote>
<p>記錄我從台北到高雄與國小四位好朋友的遊玩紀錄<br>張智翔<br>郭人豪<br>劉威廷<br>謝謝你們的陪伴，沒有你們還真不行</p>
</blockquote>
<a id="more"></a>

<h2 id="8-月-4-日，用下雨來歡迎我的高雄"><a href="#8-月-4-日，用下雨來歡迎我的高雄" class="headerlink" title="8 月 4 日，用下雨來歡迎我的高雄"></a>8 月 4 日，用下雨來歡迎我的高雄</h2><p>哇哇哇，每站皆停的高鐵從台北一路坐到高雄真的屁股好痛啊…，不過其實很平穩的，高鐵讚讚。</p>
<p>我們感覺智翔老大，給我們可以住漢來大飯店，漢來真的高級，真的。至少我看那個大廳可以把我家的房子重蓋 10 遍都不是問題吧！我們住在 29 樓，視野真的不賴。</p>
<p>漢來大飯店視野<br><img src="/images/kaohsiung-playing20200804/1.jpg" alt=""></p>
<p>然後這也是我第一次操作咖啡機…，咖啡機好難操作，台北俗表示難過 ಥ⌣ಥ</p>
<p>之後我們去試試看漢來的三溫暖，跟日本的一樣要全裸，看來是我要比大小的時候了！沒拉，大家都差不多…，三溫暖的熱水真的好舒服、冷水我不敢碰，之後則是進去蒸氣室，蒸氣室裡面有鹽巴，可以抹在自己身上，我不小心抹太多，讓自己吃到鹽巴…，好鹹。</p>
<p>晚上是個下雨天，我們威廷老大也在這時候開始登場了，我們先去租借明天要去墾丁的汽車，之後去買消夜與酒來看著海景在一起吃飯蠻浪漫的，我很喜歡。</p>
<p>結束之前來一張合照。<br><img src="/images/kaohsiung-playing20200804/2.jpg" alt=""></p>
<h2 id="8-月-5-日，我的第一次墾丁"><a href="#8-月-5-日，我的第一次墾丁" class="headerlink" title="8 月 5 日，我的第一次墾丁"></a>8 月 5 日，我的第一次墾丁</h2><h3 id="白天的墾丁"><a href="#白天的墾丁" class="headerlink" title="白天的墾丁"></a>白天的墾丁</h3><p>起床梳洗後，我們則準備離開漢來要前往墾丁，其中我們智翔在當司機時，我們威廷哥哥倒是很想要當司機，兩個人不斷在講誰要開車，真的蠻有趣 XD。其中，他們在某一次紅綠燈有了這段對話，太有趣了！<br><img src="/images/kaohsiung-playing20200804/3.jpg" alt=""></p>
<p>再前往墾丁的路上先去吃了一間海產店，不得不說高雄的海產都很便宜。還有我們人豪哥哥願意幫忙剝蝦，這樣我就不用說我對蝦過敏了 XD。在墾丁的路上，我們劉董事長一直很期望可以住進夏都，但我們翔老大一句話解決，「靠我們威董 joe 一下了」。</p>
<p>剛到民宿後的張董<br><img src="/images/kaohsiung-playing20200804/4.jpg" alt=""></p>
<p>到了墾丁後，在民宿休息下後，我想要買泳衣，但是後面卻忘記買了，老人家事不記得的事情太多了。我們翔哥表示淺水灣太多人，要去白沙灣，那裏沒人玩起來才舒服(我有點忘記地名了，搞錯了抱歉Q)，我們似乎還遇到浩子，我還以為是阿翔XD，阿浩，我對不起你。</p>
<p>印象深刻的海景<br><img src="/images/kaohsiung-playing20200804/7.jpg" alt=""></p>
<p>那天是禁止游泳的，風浪太大了。所以我們只能踏踏水，親吻海浪。一開始我們都站在浪打不到我們大腿的地方，後來越來越想挑戰浪，之後坐下來，直接讓浪打過我們全身。好舒服阿，只是感覺自己的身體也快斷了，浪超大的，如果我原本斜率是 0，那可以把我的斜率變成 1。</p>
<p>在白沙灣的合照<br><img src="/images/kaohsiung-playing20200804/5.jpg" alt=""></p>
<h3 id="夜晚的墾丁"><a href="#夜晚的墾丁" class="headerlink" title="夜晚的墾丁"></a>夜晚的墾丁</h3><p>時候晚了，於是我們一夥人上來要把身上的沙粒洗乾淨，看到有一處可以清洗(需要付費)，蠻感動的，不然我們就要帶一堆沙粒回家了，嗚嗚嗚嗚。傍晚的蚊子真的很多，我在那邊一口氣被叮了 10 個包，蚊子的移動血庫，教官，我對蚊子捐血可以給我嘉獎嗎。</p>
<p>傍晚的墾丁，令人陶醉<br><img src="/images/kaohsiung-playing20200804/6.jpg" alt=""></p>
<p>夜晚，我們進入墾丁大街，準備消費，吃了一家好吃的泰式餐廳。之後大家就在墾丁逛街，我想買雙拖鞋，但發現墾丁賣的拖鞋都不太適合我，我腳太大了…。腳大錯了嗎 ಥ⌣ಥ</p>
<p>我們劉董事長對於墾丁大街的名言<br><img src="/images/kaohsiung-playing20200804/8.mp4" alt=""></p>
<p>我們逛完時，在街上想買一碳烤披薩，但卻臨時突然下大雨!!!!!我濕的跟下雨天沒人要的孩子一樣，過不久後，雨停了，在過不久後，雨下了。濕了又乾，乾了又濕，墾丁的天氣跟女孩子一樣讓人捉摸不定。</p>
<h3 id="人豪呢"><a href="#人豪呢" class="headerlink" title="人豪呢"></a>人豪呢</h3><p>你問我，人豪呢? 你們不是 3 個人出去玩嗎?<br>恩，對阿。<br>他在跟他女朋友聊天，OFFLINE。</p>
<p>✖️ 沒有照片可以放的人豪</p>
<h2 id="8-月-6-日，向屏東探險"><a href="#8-月-6-日，向屏東探險" class="headerlink" title="8 月 6 日，向屏東探險"></a>8 月 6 日，向屏東探險</h2><h3 id="國家公園-and-鵝鑾鼻"><a href="#國家公園-and-鵝鑾鼻" class="headerlink" title="國家公園 and 鵝鑾鼻"></a>國家公園 and 鵝鑾鼻</h3><p>整理好後，我們就再往南出發，途中看到很多人騎著腳踏車，勇士，都是勇士。我們先去一座國家公園拍照，終於像觀光客了orz，風景很漂亮。</p>
<p>人豪的照片，第一次<br><img src="/images/kaohsiung-playing20200804/9.jpg" alt=""></p>
<p>我們的合照，人豪照片的第二次<br><img src="/images/kaohsiung-playing20200804/10.jpg" alt=""></p>
<p>接著，前往鵝鑾鼻燈塔，鵝鑾鼻是需要收費的，但因為武漢肺炎。原本我們應該是不用收費的!結果他說滿 19 歲以上都要收費，可惡，我應該早點來的 ಥ⌣ಥ。因為是正中午，正熱的天氣我光走幾步路就滿身大汗了，好可怕…。之後到了鵝鑾鼻燈塔，其實他跟我想像的差有點多，沒想到她其實沒有很高，感覺只有 4、5 層樓，有點小可惜。</p>
<p>之後我們進行了觀光客必備，拍照！✧(&gt;o&lt;)ﾉ，接著就前往海生館拉。</p>
<p>智翔終於拍出一張像樣的成績單了<br><img src="/images/kaohsiung-playing20200804/11.jpg" alt=""></p>
<p>團隊大合照<br><img src="/images/kaohsiung-playing20200804/12.jpg" alt=""></p>
<h3 id="海生館與跟鹿鹿玩"><a href="#海生館與跟鹿鹿玩" class="headerlink" title="海生館與跟鹿鹿玩"></a>海生館與跟鹿鹿玩</h3><p>接著，我們順著路到了海生館，海生館也是需要門票的。但是，這次不一樣摟！只要你是 2001/07/01 後出生的小孩都不用收費，嘻嘻，兩位老人去旁邊買票吧。</p>
<p>成功進去海生館之後，我發現海生館有好多生魚片，每個看起來都好好吃，害我肚子馬上就餓了。(理組人思考方式 XD，魚魚，對不起啦)</p>
<p>附上我最想吃的生魚片XD<br><img src="/images/kaohsiung-playing20200804/13.jpg" alt=""></p>
<p>後來我們繼續逛逛，有個議題是在講關於海洋生態環保，而當中有一面牆是希望大家用便利貼來訴說怎麼樣可以對海洋更好。正當我因為很多人都在表示要怎麼環保時，對！就是這個 moment，我看到了一張便利貼，感覺是一個很善良的小孩寫的一張便利貼，我卻不自覺的開懷大笑。</p>
<p>可愛的小孩寫的 (◍•ᴗ•◍)❤️<br><img src="/images/kaohsiung-playing20200804/14.jpg" alt=""></p>
<p>之後逛到了禮品店，對，沒錯。是我執意要逛的XD，我想說我對我的前女友保有歉意，於是想要買一個可愛吊飾送給他，他們卻一直在講魚餌魚餌的，討厭死了。<br>這可是我發自內心的真誠道歉呀。</p>
<p>選購玩偶中..<br><img src="/images/kaohsiung-playing20200804/15.jpg" alt=""></p>
<p>中間，我們吃了一家海產店。生魚片只要 180 元 10 片，我只要省下兩杯麥香的錢就可以吃ㄟ，屏東的食物好讚好便宜好好吃。我還不把我體重弄到破百，對不起這些魚。ε٩(๑&gt; ₃ &lt;)۶з<br><del>希望我死掉以後，可以不要被魚魚們欺負…</del></p>
<p>接下來跑去看鹿鹿，鹿鹿很可愛，但是我手上拿著飼料的時候，他們就像喪屍般不斷的去找你，吞食你的生命(飼料)，我一開始的策略是選擇逃跑，但跑著發現我被逼到一個小角落…，那些凶狠的鹿絲毫感覺不到我的害怕，繼續用著他的鹿角戳我的肚子，幸好我肚子夠軟，不然我的內臟早就被鹿角戳的亂七八糟的吧 QQ。最終還是輸給了鹿鹿，把生命給了他…。然後<br>然後呢?<br>.<br>.<br>.<br>然後他就不理我了…，一群現實鬼呀。</p>
<p>對，然後情侶很多，要有被閃的風險。很多大便，你閃不過的。</p>
<h3 id="晚餐與尋找高中摯友"><a href="#晚餐與尋找高中摯友" class="headerlink" title="晚餐與尋找高中摯友"></a>晚餐與尋找高中摯友</h3><p>晚餐後我們去吃汕頭火鍋，就是我們國瑜寧可不要開記者會也要吃到的火鍋XD，雖然我對他並沒有太大興趣，因為我對於火鍋沒有到很喜歡。不過他真的是蠻好吃的，店長人不錯，難怪我們國瑜也要吃。<br>「高雄可以輸，火鍋必須吃」– 市長韓國瑜留<br>.<br>.<br>.<br>當然不可能啦，開玩笑的。國瑜你會原諒我的吧，我們家有投票給你的！♡(&gt; ਊ &lt;)♡</p>
<p>回家的過程中，我還把我的提袋忘在汕頭…，這可能就是開國瑜玩笑的後果吧qq，大家還是不要亂開玩笑喔</p>
<p>回到了智翔的家後，我去了一趟陪我高中成長 3 年，幫助我變強的那個男人，陳建名。畢竟他在高科讀書，不找他還是不行的，跟他閒話家常憶當年，當時的我還真神勇阿，不像現在只能退在這邊打 blog，嗚嗚，也只有科大金獎，我們一同在高雄的街道漫步，直到太陽再次升上天空。</p>
<h2 id="8-月-7-日，玩命關頭機車版"><a href="#8-月-7-日，玩命關頭機車版" class="headerlink" title="8 月 7 日，玩命關頭機車版"></a>8 月 7 日，玩命關頭機車版</h2><p>早起與建名道別後，搭著智翔的機車回到了智翔家，然後去吃了一間鍋燒意麵，好吃。真的好吃，但是憑甚麼只有高科有加麵的機會，生氣，哼！之後我們提議去打保齡球，再去草衙道，我原本以為我保齡球沒有變爛，結果我已經爛到連球都不會拿了…，下次還是不要說大話阿，說自己很會打。唉</p>
<p>再晚點，我們去了草衙道，這個時候呢！對，我們那位 OFFLINE 的人豪終於上線了，我們去逛 NET，正當我們威廷想要買自己所看重的衣服時，我們人豪跟祥哥直接否決掉他，之後我們的人豪帥氣地幫我們威廷智翔選配衣服，我也在人豪的推薦下買了一個帽子，幸好不是綠帽 XD</p>
<p>回程時，由於我們可能對高鐵來不及，我們智翔用迅雷不及掩耳的速度，把我載到了北科，這真的是讓我嚇了一伸冷汗阿，智翔你有幫我保保險，對吧，對吧！高雄騎車真的沒有交通規則的，都是生存規則的…。其中我們智翔曾說了一句名言。<br>「禁行機車道，盡情騎機車」– 飆仔張智翔</p>
<p>但幸好我們還是平安地來到高鐵站，原本 20 分鐘 -&gt; 變成了 10 分鐘，你真的是時間管理大師，智翔。</p>
<p>之後我們到了板橋車站，搭了計程車。度過了這段開心又愉快的時光，也謝謝各位都願意陪伴在我身邊。</p>
]]></content>
      <categories>
        <category>人生旅途</category>
      </categories>
      <tags>
        <tag>大學Life</tag>
        <tag>人生旅途</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa12538 - Version Controlled IDE</title>
    <url>/2020/09/01/UVa/UVa12538/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>我們需要版本控制一份文件，類型如下：<br>type 1 ，插入字串在 p 位置<br>type 2 ，移除字串從 p 位置開始移除 c 個字元<br>type 3 ，查詢 v 版本從 p 位置開始輸出 c 個字元<br>每進行一次 type 1 or 2 的動作，就增加一版本。<br>我們順便進行加密混淆的動作，每一次只要 type 3 輸出的字元中擁有 ‘c’，則接下來 除了 type 一外的數字都會因為前面 type 3 輸出字元中有多少的 c，則會增加多少數字。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>通常大家看到這題直覺都會是用 string 來寫這題吧！但這題不是 QAQ。<br>這題要用 string 的另外一個好朋友 rope 來解決，rope 的結構為「可持久化平衡樹」，他在加入資料時不破壞舊有狀態，這樣使得每次在插入新增時效率來比 string 更優秀。</p>
<p>下圖為 <a href="https://en.wikipedia.org/wiki/Rope_(data_structure)" target="_blank" rel="noopener">wiki string 與 rope 的複雜度比較圖</a><br><img src="/images/UVa12538/1.PNG" alt=""></p>
<p>在這需要大量插入移除的題目中，rope 是再好不過的了！且他語法也跟 string 大同小異，上手起來也不至於太久。</p>
<h3 id="小提醒"><a href="#小提醒" class="headerlink" title="小提醒:"></a>小提醒:</h3><p>type 2 and type 3 的 p 都是從 1 開始，所以必須要 -1，因為電腦從 0 開始呀！</p>
<p>rope.insert()，裡面放的是字元陣列！所以如果是 string，需要變成 string.c_str()，才有辦法讀進去喔！</p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>查了下 string 中文是細繩，rope 是粗繩，嗯? 怎麼感覺好像特斯拉與愛迪生的感覺呢wwww，主流都是 string 沒有 rope 阿 ಥ⌣ಥ。不過被我學了一課，嗯! 我又多學了一些知識，開心。</p>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="stl之rope大法好及可持久化并查集用法">rope大法好</a><br><a href="http://sunmoon-template.blogspot.com/2015/01/c-rope.html" target="_blank" rel="noopener">c++ rope 基本應用</a><br><a href="https://en.wikipedia.org/wiki/Rope_(data_structure)" target="_blank" rel="noopener">Rope (data structure)</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ext/rope&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 50020</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"in1.txt"</span> , <span class="string">"r"</span> , <span class="built_in">stdin</span> );</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// LOCAL</span></span></span><br><span class="line">    <span class="keyword">int</span> n , t , a , b , c , d=<span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span> ;</span><br><span class="line">    <span class="built_in">string</span> strA ;</span><br><span class="line">    rope&lt;<span class="keyword">char</span>&gt; r[MAXN] , rtmp ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; t ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a ;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; strA ;</span><br><span class="line">            a -= d ;</span><br><span class="line">            r[++v] = r[v] ;</span><br><span class="line">            r[v].insert(a,strA.c_str());</span><br><span class="line">            <span class="comment">//debug</span></span><br><span class="line">            <span class="comment">//cout &lt;&lt; r[v] &lt;&lt; '\n' ;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(t==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b ;</span><br><span class="line">            a -= d ; b -= d ;</span><br><span class="line">            r[++v] = r[v] ;</span><br><span class="line">            r[v].erase(a<span class="number">-1</span>,b);</span><br><span class="line">            <span class="comment">//debug</span></span><br><span class="line">            <span class="comment">//cout &lt;&lt; r[v] &lt;&lt; ' ' &lt;&lt; r[v-1] &lt;&lt; '\n' ;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(t==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c ;</span><br><span class="line">            a -= d ; b -= d ; c -= d ;</span><br><span class="line">            rtmp = r[a].substr(b<span class="number">-1</span>,c) ;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; rtmp &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">            d += count(rtmp.begin() , rtmp.end() , <span class="string">'c'</span> );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>UVa</category>
      </categories>
      <tags>
        <tag>UVa</tag>
        <tag>程式解題</tag>
        <tag>rope</tag>
      </tags>
  </entry>
  <entry>
    <title>Codeforces 1397A - Juggling Letters</title>
    <url>/2020/08/31/Codeforces/Codeforces%201397A/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給你 x 組字串，試問能不能把這些字串進行重組後，能夠再重新分成 x 組字串，但字串內容則是全部一樣，可以輸出 YES，不行輸出 NO。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><blockquote>
<p>水題，這題真的水題，還是有點巧思的水題。喜歡這種水題</p>
</blockquote>
<p>由於他會給你一些字串，但這些字串的字母可以全部移動，而他詢問說要讓重組後的字串全部一樣，於是只要確認<strong>每個字母</strong>除以 x 剛好是整除時就可以輸出 YES，如果不行就輸出 NO。</p>
<h2 id="心得："><a href="#心得：" class="headerlink" title="心得："></a>心得：</h2><p>這題其實不難，但我在閱讀時也花了許多時間。以及我在思考題目時其實也不太能夠馬上很直觀了解，但進行假設與觀察後即可發現規律，我認為這題放在第一題是很不賴的設計。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">char</span> , <span class="keyword">int</span>&gt; dict ;</span><br><span class="line"><span class="built_in">string</span> strTemp ;</span><br><span class="line"><span class="keyword">int</span> t , n  ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ans</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> it : dict)&#123;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; it.second &lt;&lt; '\n' ;</span></span><br><span class="line">        <span class="keyword">if</span>(it.second % n)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"YES"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//#ifdef LOCAL</span></span><br><span class="line"><span class="comment">//    freopen("in1.txt" , "r" , stdin );</span></span><br><span class="line"><span class="comment">//#endif // LOCAL</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t ;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">        dict.clear();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; strTemp ;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; strTemp.length() ; j++)&#123;</span><br><span class="line">                dict[strTemp[j]] +=<span class="number">1</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
      <tags>
        <tag>水題</tag>
        <tag>程式解題</tag>
        <tag>Codeforces Round .#666 (Div. 2)</tag>
      </tags>
  </entry>
  <entry>
    <title>Codeforces 1397D - Stoned Game</title>
    <url>/2020/08/31/Codeforces/Codeforces%201397D/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>T、HL 在玩遊戲。遊戲規則如下，有 x 堆石頭，每堆石頭數量不定，每次都是 T 先從其中一堆拿石頭，H 再拿一顆石頭，每位玩家則不可以拿上位玩家拿石頭的石頭堆。<br><del>這到底是甚麼原始人遊戲 XD，好像舊石器時代的人會玩的遊戲</del></p>
</blockquote>
<a id="more"></a>

<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><blockquote>
<p>這題真的很難啊…，這題目與我之前碰過的經驗不同，讓我搞錯方向去思考，好題好題。<br>幸好有解開啦…，不然我就會很生氣了 XD。</p>
</blockquote>
<p>每次都選擇最大的兩堆石頭出來，然後兩堆石頭各減一。之後再放回去 priority_queue 內，假如 priority_queue size 只有一堆代表 T win，若剛好 0 堆則代表 HL win。</p>
<p>至於我為甚麼會這樣想呢？我建議讀者都先從我的初步想法慢慢讀起，我認為會比直接看我的正確想法來的更好理解些。</p>
<h3 id="初步想法"><a href="#初步想法" class="headerlink" title="初步想法"></a>初步想法</h3><h4 id="錯誤想法-奇偶數堆"><a href="#錯誤想法-奇偶數堆" class="headerlink" title="錯誤想法 - 奇偶數堆"></a>錯誤想法 - 奇偶數堆</h4><p>一開始，稍微推斷一下。<br>他可能是甚麼透過偶奇數來判斷的，個人在猜應該是用偶數堆與奇數堆來進行判斷。<br>後來自己在紙筆推導時，發現 2 2 2 這測資是 HL win。但 2 2 4 則是 T 贏。</p>
<h4 id="錯誤想法-T-從最小堆石頭拿取，HL-從最大堆石頭拿取"><a href="#錯誤想法-T-從最小堆石頭拿取，HL-從最大堆石頭拿取" class="headerlink" title="錯誤想法 - T 從最小堆石頭拿取，HL 從最大堆石頭拿取"></a>錯誤想法 - T 從最小堆石頭拿取，HL 從最大堆石頭拿取</h4><p>這是根據題目給的測資進行判斷，比較有點根據了XD<br>只要只剩一堆石頭必定會是 T 贏，HL 則是要盡量讓石頭堆數達到兩堆且兩堆數量一樣。(從題目測資進行判斷)，於是我寫了一程式關於 T 從小石頭開始拿，當 T 從小石頭堆的提取數量已經大於 HL 的最大堆時，則 HL 在往次大堆進行提取，看最後是 T 還是 HL 的石頭比較多，我在進行判斷。(此想法透過遞迴撰寫)。</p>
<p>由於是錯誤想法因此我用圖片來給大家看我的錯誤遞迴，以免誤導大家以為這也是正確的一部份。</p>
<p><img src="/images/Codeforces-Round-666-Div-2-pD/1.PNG" alt=""></p>
<p>但後來證明我是錯誤的，測資怎麼樣都沒過，卡在第二筆。我後來仔細想想，每次都只拿一顆，經驗告訴我，消去法不一定適用。在使用 2 2 2 測資時得到啟發。</p>
<h4 id="正確想法-T-只提取最大堆石頭，HL-則提取次大堆石頭"><a href="#正確想法-T-只提取最大堆石頭，HL-則提取次大堆石頭" class="headerlink" title="正確想法 - T 只提取最大堆石頭，HL 則提取次大堆石頭"></a>正確想法 - T 只提取最大堆石頭，HL 則提取次大堆石頭</h4><p>為甚麼會這樣想呢？ 是 1 5 1 這測資啟發我的，我只要 T 直接拿取最大堆，那 HL 要拿甚麼石頭我都不需要在意阿 XD，反正我只要拿我的最大堆，剩下的石頭隨 HL 拿就行。那如果最大堆沒有呢？那就拿次大堆吧，把問題丟給 HL 就可以了 XD。</p>
<p>那有人會好奇說，為甚麼 HL 怎麼會每次都拿最大堆石頭？這樣 HL 真的是聰明的嗎？其實阿，這場遊戲 HL 完全沒有優勢，她為了要把自己的優勢找回來，所以她要拿次大堆的石頭，來希望當最大堆的石頭用完時，次大堆的石頭還在，這樣他就會是贏家 XD。</p>
<h2 id="心得："><a href="#心得：" class="headerlink" title="心得："></a>心得：</h2><p>暴力解法，這題讓我很意外啊！我以為會是很優秀的解法，沒想到被我這個程式笨蛋給用暴力解法解出來，如果這並不是作者想的方法，作者會被我給氣死吧! XD</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 120</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> t , n ;</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt; num;</span><br><span class="line"><span class="keyword">int</span> a , b ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">judge</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a , b ;</span><br><span class="line">    <span class="keyword">while</span>(num.size())&#123;</span><br><span class="line">        a = num.top() ;</span><br><span class="line">        a-- ;</span><br><span class="line">        num.pop();</span><br><span class="line">        <span class="keyword">if</span>(!num.size())&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"T"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        b = num.top() ;</span><br><span class="line">        b-- ;</span><br><span class="line">        num.pop();</span><br><span class="line">        <span class="keyword">if</span>(a &gt; <span class="number">0</span>)</span><br><span class="line">            num.push(a);</span><br><span class="line">        <span class="keyword">if</span>(b &gt; <span class="number">0</span>)</span><br><span class="line">            num.push(b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"HL"</span> &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//#ifdef LOCAL</span></span><br><span class="line"><span class="comment">//    freopen("in1.txt" , "r" , stdin );</span></span><br><span class="line"><span class="comment">//#endif // LOCAL</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t ;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n ;</span><br><span class="line">        <span class="keyword">int</span> intTemp ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; intTemp ;</span><br><span class="line">            num.push(intTemp) ;</span><br><span class="line">        &#125;</span><br><span class="line">        judge();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
      <tags>
        <tag>程式解題</tag>
        <tag>暴力搜尋法</tag>
        <tag>Codeforces Round .#666 (Div. 2)</tag>
      </tags>
  </entry>
  <entry>
    <title>R if else 的用法</title>
    <url>/2020/09/03/R/R-ifelse/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>內容記錄關於 R if else 中的用法</p>
</blockquote>
<a id="more"></a>

<h2 id="正常，普通寫法"><a href="#正常，普通寫法" class="headerlink" title="正常，普通寫法"></a>正常，普通寫法</h2><p>相信大家都會，不用我在都說 XD</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="R-if-一行寫法，通常在-lambda-function-中使用"><a href="#R-if-一行寫法，通常在-lambda-function-中使用" class="headerlink" title="R if 一行寫法，通常在 lambda function 中使用"></a>R if 一行寫法，通常在 lambda function 中使用</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ifelse( test_expression , <span class="literal">TRUE</span> , <span class="literal">FALSE</span> )</span><br></pre></td></tr></table></figure>
<p>test_expression =&gt; 判斷的式子<br>TRUE =&gt; 條件符合的執行<br>FALSE =&gt; 條件不符合的執行</p>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://www.datamentor.io/r-programming/ifelse-function/" target="_blank" rel="noopener">R ifelse() Function</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>程式語言的世界博大精神，要是沒有他們的付出我能走上現在的路嗎?<br>肯定是沒辦法的，於是我也需要更努力地去為社會付出。</p>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>QUESTION! data_frame 要怎麼搜尋欄位中的值</title>
    <url>/2020/09/03/R/R-data-frame-search/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>寫程式的時候是不可能沒遇到 bug 的，bug 紀錄整理</p>
</blockquote>
<a id="more"></a>

<h2 id="QUESTION-data-frame-要怎麼搜尋欄位中的值"><a href="#QUESTION-data-frame-要怎麼搜尋欄位中的值" class="headerlink" title="QUESTION! data_frame 要怎麼搜尋欄位中的值"></a>QUESTION! data_frame 要怎麼搜尋欄位中的值</h2><p>假如有一 dataframe 長這樣 (變數命名為 df )</p>
<table>
<thead>
<tr>
<th>Quiz</th>
<th>Score</th>
</tr>
</thead>
<tbody><tr>
<td>math</td>
<td>60</td>
</tr>
<tr>
<td>chinese</td>
<td>70</td>
</tr>
<tr>
<td>english</td>
<td>80</td>
</tr>
</tbody></table>
<p>我要尋找 english 的分數，那我應該語法要怎麼打比較好？</p>
<h3 id="answer"><a href="#answer" class="headerlink" title="answer:"></a>answer:</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">print(df[df[<span class="string">'Quiz'</span>==<span class="string">'english'</span>],<span class="number">2</span>])</span><br></pre></td></tr></table></figure>
<p>這樣就可以搞定了！我在查這語法時真的花很多時間查詢。而且網站還是寫 python 的 XD，但他啟發了我，很謝謝他。</p>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://www.edureka.co/community/43215/how-to-find-the-index-of-a-particular-value-in-a-dataframe" target="_blank" rel="noopener">How to find the index of a particular value in a dataframe?</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>程式語言的世界博大精神，要是沒有他們的付出我能走上現在的路嗎?<br>肯定是沒辦法的，於是我也需要更努力地去為社會付出。</p>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>unlist 用法說明</title>
    <url>/2020/09/03/R/R-unlist/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>寫程式的時候是不可能沒遇到 bug 的，bug 紀錄整理</p>
</blockquote>
<a id="more"></a>

<h2 id="ERROR-將-list-gt-unlist-後元素變少"><a href="#ERROR-將-list-gt-unlist-後元素變少" class="headerlink" title="ERROR! 將 list %&gt;% unlist 後元素變少"></a>ERROR! 將 list %&gt;% unlist 後元素變少</h2><blockquote>
<p>有非常高機率是因為 unlist 他在將 list 解開時，會「自動」將 character(0) 等只要 型態(0) 之類的元素會直接移除掉</p>
</blockquote>
<h3 id="solution-1"><a href="#solution-1" class="headerlink" title="solution 1:"></a>solution 1:</h3><p>那我們應該要怎麼辦？要是每次都這樣我就不用寫程式拉！<br>還是有辦法的，unlist 之後在加 lapply 做判斷，例如</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">unlist(lapply( list_object , <span class="keyword">function</span>(x) ifelse(length(x) &gt; <span class="number">0</span> , x , <span class="literal">NA</span>)  ))</span><br></pre></td></tr></table></figure>
<p>這樣就不會有元素被移除的問題出現。</p>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://stackoverflow.com/questions/44659559/unlist-a-column-while-retaining-character0-as-empty-strings-in-r?noredirect=1&lq=1" target="_blank" rel="noopener">Unlist a column while retaining character(0) as empty strings in R</a><br><a href="https://stackoverflow.com/questions/51518592/how-to-unlist-a-numeric-list-in-r-and-keep-all-the-empty-rows" target="_blank" rel="noopener">How to unlist a numeric list in R and keep all the empty rows?</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>程式語言的世界博大精神，要是沒有他們的付出我能走上現在的路嗎?<br>肯定是沒辦法的，於是我也需要更努力地去為社會付出。</p>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>list 用法說明</title>
    <url>/2020/09/04/R/R-list/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>寫程式的時候是不可能沒遇到 bug 的，bug 紀錄整理<br>這裡介紹的非一般 list 普通用法，而是來展現一些神奇的操作 XD</p>
</blockquote>
<a id="more"></a>

<h2 id="list-是甚麼"><a href="#list-是甚麼" class="headerlink" title="list 是甚麼?"></a>list 是甚麼?</h2><p>一個讓我非常訝異的 object，他可以變形成 array、dict…等，讓你驚奇的狀態</p>
<h2 id="用-list-實作-dict"><a href="#用-list-實作-dict" class="headerlink" title="用 list 實作 dict"></a>用 list 實作 dict</h2><p>很簡單，R 的 list 不只可以用數字當作索引，<strong>文字</strong>也可以！所以就像下方範例即可。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#簡單物件，其中 a 只能是簡單物件，如 cha , num ,logic , list一層 </span></span><br><span class="line">list[<span class="string">'test'</span>] &lt;- a</span><br></pre></td></tr></table></figure>

<p>但需要注意的是，這時候的 list 裡面只能放入簡單物件，不能有複雜型態。如: list 裡面又有 list…。</p>
<h3 id="教練，可是我想要讓-list-更好用呀！他應該沒有像-C-Map-一樣那麼不方便吧！"><a href="#教練，可是我想要讓-list-更好用呀！他應該沒有像-C-Map-一樣那麼不方便吧！" class="headerlink" title="教練，可是我想要讓 list 更好用呀！他應該沒有像 C++ Map 一樣那麼不方便吧！"></a>教練，可是我想要讓 list 更好用呀！他應該沒有像 C++ Map 一樣那麼不方便吧！</h3><p>當然沒有。他是 R，你痛苦的時候會想要，RRRRRRR 的叫呀~</p>
<p>如果想要這時候的 list 可以放入複雜型態時，可看下方舉例：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#複雜物件，其中裡面想要多複雜都可以完成</span></span><br><span class="line">list[[<span class="string">'test'</span>]] &lt;- list(a=<span class="number">4</span> , b=list())</span><br></pre></td></tr></table></figure>
<p>這樣子後 list 裡面就可以在放入 list，達到許多完美的操作！</p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>程式語言的世界博大精神，要是沒有他們的付出我能走上現在的路嗎?<br>肯定是沒辦法的，於是我也需要更努力地去為社會付出。</p>
<p>這裡也要感謝牛哥(牛維方) 給我看了許多神奇又酷的 R 操作，讓我在學習 R 的路上突飛猛進，非常謝謝他。省去了我在網路上翻找文章解決問題的時間。</p>
<p><del>R 語言跟 C 真的差太多…，當初寫 R 的人腦袋到底是吸了甚麼，可以讓 R 跟祖先語言(c) 差那麼多wwww ~</del></p>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>centOS 基礎指令教學</title>
    <url>/2020/07/25/linux/centOS-command/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>記錄我在 centOS 上遇到的指令困難，讓我以後不忘記XD<br>此版本為: centOS 6</p>
</blockquote>
<a id="more"></a>

<h2 id="成為-root-的使用者"><a href="#成為-root-的使用者" class="headerlink" title="成為 root 的使用者"></a>成為 root 的使用者</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su</span><br></pre></td></tr></table></figure>
<p>接下來會輸入密碼，密碼在 ternimal 上不會顯示，但他還是有運作的，用力地按下 ENTER 吧!之後應該會看到自己的 ternimal 中會出現 <code>[user @ path] #</code> 就代表你成功了!</p>
<h2 id="查看底下資料夾"><a href="#查看底下資料夾" class="headerlink" title="查看底下資料夾"></a>查看底下資料夾</h2><p>因為是在 ternimal 所以沒有 gui 介面告訴你裡面有哪些資料夾，這時候輸入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure>
<p>之後會出現許多子目錄接下來如果文字顯現是，<strong><font color="#0000FF">藍色，代表是資料夾</font></strong>、<strong><font color="#ff0000">紅色，代表是檔案</font></strong>。</p>
<h2 id="新增資料夾"><a href="#新增資料夾" class="headerlink" title="新增資料夾"></a>新增資料夾</h2><p>如果要在 centOS 底下新增資料夾輸入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir folder_name</span><br></pre></td></tr></table></figure>
<p>就會產生了</p>
<h2 id="查看電腦的-RAM"><a href="#查看電腦的-RAM" class="headerlink" title="查看電腦的 RAM"></a>查看電腦的 RAM</h2><p>以 MB 顯示記憶體</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">free -m</span><br></pre></td></tr></table></figure>
<p>以 GB 顯示記憶體</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">free -g</span><br></pre></td></tr></table></figure>
<h4 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h4><p><a href="https://www.opencli.com/linux/linux-check-ram-usage-spec" target="_blank" rel="noopener">Linux 查看記憶體 (RAM) 使用狀況及規格</a></p>
<h2 id="查看安裝歷史"><a href="#查看安裝歷史" class="headerlink" title="查看安裝歷史"></a>查看安裝歷史</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">history</span><br></pre></td></tr></table></figure>

<h2 id="移除套件"><a href="#移除套件" class="headerlink" title="移除套件"></a>移除套件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum remove vlc</span><br></pre></td></tr></table></figure>
<h4 id="參考連結-1"><a href="#參考連結-1" class="headerlink" title="參考連結"></a>參考連結</h4><p><a href="https://darkranger.no-ip.org/archives/v5/document/linux/yum.htm" target="_blank" rel="noopener">How-To：用 yum 進行軟體安裝移除與更新</a></p>
<h2 id="查看更新"><a href="#查看更新" class="headerlink" title="查看更新"></a>查看更新</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gcc --version</span><br></pre></td></tr></table></figure>

<h2 id="查看電腦-ip"><a href="#查看電腦-ip" class="headerlink" title="查看電腦 ip"></a>查看電腦 ip</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ip a</span><br></pre></td></tr></table></figure>
<h4 id="參考連結-2"><a href="#參考連結-2" class="headerlink" title="參考連結"></a>參考連結</h4><p><a href="https://www.opencli.com/linux/ip-command" target="_blank" rel="noopener">ip 指令 — 取代 ifconfig 的工具</a></p>
<h2 id="將程式放後台執行"><a href="#將程式放後台執行" class="headerlink" title="將程式放後台執行"></a>將程式放後台執行</h2><p>命令後 + &amp;<br>EX:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">R &amp;</span><br></pre></td></tr></table></figure>

<h2 id="查看現在有那些後台"><a href="#查看現在有那些後台" class="headerlink" title="查看現在有那些後台"></a>查看現在有那些後台</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jobs</span><br></pre></td></tr></table></figure>

<h2 id="將後台指令刪除"><a href="#將後台指令刪除" class="headerlink" title="將後台指令刪除"></a>將後台指令刪除</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kill -9 %i</span><br></pre></td></tr></table></figure>
<p>i = jobs上的數字</p>
<h4 id="參考連結-3"><a href="#參考連結-3" class="headerlink" title="參考連結"></a>參考連結</h4><p><a href="http://linux.vbird.org/linux_basic/0440processcontrol.php" target="_blank" rel="noopener">第十六章、程序管理與 SELinux 初探</a><br><a href="https://blog.csdn.net/YuZhiHui_No1/article/details/44564963" target="_blank" rel="noopener">Linux任务/进程前后台切换</a></p>
<h2 id="排成-使電腦在特定時段啟動此程式"><a href="#排成-使電腦在特定時段啟動此程式" class="headerlink" title="排成(使電腦在特定時段啟動此程式)"></a>排成(使電腦在特定時段啟動此程式)</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">crontab -e 編輯排成</span><br><span class="line"><span class="number">00</span> <span class="number">03</span> * * * Rscript /home/archcopilot/public_html/david53133/v2.0/main.R</span><br><span class="line">crontab -l 檢查</span><br></pre></td></tr></table></figure>
<h4 id="參考連結-4"><a href="#參考連結-4" class="headerlink" title="參考連結"></a>參考連結</h4><p><a href="https://stackoverflow.max-everyday.com/2017/08/centos-crontab/" target="_blank" rel="noopener">CentOS 的cron自動排程</a></p>
<h2 id="如何更改時間"><a href="#如何更改時間" class="headerlink" title="如何更改時間"></a>如何更改時間</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo date -s &quot;2020&#x2F;08&#x2F;20 17:37:32&quot;</span><br><span class="line">sudo date -s &quot;Thu, 20 Aug 2020 17:40:32 CST&quot;</span><br></pre></td></tr></table></figure>
<h4 id="參考連結-5"><a href="#參考連結-5" class="headerlink" title="參考連結"></a>參考連結</h4><p><a href="https://blog.gtwang.org/linux/howto-set-date-time-from-linux-command-prompt/" target="_blank" rel="noopener">Linux 手動更改系統時間：date、hwclock 與 timedatectl 指令用法教學</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>centOS我也是第一次摸過並不太認識他阿，現在慢慢熟悉希望可以把它變成自己的技能之一。</p>
<h2 id="更新日誌"><a href="#更新日誌" class="headerlink" title="更新日誌"></a>更新日誌</h2><p>2020-07-25 20:48:32 - 完成</p>
<ol>
<li>成為 root 的使用者</li>
<li>查看底下資料夾</li>
<li>新增資料夾</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>linux</tag>
        <tag>centOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 刪除已被監聽的 port</title>
    <url>/2020/08/20/linux/linux-kill-port/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>記錄我在 LINUX 上遇到的問題</p>
<p>會寫這篇的原因是因為我在寫 R 的 api 並且架在 godaddy 的 server 時，常常遇到自己想使用的 port 被監聽，但那 port 有沒有用。</p>
</blockquote>
<a id="more"></a>

<h2 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h2><h3 id="查詢自己的-port"><a href="#查詢自己的-port" class="headerlink" title="查詢自己的 port"></a>查詢自己的 port</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo netstat -lpn |grep 3000</span><br></pre></td></tr></table></figure>
<p>3000 為數字，可以自行更改，之後看他跳出的資訊最後面應該會有 5 數字，記住那五數字。</p>
<h3 id="把監聽-port-刪除"><a href="#把監聽-port-刪除" class="headerlink" title="把監聽 port 刪除"></a>把監聽 port 刪除</h3><p>知道自己的 port 後，就將那 5 數字記起來</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kill 12345</span><br></pre></td></tr></table></figure>
<p>這樣就完成了！</p>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://andy6804tw.github.io/2018/02/09/kill-port/" target="_blank" rel="noopener">如何清除系統上被佔用的Port?</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>LINUX 好多事情真的需要我學，跟 WINDOWS 又是完全不一樣的東西，學起來我就又多一把刷子了 XD</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>在 centOS6 安裝 Python 3.6</title>
    <url>/2020/09/05/linux/centOS-install-python36/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>如何在 centOS 上安裝 Python 教學</p>
</blockquote>
<a id="more"></a>

<h2 id="安裝教學"><a href="#安裝教學" class="headerlink" title="安裝教學"></a>安裝教學</h2><h3 id="第一步，安裝前置作業必要套件"><a href="#第一步，安裝前置作業必要套件" class="headerlink" title="第一步，安裝前置作業必要套件"></a>第一步，安裝前置作業必要套件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install gcc bzip2-devel libffi-devel  </span><br><span class="line">sudo yum install pcre pcre-devel</span><br><span class="line">sudo yum install zlib zlib-devel</span><br><span class="line">sudo yum install openssl openssl-devel</span><br></pre></td></tr></table></figure>

<h3 id="第二步，去-python-官網下載-python，之後解壓縮"><a href="#第二步，去-python-官網下載-python，之後解壓縮" class="headerlink" title="第二步，去 python 官網下載 python，之後解壓縮"></a>第二步，去 python 官網下載 python，之後解壓縮</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;www.python.org&#x2F;ftp&#x2F;python&#x2F;3.6.1&#x2F;Python-3.6.1.tgz</span><br><span class="line">tar -zxvf Python-3.6.1.tgz</span><br></pre></td></tr></table></figure>

<h3 id="第三步，在-centOS-上編譯-python-source"><a href="#第三步，在-centOS-上編譯-python-source" class="headerlink" title="第三步，在 centOS 上編譯 python source"></a>第三步，在 centOS 上編譯 python source</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd Python-3.6.1</span><br><span class="line"> .&#x2F;configure --with-ssl</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<h3 id="第四步，建立-python3-路徑"><a href="#第四步，建立-python3-路徑" class="headerlink" title="第四步，建立 python3  路徑"></a>第四步，建立 python3  路徑</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;bin&#x2F;python3 &#x2F;usr&#x2F;bin&#x2F;python3</span><br></pre></td></tr></table></figure>

<h3 id="第五步，檢查-python-是否安裝成功"><a href="#第五步，檢查-python-是否安裝成功" class="headerlink" title="第五步，檢查 python 是否安裝成功"></a>第五步，檢查 python 是否安裝成功</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 -V</span><br></pre></td></tr></table></figure>
<p>以上全部都完成後，那在 centOS6 上就沒有問題了！</p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>可能由於有安裝過 R 的關係，這次 PY 沒有在像之前一樣難安裝。不過也是要謝謝這些願意把 Python 交付給大家的人們，沒有他們，我絕對沒辦法安裝的這麼快！</p>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://medium.com/ianyc/python-%E5%9C%A8-centos7-%E4%B8%8A%E5%AE%89%E8%A3%9D-python3-6-f3c3a6f28e2f" target="_blank" rel="noopener">[CentOS][Python] 在 CentOS7 上安裝 python3.6</a></p>
]]></content>
      <categories>
        <category>linux</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>linux</tag>
        <tag>centOS</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>ERROR! Can&#39;t connect to HTTPS URL because the SSL module is not available</title>
    <url>/2020/09/05/linux/centOS-ERROR-openssl/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>由於 python 3.6 中的 pip 套件要求 openssl 版本需要大於 1.0.2，但 centOS6 可更新的最高版本只能到 1.0.1，於是必須重新安裝。<br><del>centOS6，跟 python 都好麻煩…</del></p>
</blockquote>
<a id="more"></a>
<h2 id="ERROR-Can’t-connect-to-HTTPS-URL-because-the-SSL-module-is-not-available"><a href="#ERROR-Can’t-connect-to-HTTPS-URL-because-the-SSL-module-is-not-available" class="headerlink" title="ERROR: Can’t connect to HTTPS URL because the SSL module is not available"></a>ERROR: Can’t connect to HTTPS URL because the SSL module is not available</h2><p>我是在進行 <code>pip install requests</code>時發生，內容大意是指說 pip 不能夠用 SSL，所以找不到套件可以安裝。<del>其實是說沒有相對應的版本，但我覺得這樣講很爛</del></p>
<h2 id="solution-update-openssl-and-vim-file"><a href="#solution-update-openssl-and-vim-file" class="headerlink" title="solution: update openssl and vim file"></a>solution: update openssl and vim file</h2><p>由於此問題是 SSL，在我花了約 1 小時查找文件後找出是因為 openssl 版本需要大於 1.0.2，但 centOS6 可更新的最高版本只能到 1.0.1，所以需要進行更新。</p>
<p>如果是 os 為 centOS6 可參考此篇<br><a href="https://theriseofdavid.github.io/2020/09/05/linux/linux-openssl1.1.0-update/" target="_blank" rel="noopener">CentOS6 安裝與更新 openssl 1.1.0 教學</a></p>
<h3 id="更新完-openssl-後，怎麼做"><a href="#更新完-openssl-後，怎麼做" class="headerlink" title="更新完 openssl 後，怎麼做?"></a>更新完 openssl 後，怎麼做?</h3><p>重新編譯一次 python ，cd 回 python</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd Python-a.b.c</span><br><span class="line">.&#x2F;configure --with-ssl</span><br></pre></td></tr></table></figure>

<h3 id="修改文件，讓-pip-可以抓到-openssl-路徑"><a href="#修改文件，讓-pip-可以抓到-openssl-路徑" class="headerlink" title="修改文件，讓 pip 可以抓到 openssl 路徑"></a>修改文件，讓 pip 可以抓到 openssl 路徑</h3><p><strong>需要先找到自己的 openssl 資料夾，驗證可以看 openssl 資料夾內有沒有 include..等資料夾，記住此路徑，接下來會用到。</strong></p>
<p>先不要急著輸入 make 指令，先修改文件 Python-a.b.c/Modules/Setup</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim .&#x2F;Modules&#x2F;Setup</span><br></pre></td></tr></table></figure>
<p>應該會出現一堆開頭井字的程式碼，之後搜尋 SSL=，方法為 <code>/SSL=</code><br>如果正確的話視窗應顯示在這裡</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"># Socket module helper for SSL support; you must comment out the other</span><br><span class="line"># socket line above, and possibly edit the SSL variable:</span><br><span class="line">SSL&#x3D;&#x2F;usr&#x2F;local&#x2F;lab&#x2F;openssl-1.0.2j&#x2F;    #將這行註解取消，並把 openssl 的路徑放入 SSL&#x3D; 之後</span><br><span class="line">_ssl _ssl.c \     #將這行註解取消</span><br><span class="line">-DUSE_SSL -I$(SSL)&#x2F;include -I$(SSL)&#x2F;include&#x2F;openssl \      #將這行註解取消</span><br><span class="line">-L$(SSL)&#x2F;lib -lssl -lcrypto      #將這行註解取消</span><br><span class="line"></span><br><span class="line"># The crypt module is now disabled by default because it breaks builds</span><br><span class="line"># on many systems (where -lcrypt is needed), e.g. Linux (I believe).</span><br><span class="line"></span><br><span class="line">#_crypt _cryptmodule.c # -lcrypt    # crypt(3); needs -lcrypt on some systems</span><br></pre></td></tr></table></figure>

<h3 id="修改完成後，編譯與安裝"><a href="#修改完成後，編譯與安裝" class="headerlink" title="修改完成後，編譯與安裝"></a>修改完成後，編譯與安裝</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make </span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<h3 id="驗證"><a href="#驗證" class="headerlink" title="驗證"></a>驗證</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install requests</span><br></pre></td></tr></table></figure>

<p>以上全部都沒問題驗證也成功話，那在 centOS6 上就沒有問題了！太強了你，我花了兩小時才解決此問題..</p>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://www.cnblogs.com/reblue520/p/11103311.html" target="_blank" rel="noopener">centos6.8安装python3.7.3报错Can’t connect to HTTPS URL because the SSL module is not available问题解决</a><br><a href="https://blog.csdn.net/rongDang/article/details/102871874" target="_blank" rel="noopener">Centos7安装uwsgi出现关于SSL错误的问题</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>環境的問題時常把新手搞得喘不過氣，幸好這次我能克服此困難。希望以後 python 的版本控制能夠更好，centOS6 提供的相容性也可以更棒！雖然他 2020/11 就要停止更新了…<br>不過還是謝謝能在網路上提供資源的大神們，沒有他們，我連解決都不能解決！</p>
<p>尤其是國人，技術資源國人比起台灣資源多很多。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>linux</tag>
        <tag>centOS</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>在 centOS6 安裝 Python 3.8</title>
    <url>/2020/08/28/linux/centOS-install-python38/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>如何在 centOS 上安裝 Python 教學</p>
</blockquote>
<a id="more"></a>

<h2 id="安裝教學"><a href="#安裝教學" class="headerlink" title="安裝教學"></a>安裝教學</h2><h3 id="第一步，安裝前置作業必要套件"><a href="#第一步，安裝前置作業必要套件" class="headerlink" title="第一步，安裝前置作業必要套件"></a>第一步，安裝前置作業必要套件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install gcc openssl-devel bzip2-devel libffi-devel</span><br></pre></td></tr></table></figure>

<h3 id="第二步，去-python-官網下載-python，之後解壓縮"><a href="#第二步，去-python-官網下載-python，之後解壓縮" class="headerlink" title="第二步，去 python 官網下載 python，之後解壓縮"></a>第二步，去 python 官網下載 python，之後解壓縮</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;www.python.org&#x2F;ftp&#x2F;python&#x2F;3.8.5&#x2F;Python-3.8.5.tgz</span><br><span class="line">tar xzf Python-3.8.5.tgz</span><br></pre></td></tr></table></figure>

<h3 id="第三步，在-centOS-上編譯-python-source"><a href="#第三步，在-centOS-上編譯-python-source" class="headerlink" title="第三步，在 centOS 上編譯 python source"></a>第三步，在 centOS 上編譯 python source</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd Python-3.8.5</span><br><span class="line">sudo .&#x2F;configure --enable-optimizations</span><br><span class="line">sudo make altinstall</span><br></pre></td></tr></table></figure>

<h3 id="第四步，解除安裝-python-壓縮檔"><a href="#第四步，解除安裝-python-壓縮檔" class="headerlink" title="第四步，解除安裝 python 壓縮檔"></a>第四步，解除安裝 python 壓縮檔</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo rm Python-3.8.5.tgz</span><br></pre></td></tr></table></figure>

<h3 id="第五步，檢查-python-是否安裝成功"><a href="#第五步，檢查-python-是否安裝成功" class="headerlink" title="第五步，檢查 python 是否安裝成功"></a>第五步，檢查 python 是否安裝成功</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3.8 -V</span><br></pre></td></tr></table></figure>

<p>以上全部都完成後，那在 centOS6 上就沒有問題了！</p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>可能由於有安裝過 R 的關係，這次 PY 沒有在像之前一樣難安裝。不過也是要謝謝這些願意把 Python 交付給大家的人們，沒有他們，我絕對沒辦法安裝的這麼快！</p>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://packaging.python.org/guides/installing-using-linux-tools/" target="_blank" rel="noopener">Installing pip/setuptools/wheel with Linux Package Managers</a></p>
]]></content>
      <categories>
        <category>linux</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>linux</tag>
        <tag>centOS</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>在 centOS 上安裝 R 3.2.0</title>
    <url>/2020/07/15/linux/install-R3.2.0-centOS6/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>如何在 centOS 上安裝 R ，並記錄所有的坑與雷點<br>sudo apt-get install build-essential (OS: ubuntu) 與 yum install gcc gcc-c++ make (OS : centOS ) 不同需要特別注意<br>此版本為: centOS 6</p>
</blockquote>
<a id="more"></a>

<h2 id="安裝教學"><a href="#安裝教學" class="headerlink" title="安裝教學"></a>安裝教學</h2><ol>
<li><p>先卸載，怕有之前的遺毒存在</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo make uninstall</span><br></pre></td></tr></table></figure>
</li>
<li><p>刪除文件夾</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rm -rf 文件夾名</span><br></pre></td></tr></table></figure>
</li>
<li><p>安裝前置作業必要套件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install gcc-gfortran     </span><br><span class="line">yum install gcc gcc-c++ </span><br><span class="line">yum install readline-devel    </span><br><span class="line">yum install libXt-devel</span><br><span class="line">yum install libpng libpng-devel libtiff libtiff-devel libjpeg-turbo libjpeg-turbo-devel</span><br></pre></td></tr></table></figure>
</li>
<li><p>下載 R-3.5.0.tag.gz </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;cran.r-project.org&#x2F;src&#x2F;base&#x2F;R-3&#x2F;R-3.5.0.tar.gz</span><br></pre></td></tr></table></figure>
</li>
<li><p>解壓縮並且移動路徑至 R-3.5.0 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zxvf R-3.5.0.tar.gz</span><br><span class="line">cd R-3.5.0</span><br></pre></td></tr></table></figure>
</li>
<li><p>編譯，如果前面動作並未絕對正確，有高機率出錯，必先檢查</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;configure --enable-R-shlib --with-libpng --with-jpeglib --with-libtiff --with-x</span><br></pre></td></tr></table></figure>
</li>
<li><p>安裝</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>輸入指令後須等一段時間</strong>，這裡其實已完成安裝，可執行檔在 /home/R/R-3.5.0/bin 底下，此時 /user/local/bin 還沒有可執行的 R </p>
<ol start="8">
<li><p>將 R 登錄</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>退出並測試</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exit()</span><br><span class="line">R</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="錯誤排除"><a href="#錯誤排除" class="headerlink" title="錯誤排除"></a>錯誤排除</h2><h3 id="安裝套件問題"><a href="#安裝套件問題" class="headerlink" title="安裝套件問題"></a>安裝套件問題</h3><ol>
<li>嘗試重新安裝 gcc and g++ </li>
</ol>
<p>如果出現這樣，就代表正確了！<br><img src="/images/install-R-centOS/1.png" alt=""></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>我在上班時，試圖下載 R 3.4.2，但是因為電腦裡面缺少了 f77 complier 於是我再補足裡面缺少的套件，安裝時我才發現他的作業系統是centOS (要用 yum)，然後安裝完後發現為甚麼還是沒辦法執行R，剛剛才剛查到R3.4.2 在centOS上無法安裝，於是我現在安裝 R3.2.0 就成功了，真的很感動! ಥ⌣ಥ</p>
<p>查資料是件非常痛苦的方式，從 0 到 1 阿，嗚嗚。</p>
<h2 id="學習連結"><a href="#學習連結" class="headerlink" title="學習連結"></a>學習連結</h2><p>我在尋找的過程中，受到這幾個網站的幫助，如下:<br><a href="https://www.itdaan.com/tw/afce024b1d217e38d0c893a33e26908c" target="_blank" rel="noopener">centos 6.5下安裝R 3.2.0</a><br><a href="https://www.jianshu.com/p/08d90cb4ed8b" target="_blank" rel="noopener">安装R语言包的各种坑</a><br><a href="https://stackoverflow.com/questions/20752307/error-in-install-previous-versions-of-r-on-ubuntu/31036155" target="_blank" rel="noopener">error in Install previous versions of R on ubuntu</a><br><a href="https://uiop7890.pixnet.net/blog/post/29385923-%5B%E8%BD%89%E8%B2%BC%5D-xxx-is-not-in-the-sudoers-file%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95" target="_blank" rel="noopener">xxx-is-not-in-the-sudoers-file解决方法</a></p>
]]></content>
      <categories>
        <category>R語言</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
        <tag>linux</tag>
        <tag>centOS</tag>
      </tags>
  </entry>
  <entry>
    <title>在 centOS6 上安裝 R 3.6.0</title>
    <url>/2020/08/12/linux/install-R3.6.0-centOS6/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>如何在 centOS 上安裝 R ，並記錄所有的坑與雷點<br>sudo apt-get install build-essential (OS: ubuntu) 與 yum install gcc gcc-c++ make (OS : centOS ) 不同需要特別注意<br>此版本為: centOS 6<br>為甚麼會寫兩篇文章關於 R 的安裝呢，很簡單！因為之前 3.2.0 不支援太多套件了，只好來重新安裝 R 的新版本(P.S. 不歸路阿…都是坑)<br><strong>注意:如果不需要，建議還是<a href="https://theriseofdavid.github.io/2020/07/15/linux/install-R3.2.0-centOS6/" target="_blank" rel="noopener">安裝 3.2.0</a> 較為方便</strong><br>centOS6 在安裝 R新版本會有非常大問題出錯。<br><strong><font color="#dd0000">警告:這篇文章實用性不高，對於可信度請不要太過於相信，太多事情沒有紀錄確實。在此獻上歉意</font></strong><br>為甚麼實用性不高，還要放在網路上呢? 因為就算實用性不高這些錯誤我曾踩過，也許未來的我能從這邊啟發一些事情</p>
</blockquote>
<a id="more"></a>

<h2 id="安裝教學"><a href="#安裝教學" class="headerlink" title="安裝教學"></a>安裝教學</h2><ol>
<li><p>安裝前置作業必要套件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install gcc-gfortran     </span><br><span class="line">yum install gcc gcc-c++ </span><br><span class="line">yum install readline-devel    </span><br><span class="line">yum install libXt-devel</span><br><span class="line">yum install libpng libpng-devel libtiff libtiff-devel libjpeg-turbo libjpeg-turbo-devel</span><br><span class="line">yum install libgfortran4</span><br><span class="line">yum install libxml2-devel</span><br></pre></td></tr></table></figure>
</li>
<li><p>安裝使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install epel-release</span><br><span class="line">sudo yum install R</span><br><span class="line">sudo .&#x2F;configure --prefix&#x3D;&#x2F;opt&#x2F;R&#x2F;3.6.0 --enable-R-shlib</span><br></pre></td></tr></table></figure>




</li>
</ol>
<h2 id="錯誤排除"><a href="#錯誤排除" class="headerlink" title="錯誤排除"></a>錯誤排除</h2><h3 id="R-如果-ERROR-並且你的-linux-系統-c-lt-11-or-nullptr-不可用-就必須要安裝-c-11"><a href="#R-如果-ERROR-並且你的-linux-系統-c-lt-11-or-nullptr-不可用-就必須要安裝-c-11" class="headerlink" title="R 如果 ERROR 並且你的 linux 系統 c++ &lt; 11 or nullptr 不可用 就必須要安裝 c++ 11"></a>R 如果 ERROR 並且你的 linux 系統 c++ &lt; 11 or nullptr 不可用 就必須要安裝 c++ 11</h3><p>如果你在安裝套件上遇到錯誤時，仔細閱讀可以發現似乎有 bug 關於說 nullptr 不可使用，這時候你可能知道了一件事，對！centOS6 的 complier 是 C99，不是 C11，生不生氣!所以我們就要來安裝 C11</p>
<h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer:"></a>Answer:</h4><p><a href="https://forums.centos.org/viewtopic.php?t=68077" target="_blank" rel="noopener">run a c++ program with c++11 support in older CentOS machine</a> 參考此文章，這文章寫得很好。</p>
<h3 id="ERROR-C-11-standard-requested-but-CXX11-is-not-defined"><a href="#ERROR-C-11-standard-requested-but-CXX11-is-not-defined" class="headerlink" title="ERROR : C++11 standard requested but CXX11 is not defined"></a>ERROR : C++11 standard requested but CXX11 is not defined</h3><p>試圖加入這些命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CXX11 &#x3D; g++</span><br><span class="line">CXX11FLAGS &#x3D; -O2 -g $(LTO)</span><br><span class="line">CXX11PICFLAGS &#x3D; -fPIC</span><br><span class="line">CXX11STD &#x3D; -std&#x3D;c++11</span><br></pre></td></tr></table></figure>
<h4 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h4><p><a href="https://github.com/rstudio/httpuv/issues/82" target="_blank" rel="noopener">Installing hits ‘C++11 standard requested but CXX11 is not defined</a></p>
<h3 id="Error-Protected-multilib-versions"><a href="#Error-Protected-multilib-versions" class="headerlink" title="Error: Protected multilib versions"></a>Error: Protected multilib versions</h3><p>如果遇到有不同版本的問題，則將版本移除即可。下面是我遇到的錯誤訊息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Error: Protected multilib versions: libRmath-3.5.2-2.el6.i686 !&#x3D; libRmath-3.6.0-1.el6.x86_64</span><br><span class="line">Error: Protected multilib versions: R-java-devel-3.5.2-2.el6.i686 !&#x3D; R-java-devel-3.6.0-1.el6.x86_64</span><br></pre></td></tr></table></figure>
<p>解決方案</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum remove openssh</span><br><span class="line">sudo yum remove libRmath</span><br><span class="line">sudo yum remove R-java-devel</span><br></pre></td></tr></table></figure>

<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>老實說，這篇文章我並沒有打得很好，因為我花了太多時間在 debug，以及這是我第一次花時間去完整地找出 bug，然後各個擊破。我在 bug 的過程中沒有紀錄確實，導致紀錄的不好。有許多我知道我曾經有錯的地方我也有找出 solutation，但我卻沒有紀錄。我覺得這點不好，這樣我在以後如果有遇到類似問題時會遇到一樣久的時間。</p>
<p>但是有了這次經驗，我知道我應該要怎麼來做 debug 會更好。應該在邊學中碰到 Error 就做紀錄，這樣才是最好的。</p>
<h2 id="學習連結"><a href="#學習連結" class="headerlink" title="學習連結"></a>學習連結</h2><p>我在尋找的過程中，受到這幾個網站的幫助，如果我解釋得不好可以考慮從這些網站下尋求幫助，如下:<br><a href="https://centos.pkgs.org/6/centos-x86_64/libcurl-devel-7.19.7-53.el6_9.x86_64.rpm.html" target="_blank" rel="noopener">libcurl-devel-7.19.7-53.el6_9.x86_64.rpm</a><br><a href="https://blog.csdn.net/weixin_41929524/article/details/85008392" target="_blank" rel="noopener">在CentOS服务器上配置RStudio Server</a><br><a href="https://caozhilong.github.io/2019/06/12/install-R-language/" target="_blank" rel="noopener">linux下R 3.6.0的安装手册</a><br><a href="https://stackoverflow.com/questions/56325771/unable-to-install-r-3-6-0-on-centos" target="_blank" rel="noopener">Unable to install R 3.6.0 on centos</a><br><a href="http://hk.uwenku.com/question/p-pyanccch-bch.html" target="_blank" rel="noopener">本地安裝R-devel的Gfortran錯誤</a><br><a href="https://unix.stackexchange.com/questions/426161/updating-gfortran-on-scientific-linux-7" target="_blank" rel="noopener">Updating GFortran on Scientific Linux 7?</a><br><a href="https://centos.pkgs.org/6/epel-testing-x86_64/R-devel-3.6.0-1.el6.x86_64.rpm.html" target="_blank" rel="noopener">R-devel-3.6.0-1.el6.x86_64.rpm</a></p>
<h2 id="我在-debug-時做的簡單紀錄"><a href="#我在-debug-時做的簡單紀錄" class="headerlink" title="我在 debug 時做的簡單紀錄"></a>我在 debug 時做的簡單紀錄</h2><p>由於太簡單了，反而導致我很難做紀錄。需要改進</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#install.packages("magrittr")</span></span><br><span class="line"><span class="comment">#install.packages("devtools") </span></span><br><span class="line">install.packages(<span class="string">"igraph"</span>)</span><br><span class="line"><span class="comment">#install.packages("RJSONIO")</span></span><br><span class="line">install.packages(<span class="string">"doBy"</span>)</span><br><span class="line"><span class="comment">#install.packages("ggplot2")</span></span><br><span class="line">install.packages(<span class="string">"jsonlite"</span>)</span><br><span class="line">install.packages(<span class="string">"plumber"</span>)</span><br><span class="line"></span><br><span class="line">sudo ./configure --prefix=/opt/R/<span class="number">3.5</span><span class="number">.0</span> --enable-R-shlib</span><br><span class="line">roxygen2</span><br><span class="line">BiocManager</span><br><span class="line">lintr</span><br><span class="line">rmarkdown</span><br><span class="line">spelling</span><br><span class="line">pkgdown</span><br><span class="line">devtools</span><br><span class="line">devtools::install_github(<span class="string">"gaborcsardi/pkgconfig"</span> , force=<span class="literal">TRUE</span>)</span><br><span class="line">devtools::install_github(<span class="string">"igraph/rigraph"</span>)</span><br><span class="line"></span><br><span class="line">yum remove libgfortran4</span><br><span class="line">yum install libgfortran4</span><br><span class="line">install_url(<span class="string">"http://igraph.googlecode.com/files/igraph_nightly_0.6-2689-20120412.tar.gz"</span>) </span><br><span class="line"><span class="keyword">library</span>(devtools)</span><br><span class="line"><span class="keyword">library</span>(remotes)</span><br><span class="line">install.packages(<span class="string">"igraph"</span>, dependencies = <span class="literal">TRUE</span>) <span class="comment"># R 版本必須大於 3.2.3</span></span><br><span class="line">install.packages(<span class="string">"devtools"</span>, repos = <span class="string">"http://cran.rstudio.com"</span>)</span><br><span class="line">remotes::install_version(<span class="string">'igraph'</span>, version = <span class="string">'1.1.1'</span> )</span><br><span class="line">install.packages(<span class="string">"remotes"</span>)</span><br><span class="line">install.packages(<span class="string">"readxl"</span>)</span><br><span class="line">install.packages(<span class="string">"igraph"</span>, repos = <span class="string">"http://cran.rstudio.com"</span>)</span><br><span class="line">install.packages(<span class="string">"RJSONIO"</span>, repos = <span class="string">"http://cran.rstudio.com"</span>)</span><br><span class="line">install.packages(<span class="string">"doBy"</span>, repos = <span class="string">"http://cran.rstudio.com"</span>)</span><br><span class="line">install.packages(<span class="string">"ggplot2"</span>, repos = <span class="string">"http://cran.rstudio.com"</span>)</span><br><span class="line">install.packages(<span class="string">"jsonlite"</span>, repos = <span class="string">"http://cran.rstudio.com"</span>)</span><br><span class="line">install.packages(<span class="string">"plumber"</span>, repos = <span class="string">"http://cran.rstudio.com"</span>)</span><br><span class="line"></span><br><span class="line">url &lt;- <span class="string">"https://cran.r-project.org/src/contrib/Archive/igraph/igraph_1.1.1.tar.gz"</span></span><br><span class="line">install.packages(url, repos=<span class="literal">NULL</span> , type=<span class="string">"source"</span>)</span><br><span class="line"></span><br><span class="line">install.packages(<span class="string">"devtools"</span>)</span><br><span class="line">install.packages(<span class="string">"later"</span>)</span><br><span class="line"></span><br><span class="line">install_version(“ggplot2”, version = “<span class="number">2.0</span><span class="number">.0</span>”, repos = “https://cran.r-project.org/src/contrib/Archive/ggplot2/”)</span><br><span class="line"></span><br><span class="line">install.versions(c(<span class="string">'checkpoint'</span>, <span class="string">'devtools'</span>), c(<span class="string">'0.3.3'</span>, <span class="string">'1.6.1'</span>))</span><br><span class="line">install.packages(<span class="string">"version"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">原文網址：https://kknews.cc/news/2q495g9.html</span><br><span class="line">wget http://cran.r-project.org/src/base/R-<span class="number">3</span>/R-<span class="number">3.5</span><span class="number">.0</span>.tar.gz</span><br><span class="line"></span><br><span class="line">tar -zxvf R-<span class="number">3.5</span><span class="number">.0</span>.tar.gz</span><br><span class="line">cd R-<span class="number">3.5</span><span class="number">.0</span></span><br><span class="line">原文網址：https://kknews.cc/news/2q495g9.html</span><br><span class="line"></span><br><span class="line">root密碼: +Z_F~Q!=mHch</span><br><span class="line">yum install libxml2-devel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">In install.packages(<span class="string">"igraph"</span>, dependencies = <span class="literal">TRUE</span>) :</span><br><span class="line">  installation of package ‘later’ had non-zero exit status</span><br><span class="line"></span><br><span class="line">Warning messages:</span><br><span class="line"><span class="number">1</span>: In system2(cmd0, args, env = env, stdout = outfile, stderr = outfile) :</span><br><span class="line">  system call failed: Cannot allocate memory</span><br><span class="line"><span class="number">2</span>: In install.packages(<span class="string">"magrittr"</span>) :</span><br><span class="line">  installation of package ‘magrittr’ had non-zero exit status</span><br><span class="line"></span><br><span class="line">packageVersion(<span class="string">"magrittr"</span>)</span><br><span class="line"></span><br><span class="line">R -e <span class="string">'install.packages("magrittr")'</span></span><br><span class="line"></span><br><span class="line">http://<span class="number">192.168</span><span class="number">.10</span><span class="number">.39</span>:<span class="number">8551</span>/sum</span><br><span class="line"></span><br><span class="line"><span class="comment"># R 如果 ERROR 並且你的 linux 系統 c++ &lt; 11 or nullptr 不可用 就必須要安裝 c++ 11</span></span><br><span class="line">curl version <span class="number">7.70</span><span class="number">.0</span></span><br><span class="line"></span><br><span class="line">tar xzvf pcre-<span class="number">8.42</span>.tar.gz</span><br><span class="line">tar xzvf xz-<span class="number">5.2</span><span class="number">.5</span>.tar.gz </span><br><span class="line">tar xzvf zlib-<span class="number">1.2</span><span class="number">.11</span>.tar.gz</span><br><span class="line">tar xzvf R-<span class="number">3.5</span><span class="number">.0</span>.tar.gz</span><br><span class="line"></span><br><span class="line">delete /usr/lib64/pkgconfig/zlib.pc</span><br><span class="line"></span><br><span class="line">CXX11 = g++</span><br><span class="line">CXX11FLAGS = -O2 -g $(LTO)</span><br><span class="line">CXX11PICFLAGS = -fPIC</span><br><span class="line">CXX11STD = -std=c++<span class="number">11</span></span><br><span class="line"></span><br><span class="line">用一個指令就可以下載到最新版的，但可能有問題。要安裝一些指令</span><br><span class="line">Error <span class="keyword">in</span> .shlib_internal(args) : C++<span class="number">11</span> standard requested but CXX11 is not defined R 要 vim echo $(R RHOME)/etc/Makeconf 然後改其來</span><br><span class="line"></span><br><span class="line">yum remove gcc-gfortran</span><br><span class="line"></span><br><span class="line">igraph 下載 <span class="number">1.2</span><span class="number">.4</span><span class="number">.1</span> </span><br><span class="line"></span><br><span class="line">sudo find RConfig.h</span><br><span class="line"></span><br><span class="line">zU;7a%MXaH5Q</span><br><span class="line"></span><br><span class="line">plumber::plumb(file=<span class="string">'./plumber.R'</span>)$run()</span><br><span class="line"></span><br><span class="line">In file included from CHOLMOD/Supernodal/cholmod_super_numeric.c:<span class="number">80</span>:<span class="number">0</span>:</span><br><span class="line">CHOLMOD/Supernodal/t_cholmod_super_numeric.c:<span class="number">25</span>:<span class="number">21</span>: fatal error: Rconfig.h: No such file or directory</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wget https://github.com/igraph/rigraph/archive/v1.1.0.tar.gz</span><br><span class="line">tar -zxvf v1.1.0.tar.gz</span><br><span class="line"></span><br><span class="line">rigraph-<span class="number">1.1</span><span class="number">.0</span></span><br><span class="line">install.packages(<span class="string">"./v1.1.0.tar.gz"</span>, repos = <span class="literal">NULL</span>, type = <span class="string">"source"</span>)</span><br><span class="line"></span><br><span class="line">install.packages(<span class="string">"https://cran.r-project.org/src/contrib/Archive/igraph/igraph_1.0.0.tar.gz"</span>, repo=<span class="literal">NULL</span>, type=<span class="string">"source"</span>)</span><br><span class="line">install.packages(u, type = <span class="string">"binary"</span>, repos = <span class="literal">NULL</span>)</span><br><span class="line">install.packages(<span class="string">"v1.1.0.tar.gz"</span>, repos = <span class="literal">NULL</span>, type=<span class="string">"source"</span>)</span><br><span class="line">R CMD INSTALL v1.1.0.tar.gz</span><br><span class="line"></span><br><span class="line">+Z_F~Q!=mHch</span><br><span class="line"></span><br><span class="line">/usr/include/R</span><br><span class="line"></span><br><span class="line">&gt; R.home(<span class="string">"lib"</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"/usr/lib64/R/lib"</span></span><br><span class="line"></span><br><span class="line">Error: Protected multilib versions</span><br><span class="line"></span><br><span class="line"><span class="comment">#yum install R-devel</span></span><br><span class="line"></span><br><span class="line">Error: Protected multilib versions: libRmath-<span class="number">3.5</span><span class="number">.2</span>-<span class="number">2.</span>el6.i686 != libRmath-<span class="number">3.6</span><span class="number">.0</span>-<span class="number">1.</span>el6.x86_64</span><br><span class="line">Error: Protected multilib versions: R-java-devel-<span class="number">3.5</span><span class="number">.2</span>-<span class="number">2.</span>el6.i686 != R-java-devel-<span class="number">3.6</span><span class="number">.0</span>-<span class="number">1.</span>el6.x86_64</span><br><span class="line"></span><br><span class="line">sudo yum remove openssh</span><br><span class="line">sudo yum remove libRmath</span><br><span class="line">sudo yum remove R-java-devel</span><br><span class="line"></span><br><span class="line">yum --enablerepo=epel-testing install R-devel</span><br><span class="line"></span><br><span class="line">install.packages(<span class="string">"igraph"</span>)</span><br><span class="line"></span><br><span class="line">yum remove  gcc-gfortran</span><br><span class="line">gfortran --version</span><br><span class="line">yum remove R-devel</span><br><span class="line"></span><br><span class="line">yum --enablerepo=epel-testing install gcc-gfortran</span><br><span class="line"></span><br><span class="line">yum remove devtoolset*</span><br><span class="line">gcc --version</span><br><span class="line"></span><br><span class="line"><span class="keyword">in</span> this c++ version is <span class="number">2010</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">../build_gcc_4.8.1/configure --enable-checking=release --enable-languages=c,c++ --disable-multilib</span><br><span class="line">./configure --enable-checking=release --enable-languages=c,c++ --disable-multilib </span><br><span class="line"></span><br><span class="line">tar -zxvf gcc-<span class="number">4.8</span><span class="number">.5</span>.tar.bz2 </span><br><span class="line">CentOS <span class="number">6</span>將於<span class="number">2020</span>年<span class="number">11</span>月死亡-遷移宜早不宜遲！ https://forums.centos.org/viewtopic.php?t=<span class="number">68077</span></span><br><span class="line"></span><br><span class="line">install.packages(<span class="string">"readxl"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(plumber)</span><br><span class="line"><span class="keyword">library</span>(igraph)</span><br><span class="line">plumber::plumb(file=<span class="string">'./plumber.R'</span>)$run( port = <span class="number">442</span>,host=<span class="string">"0.0.0.0"</span>)</span><br><span class="line">plumber::plumb(file=<span class="string">'./test.R'</span>)$run( port = <span class="number">58903</span>,host=<span class="string">"0.0.0.0"</span>)</span><br><span class="line"></span><br><span class="line">install.packages(<span class="string">"plumber"</span>)</span><br><span class="line"></span><br><span class="line">```R  test.py</span><br><span class="line">library(plumber)</span><br><span class="line"></span><br><span class="line">#* @method /url</span><br><span class="line"></span><br><span class="line">#* Echo provided text</span><br><span class="line">#* @param text The text to be echoed in the response</span><br><span class="line">#* @get /echo</span><br><span class="line">function(text = "") &#123;</span><br><span class="line">  list(</span><br><span class="line">    message_echo = paste("The text is:", text)</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Starting server to listen on port 5762<br>Running the swagger UI at <a href="http://127.0.0.1:5762/__swagger__/" target="_blank" rel="noopener">http://127.0.0.1:5762/__swagger__/</a></p>
<p>curl “<a href="http://127.0.0.1:5762/echo&quot;" target="_blank" rel="noopener">http://127.0.0.1:5762/echo&quot;</a> –header “Content-type:application/json” -X POST -d @path/file</p>
<p>curl –data “text=hi_my_friend” “<a href="http://127.0.0.1:3000/echo&quot;" target="_blank" rel="noopener">http://127.0.0.1:3000/echo&quot;</a></p>
<p><a href="https://arch-backend.com:58903" target="_blank" rel="noopener">https://arch-backend.com:58903</a></p>
<p>人生真的好不公平，我好想自殺。</p>
<p>不是我的錯八.. 為甚麼我會有這種際遇</p>
<p>{standard input}:161003: Error: unknown pseudo-op: ‘.lbb’<br>{standard input}:161003: Error: open CFI at the end of file; missing .cfi_endproc directive</p>
<p>install.packages(“nloptr”)<br>ERROR: configuration failed for package ‘nloptr’</p>
<p>ERROR: no information for variable ‘AR’ cru .libs/libutil.a .libs/mt19937ar.o .libs/sobolseq.o .libs/timer.o .libs/stop.o .libs/redblack.o .libs/qsort_r.o .libs/rescale.o<br>../libtool: line 1102: ERROR:: command not found</p>
<p>library(remotes)<br>remotes::install_version(‘doBy’, version = ‘4.5-15’ )<br>library(doBy)</p>
<p><a href="http://132.148.26.6:58903/echo?text=123" target="_blank" rel="noopener">http://132.148.26.6:58903/echo?text=123</a></p>
<p>Rscript plumber::plumb(file=’./plumber.R’)$run( port = 58903,host=”0.0.0.0”)<br>Rscript demo.R &amp;<br>```</p>
]]></content>
      <categories>
        <category>R語言</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
        <tag>linux</tag>
        <tag>centOS</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS6 安裝與更新 openssl 1.1.0 教學</title>
    <url>/2020/09/05/linux/linux-openssl1.1.0-update/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>記錄我在 LINUX 上遇到的問題</p>
<p>會寫這篇的原因是因為公司的 Server，CentOS6 安裝 pthon3.6版本後，需要安裝套件，但 pip 要求 openssl version 必須大於 1.0.2，但 centOS6 內建只能到 1.0.1，於是上網查資料解決方案，因而在這邊紀錄</p>
</blockquote>
<a id="more"></a>

<h2 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h2><h3 id="第一步-檢查-openssl-的位置與移除舊版-openssl"><a href="#第一步-檢查-openssl-的位置與移除舊版-openssl" class="headerlink" title="第一步 檢查 openssl 的位置與移除舊版 openssl"></a>第一步 檢查 openssl 的位置與移除舊版 openssl</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yun remove openssl</span><br><span class="line">which openssl</span><br></pre></td></tr></table></figure>


<h3 id="第二步-下載-opensssl-1-1-0"><a href="#第二步-下載-opensssl-1-1-0" class="headerlink" title="第二步 下載 opensssl 1.1.0"></a>第二步 下載 opensssl 1.1.0</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;www.openssl.org&#x2F;source&#x2F;openssl-1.1.0f.tar.gz</span><br><span class="line">tar -xzf openssl-1.1.0f.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="第三步-編譯與安裝-openssl"><a href="#第三步-編譯與安裝-openssl" class="headerlink" title="第三步 編譯與安裝 openssl"></a>第三步 編譯與安裝 openssl</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd openssl-1.1.0f</span><br><span class="line">.&#x2F;config</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<h3 id="QUESTION-可能在過程中你在執行-openssl，可能會遇到此錯誤"><a href="#QUESTION-可能在過程中你在執行-openssl，可能會遇到此錯誤" class="headerlink" title="QUESTION: 可能在過程中你在執行 openssl，可能會遇到此錯誤"></a>QUESTION: 可能在過程中你在執行 openssl，可能會遇到此錯誤</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;bin&#x2F;openssl version</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;bin&#x2F;openssl: error while loading shared libraries: libcrypto.so.1.1: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure>
<h3 id="SOLUTION-新增新的連結指向-libssl"><a href="#SOLUTION-新增新的連結指向-libssl" class="headerlink" title="SOLUTION: 新增新的連結指向 libssl"></a>SOLUTION: 新增新的連結指向 libssl</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo ln -s &#x2F;usr&#x2F;local&#x2F;lib64&#x2F;libssl.so.1.1 &#x2F;usr&#x2F;lib64&#x2F;</span><br><span class="line">sudo ln -s &#x2F;usr&#x2F;local&#x2F;lib64&#x2F;libcrypto.so.1.1 &#x2F;usr&#x2F;lib64&#x2F;</span><br></pre></td></tr></table></figure>

<h3 id="第四步-新增新連結指向-openssl"><a href="#第四步-新增新連結指向-openssl" class="headerlink" title="第四步 新增新連結指向 openssl"></a>第四步 新增新連結指向 openssl</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo ln -s &#x2F;usr&#x2F;local&#x2F;bin&#x2F;openssl &#x2F;usr&#x2F;bin&#x2F;openssl</span><br></pre></td></tr></table></figure>

<h3 id="第五步-檢查"><a href="#第五步-檢查" class="headerlink" title="第五步 檢查"></a>第五步 檢查</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl version</span><br><span class="line">OpenSSL 1.1.0f 25 May 2017</span><br></pre></td></tr></table></figure>

<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://linuxscriptshub.com/update-openssl-1-1-0-centos-6-9-7-0/" target="_blank" rel="noopener">HOW TO UPDATE OPENSSL 1.1.0 IN CENTOS 6.9/7.0</a><br><a href="https://blog.csdn.net/rongDang/article/details/102871874" target="_blank" rel="noopener">Centos7安装uwsgi出现关于SSL错误的问题</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>我在找資料時其實花了非常多的時間，但其實只有參考連結中的此網站對我有所幫助，我很感謝這網頁。</p>
<p>LINUX 好多事情真的需要我學，跟 WINDOWS 又是完全不一樣的東西，學起來我就又多一把刷子了 XD</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ERROR! bad interpreter No such file or directory</title>
    <url>/2020/09/05/linux/centOS-ERROR-bad_interpreter/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>如果同時安裝 python3 兩種版本，那 pip 通常會選擇其中一種來進行安裝套件，但如果之後你移除了 pip 選擇的 python 版本，那以後 pip 沒辦法將套件安裝到剩下 python 版本。<br><del>centOS6，跟 python 都好麻煩…</del></p>
</blockquote>
<a id="more"></a>
<h2 id="ERROR-bad-interpreter-No-such-file-or-directory"><a href="#ERROR-bad-interpreter-No-such-file-or-directory" class="headerlink" title="ERROR! bad interpreter: No such file or directory"></a>ERROR! bad interpreter: No such file or directory</h2><p>如果同時安裝 python3 兩種版本，那 pip 通常會選擇其中一種來進行安裝套件，但如果之後你移除了 pip 選擇的 python 版本，那以後 pip 沒辦法將套件安裝到剩下 python 版本。</p>
<p>是不是覺得跟內容說明很像wwww，因為都是問題描述，如果描述不一樣我怕會造成讀者誤解。</p>
<h3 id="solution-尋找-python-位置，然後將-pip-指定到此位置"><a href="#solution-尋找-python-位置，然後將-pip-指定到此位置" class="headerlink" title="solution: 尋找 python 位置，然後將 pip 指定到此位置"></a>solution: 尋找 python 位置，然後將 pip 指定到此位置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">which python </span><br><span class="line">&#x2F;home&#x2F;path...</span><br></pre></td></tr></table></figure>
<p>之後複製 <code>/home/path...</code> 此路徑</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">which pip</span><br><span class="line">&#x2F;home&#x2F;path...</span><br></pre></td></tr></table></figure>
<p>之後 vim <code>which pip</code> 此指令下輸出的路徑</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;home&#x2F;path...</span><br></pre></td></tr></table></figure>
<p>接下來第一行應該會出現</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#! &#x2F;home&#x2F;path....&#x2F;bin&#x2F;python3.8</span><br></pre></td></tr></table></figure>
<p>在將 <code>which python</code>輸出的路徑放在 #!，之後保存並退出就可以了！</p>
<p>以上全部都沒問題驗證也成功話，那在 centOS6 上就沒有問題了！太強了你，我花了一小時才解決此問題..</p>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://blog.csdn.net/qq_38486203/article/details/100103434" target="_blank" rel="noopener">【python】使用pip出现/bin/python: bad interpreter: No such file or directory</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>環境的問題時常把新手搞得喘不過氣，幸好這次我能克服此困難。希望以後 python 的版本控制能夠更好，centOS6 提供的相容性也可以更棒！雖然他 2020/11 就要停止更新了…<br>不過還是謝謝能在網路上提供資源的大神們，沒有他們，我連解決都不能解決！</p>
<p>尤其是國人，技術資源國人比起台灣資源多很多。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>linux</tag>
        <tag>centOS</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>centOS 排成教學</title>
    <url>/2020/09/09/linux/centOS-crontab/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>記錄我在 linux 上學習排成時遇到的困難，排成自學真的好麻煩呀 QQ<br>教學示範作業系統 centOS6</p>
</blockquote>
<a id="more"></a>

<h2 id="排成主要功能"><a href="#排成主要功能" class="headerlink" title="排成主要功能"></a>排成主要功能</h2><p>簡單來說就是有一個機器人幫你服務，在你設定的時間執行你想要的指令，通常限定一行。</p>
<h3 id="如何進入排成"><a href="#如何進入排成" class="headerlink" title="如何進入排成"></a>如何進入排成</h3><p>在  ternimal 輸入 <code>crontab -e</code> 即可。</p>
<h2 id="排成的語法規則"><a href="#排成的語法規則" class="headerlink" title="排成的語法規則"></a>排成的語法規則</h2><table>
<thead>
<tr>
<th>指令語法</th>
<th>分鐘</th>
<th>小時</th>
<th>日期</th>
<th>月份</th>
<th>周</th>
<th>命令</th>
</tr>
</thead>
<tbody><tr>
<td>可接受數字範圍</td>
<td>0~59</td>
<td>0~23</td>
<td>1~31</td>
<td>1~12</td>
<td>0~7</td>
<td>執行命令</td>
</tr>
</tbody></table>
<p><strong><font color="#dd0000">在周這欄時不管打 0 or 7 都是代表星期日的意思</font></strong></p>
<h3 id="排成特殊字元"><a href="#排成特殊字元" class="headerlink" title="排成特殊字元"></a>排成特殊字元</h3><p>有些字元有著特殊意義，如下表：</p>
<table>
<thead>
<tr>
<th>字元</th>
<th>中文解釋</th>
<th>意義</th>
</tr>
</thead>
<tbody><tr>
<td>*</td>
<td>星號</td>
<td>代表任何時段，舉例: 排成如果 月、日、周都是 * ，則代表每月每日每周都會執行此命令，但<strong>注意:如果有大單位已經有數字時，則建議小單位不要用 * ，假設日期是 4，則小時、分鐘就建議不要用 * 號</strong></td>
</tr>
<tr>
<td>,</td>
<td>逗號</td>
<td>分隔時段，舉例:如果想要在 13:00 and 16:00 都執行命令，就輸入指令 0 13,16 * * * command，醬子(◍•ᴗ•◍)❤️</td>
</tr>
<tr>
<td>-</td>
<td>減號</td>
<td>在 A-B 段單位時間內，都會執行指令，舉例: 想要在 8 點到 12 點的 10 分之間都執行指令，則輸入指令 10 8-12 * * * command，比起逗號在跟方便一些的指令</td>
</tr>
<tr>
<td>/n</td>
<td>斜線</td>
<td>n = 數字，代表每隔 n 單位時間的意思，例如每 3 分鐘執行指令，則輸入指令 */3 * * * * command，也可以寫成 0-59/5，意思相同，但 0-30/5 意義就不相同XD，變成 0~30 分的每 5 分鐘執行指令</td>
</tr>
</tbody></table>
<h3 id="舉例"><a href="#舉例" class="headerlink" title="舉例:"></a>舉例:</h3><table>
<thead>
<tr>
<th>命令</th>
<th>解釋</th>
</tr>
</thead>
<tbody><tr>
<td>5 * * * *</td>
<td>每小時的第五分鐘執行命令</td>
</tr>
<tr>
<td>30 8 * * *</td>
<td>每天 8:30 執行命令</td>
</tr>
<tr>
<td>15 8-10 * * *</td>
<td>每天的 8 到 11 點的 15 分執行命令</td>
</tr>
<tr>
<td>*/5 * * * *</td>
<td>每 5 分鐘執行命令</td>
</tr>
<tr>
<td>30 6 /10 * *</td>
<td>每個月中，每 10 天的 6:30 執行命令，也就是每月的 1, 11, 21, 31 日的 6:30 執行命令</td>
</tr>
</tbody></table>
<h2 id="QUESTION-排成需要多行指令那要怎麼辦呢？"><a href="#QUESTION-排成需要多行指令那要怎麼辦呢？" class="headerlink" title="QUESTION: 排成需要多行指令那要怎麼辦呢？"></a>QUESTION: 排成需要多行指令那要怎麼辦呢？</h2><p>用括號 + 分號來解決這問題，括號來放入全部指令，分號則用來分隔命令。<br>舉例:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*&#x2F;5 * * * *  (cd &#x2F;home&#x2F;archcopilot&#x2F;public_html&#x2F;david53133&#x2F;v1.0&#x2F; ; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;python3.6 climb.py)</span><br></pre></td></tr></table></figure>

<h2 id="QUESTION-如果我想要透過執行檔執行文件該怎麼辦呢"><a href="#QUESTION-如果我想要透過執行檔執行文件該怎麼辦呢" class="headerlink" title="QUESTION: 如果我想要透過執行檔執行文件該怎麼辦呢?"></a>QUESTION: 如果我想要透過執行檔執行文件該怎麼辦呢?</h2><p>舉例，例如我想要執行 python 程式，那我是不是應該要 <code>python3 test.py</code>，在某些情況下是可以的。但如果你的 <code>python3</code> 並沒有放在系統預設的位置 <code>/usr/bin</code>就不行！<br>因此我建議的操作如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">which python3 # 先尋找執行檔的路徑</span><br><span class="line">&#x2F;home&#x2F;path&#x2F;... # 輸出的路徑</span><br><span class="line">&#x2F;home&#x2F;path&#x2F;..&#x2F;python3 test.py #執行命令</span><br></pre></td></tr></table></figure>

<h2 id="QUESTION-我想要看我的排成有沒有被執行？"><a href="#QUESTION-我想要看我的排成有沒有被執行？" class="headerlink" title="QUESTION: 我想要看我的排成有沒有被執行？"></a>QUESTION: 我想要看我的排成有沒有被執行？</h2><p>排成執行的紀錄在 <code>/var/log/cron</code>，再透過 <code>cat</code> 找出來即可。舉例:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;var&#x2F;log&#x2F;cron</span><br></pre></td></tr></table></figure>


<h2 id="QUESTION-為甚麼我排成的指令有被執行，但我看卻沒有？"><a href="#QUESTION-為甚麼我排成的指令有被執行，但我看卻沒有？" class="headerlink" title="QUESTION: 為甚麼我排成的指令有被執行，但我看卻沒有？"></a>QUESTION: 為甚麼我排成的指令有被執行，但我看卻沒有？</h2><h3 id="situation-1-你沒有-cd-路徑"><a href="#situation-1-你沒有-cd-路徑" class="headerlink" title="situation 1: 你沒有 cd 路徑"></a>situation 1: 你沒有 cd 路徑</h3><p>為甚麼會這樣說呢？因為其實你在執行路徑時，基本上都是從 <code>/user_name</code>出發，因此如果你的指令文件內有提到關於路徑，且路徑又是相對路徑是則極高機率遇到此問題。<br>建議使用 cd 到路徑後，在執行命令。舉例:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*&#x2F;5 * * * *  (cd &#x2F;home&#x2F;archcopilot&#x2F;public_html&#x2F;david53133&#x2F;v1.0&#x2F; ; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;python3.6 climb.py)</span><br></pre></td></tr></table></figure>
<h3 id="situation-2-指令本身有誤"><a href="#situation-2-指令本身有誤" class="headerlink" title="situation 2: 指令本身有誤"></a>situation 2: 指令本身有誤</h3><p>這也是一種可能，但我幫不了忙，對不起QQ。</p>
<h2 id="QUESTION-因為排成執行如果有問題是不會顯示，但我想要知道問題出在哪裡。排成可以提供日誌嗎？"><a href="#QUESTION-因為排成執行如果有問題是不會顯示，但我想要知道問題出在哪裡。排成可以提供日誌嗎？" class="headerlink" title="QUESTION: 因為排成執行如果有問題是不會顯示，但我想要知道問題出在哪裡。排成可以提供日誌嗎？"></a>QUESTION: 因為排成執行如果有問題是不會顯示，但我想要知道問題出在哪裡。排成可以提供日誌嗎？</h2><p>當然可以。我一開始研究還花很多時間XD，因為我一開始看不太懂，後面資料查久了才懂得wwww<br>透過 <code>&gt;&gt; test.log 2&amp;&gt;1</code>即可。舉例:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 0 *&#x2F;1 * *  (cd &#x2F;home&#x2F;archcopilot&#x2F;public_html&#x2F;david53133&#x2F;v1.0&#x2F; ; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;python3.6 climb.py)  &gt;&gt; &#x2F;home&#x2F;archcopilot&#x2F;public_html&#x2F;david53133&#x2F;v1.0&#x2F;crontab.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<h2 id="QUESITON-我要想排成好麻煩，有沒有比較簡單的排成方法"><a href="#QUESITON-我要想排成好麻煩，有沒有比較簡單的排成方法" class="headerlink" title="QUESITON: 我要想排成好麻煩，有沒有比較簡單的排成方法"></a>QUESITON: 我要想排成好麻煩，有沒有比較簡單的排成方法</h2><p>其實是有，但我個人覺得要記那些語法對我言太麻煩了。<br>這裡有一推薦的排成計算機，可以幫助你對你想要的時間點進行排成的指令計算出來。<br>連結就<a href="https://crontab.guru/" target="_blank" rel="noopener">請點這裡</a></p>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://blog.csdn.net/liaoyanyunde/article/details/86572370" target="_blank" rel="noopener">查看crontab任务是否执行以及执行日志</a><br><a href="https://blog.gtwang.org/linux/linux-crontab-cron-job-tutorial-and-examples/" target="_blank" rel="noopener">Linux 設定 crontab 例行性工作排程教學與範例</a><br><a href="https://freesilo.com/?p=1083" target="_blank" rel="noopener">crontab的语法规则格式（每分钟、每小时、每天、每周、每月、每年定时执行 规则）</a><br><a href="https://crontab.guru/" target="_blank" rel="noopener">crontab calculator</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>排成真的有點難呀，不過我認為是我閱讀文章的能力不夠，還沒辦法閱讀一次就能看懂網路上大神的文章，於是我在這邊做些筆記紀錄，也希望幫助現在跟我一樣還不夠看懂大神的文章人可以透過我這篇文章而了解排成的用法。<br>希望能夠幫助到別人，這是我最大的心願。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>linux</tag>
        <tag>centOS</tag>
      </tags>
  </entry>
  <entry>
    <title>大衞愛用的表情符號</title>
    <url>/2020/07/20/blog/Emoticons/</url>
    <content><![CDATA[<h2 id="表情符號，為甚麼要記錄這個！"><a href="#表情符號，為甚麼要記錄這個！" class="headerlink" title="表情符號，為甚麼要記錄這個！"></a>表情符號，為甚麼要記錄這個！</h2><blockquote>
<p>因為這些表情符號是我愛用的，我也覺得很可愛。於是我想收集起來</p>
</blockquote>
<a id="more"></a>

<h2 id="以下就是大衛愛用的表情符號"><a href="#以下就是大衛愛用的表情符號" class="headerlink" title="以下就是大衛愛用的表情符號"></a>以下就是大衛愛用的表情符號</h2><table>
<thead>
<tr>
<th>表情符號</th>
</tr>
</thead>
<tbody><tr>
<td>QwQ</td>
</tr>
<tr>
<td>٩(^ᴗ^)۶</td>
</tr>
<tr>
<td>ಠ︵ಠ</td>
</tr>
<tr>
<td>✧(&gt;o&lt;)ﾉ</td>
</tr>
<tr>
<td>╰(⸝⸝⸝´꒳`⸝⸝⸝)╯</td>
</tr>
<tr>
<td>(◍•ᴗ•◍)❤️</td>
</tr>
<tr>
<td>♡(&gt; ਊ &lt;)♡</td>
</tr>
<tr>
<td>(*＾3＾)/～♡</td>
</tr>
<tr>
<td>ಥ⌣ಥ</td>
</tr>
<tr>
<td>ε٩(๑&gt; ₃ &lt;)۶з</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>表情符號</tag>
      </tags>
  </entry>
  <entry>
    <title>mathjax 用法紀錄</title>
    <url>/2020/07/20/blog/about-mathjax/</url>
    <content><![CDATA[<h2 id="主要內容"><a href="#主要內容" class="headerlink" title="主要內容"></a>主要內容</h2><blockquote>
<p>幫助大衛在 blog 中使用 mathjax 時忘記用法的時候直接快速使用，省去找文章的麻煩<br>雙斜線代表 mathjax 的用法，因為這裡我若完整照打會直接變成 mathjax 格式，於是我都只打內容<br>如下 &amp;&amp;(內容 &amp;&amp;) ，將 &amp;消除後放入內容即可使用</p>
</blockquote>
<a id="more"></a>

<h2 id="數學用法"><a href="#數學用法" class="headerlink" title="數學用法"></a>數學用法</h2><p><strong>普通英文字母若前面未加入反斜線則代表可隨意帶入數值</strong></p>
<table>
<thead>
<tr>
<th>數學用法</th>
<th>mathjax 打法</th>
<th>備註</th>
</tr>
</thead>
<tbody><tr>
<td>次方</td>
<td>a^{b}</td>
<td></td>
</tr>
<tr>
<td>x項</td>
<td>a_{b}</td>
<td></td>
</tr>
<tr>
<td>字與字的空格</td>
<td>a \ b</td>
<td></td>
</tr>
<tr>
<td>大括號</td>
<td>&amp;{ , &amp;}</td>
<td>&amp;需消除</td>
</tr>
<tr>
<td>分式寫法</td>
<td>\frac{分子}{分母}</td>
<td></td>
</tr>
<tr>
<td>套入文字</td>
<td>\text{文字}</td>
<td></td>
</tr>
<tr>
<td>總和</td>
<td>\sum_{i=1}^n a_n</td>
<td></td>
</tr>
<tr>
<td>大於等於</td>
<td>\geq</td>
<td></td>
</tr>
<tr>
<td>小於等於</td>
<td>\leq</td>
<td></td>
</tr>
<tr>
<td>乘法</td>
<td>\cdot</td>
<td></td>
</tr>
<tr>
<td>百分比</td>
<td>\ \ %</td>
<td>須將斜線 與 % 中間的空白消去</td>
</tr>
<tr>
<td>註解</td>
<td>\ %</td>
<td>須將斜線 與 % 中間的空白消去</td>
</tr>
<tr>
<td>對數</td>
<td>\log_2 x</td>
<td></td>
</tr>
</tbody></table>
<h2 id="教學連結"><a href="#教學連結" class="headerlink" title="教學連結"></a>教學連結</h2><p><a href="https://blog.csdn.net/mage_ee/article/details/75309174" target="_blank" rel="noopener">MathJax 基础 (1)：基础语法</a><br><a href="https://blog.csdn.net/yang_csdnForOBTS/article/details/81228365" target="_blank" rel="noopener">Latex：大于等于号和小于等于号</a><br><a href="https://math.meta.stackexchange.com/questions/22443/how-to-markup-expression-using-sigma-notation-for-sum-in-mathjax" target="_blank" rel="noopener">How to markup expression using sigma notation for sum in MathJax</a><br><a href="https://blog.csdn.net/bi_hu_man_wu/article/details/70207695" target="_blank" rel="noopener">Latex中点乘、叉乘、除以</a><br><a href="https://phabricator.wikimedia.org/T38855" target="_blank" rel="noopener">MathJax treats percent sign (%) as start of a comment</a></p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>mathjax</tag>
      </tags>
  </entry>
  <entry>
    <title>tidytext ERROR! Input must be a character vector of any length or a list of character vectors, each of which has a length of 1.</title>
    <url>/2020/09/10/R/R-ERROR-tinytext-unnset-token/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>寫程式的時候是不可能沒遇到 bug 的，bug 紀錄整理</p>
</blockquote>
<a id="more"></a>

<h2 id="ERROR-Input-must-be-a-character-vector-of-any-length-or-a-list-of-character-vectors-each-of-which-has-a-length-of-1"><a href="#ERROR-Input-must-be-a-character-vector-of-any-length-or-a-list-of-character-vectors-each-of-which-has-a-length-of-1" class="headerlink" title="ERROR! Input must be a character vector of any length or a list of character vectors, each of which has a length of 1."></a>ERROR! Input must be a character vector of any length or a list of character vectors, each of which has a length of 1.</h2><blockquote>
<p>當我們在使用 tidytest 此套件中的 unnest_tokens 時遇到此問題，要怎麼解決呢？</p>
</blockquote>
<h3 id="situation-1-input-的-data-裡面的字串型態並不是-character-而是-factor"><a href="#situation-1-input-的-data-裡面的字串型態並不是-character-而是-factor" class="headerlink" title="situation 1: input 的 data 裡面的字串型態並不是 character 而是 factor"></a>situation 1: input 的 data 裡面的字串型態並不是 character 而是 factor</h3><p>先看看你給予 unnest_tokens 的 data，然後透過 print 來查看型態，如果有查看到關於型態為 factor 而不是 character 且這是你需要使用 unnest_tokens 的 data，強烈建議先將他轉成 character，再重跑一次 unnest_tokens，這樣或許能夠解決問題。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xDomino.Title &lt;- tibble(line&#x3D;1:nrow(x.Domino),text &#x3D; as.character(x.Domino$Title) )</span><br><span class="line">xDomino.Title.word &lt;- xDomino.Title %&gt;% tidytext::unnest_tokens(word, text)</span><br></pre></td></tr></table></figure>

<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://stackoverflow.com/questions/46341840/how-do-i-solve-the-following-errorinput-must-be-a-character-vector-of-any-lengt" target="_blank" rel="noopener">How do I solve the following error?Input must be a character vector of any length or a list of character vectors, each of which has a length of 1.</a><br><a href="https://juliasilge.github.io/tidytext/reference/unnest_tokens.html" target="_blank" rel="noopener">Split a column into tokens using the tokenizers package</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>有時候文章看得不夠多，真的沒有安全感呀，有時候網路充斥著太多過時訊息會使人誤解正確資訊，於是我特地寫一篇文章來增加資訊的正確程度，我也希望我這篇文章可以幫助到別人且此文章沒有錯誤，謝系大家。<br>P.S. 我再找這 bug 也是花了很多時間…，大概一小時，找 bug 應該可以排行在世界十大麻煩之中了 QwQ。</p>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>character 與 factor 比較</title>
    <url>/2020/09/10/R/R-factor_vs_character/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>說明 R 語言中 factor 跟 character 他們彼此有甚麼好處又有甚麼不一樣。</p>
</blockquote>
<a id="more"></a>

<h2 id="character-介紹"><a href="#character-介紹" class="headerlink" title="character 介紹"></a>character 介紹</h2><p>基本上它就是 string，並不是 C 語言的 char，如果他是 C 語言的 char 那就很難用了www。<br>是 R 語言中最好用也是最基礎的型態之一。</p>
<p>字串的用法，相信只要 google 就好，我來講的話或許有點太失字串面子了。</p>
<h2 id="factor-介紹"><a href="#factor-介紹" class="headerlink" title="factor 介紹"></a>factor 介紹</h2><p>我對於 factor 比較不熟，如果沒有介紹的很晚整抱歉 QQ。<br>factor 用一句話來表示就是專門給文字用的 vector，且他還帶有層級(Levels) 的 vector。</p>
<h3 id="factor-比起-vectior-多兩個要素"><a href="#factor-比起-vectior-多兩個要素" class="headerlink" title="factor 比起 vectior 多兩個要素:"></a>factor 比起 vectior 多兩個要素:</h3><p>ordered</p>
<ul>
<li>決定要不要有排序，如果沒有指定順序方式，則會使用字母順序來排序。<br>levels</li>
<li>決定排序的方式</li>
</ul>
<p>舉例:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">temperatures &lt;- c(&quot;warm&quot;, &quot;hot&quot;, &quot;cold&quot;)</span><br><span class="line">temp_factors &lt;- factor(temperatures, ordered &#x3D; TRUE, levels &#x3D; c(&quot;cold&quot;, &quot;warm&quot;, &quot;hot&quot;))</span><br><span class="line">temp_factors</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## [1] warm hot  cold</span><br><span class="line">## Levels: cold &lt; warm &lt; hot</span><br></pre></td></tr></table></figure>

<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://bookdown.org/tonykuoyj/eloquentr/vector-factor.html" target="_blank" rel="noopener">10 多樣的資料結構：向量與因素向量</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>為甚麼會突然寫一篇關於 factor 與 character 的差別呢，因為在 linux 上我遇到的<a href="https://theriseofdavid.github.io/2020/09/10/R/R-unexpected_error_to_Data_Transformation/" target="_blank" rel="noopener">第一個將程式移植到 linux 的錯誤</a>上就是關於這個，也讓我認識到 factor，雖然我想不懂為甚麼再將程式移植時會遇到此問題，但是有問題就是要解決，於是在這裡紀錄經驗，不讓我忘記也希望其他人可以盡快解決此 bug。</p>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>BUG! Data_Transformation_to_OS</title>
    <url>/2020/09/10/R/R-unexpected_error_to_Data_Transformation/</url>
    <content><![CDATA[<h2 id="內容說明："><a href="#內容說明：" class="headerlink" title="內容說明："></a>內容說明：</h2><blockquote>
<p>R 語言將程式碼從 A os to B os 會出一些差錯，在這邊進行紀錄</p>
</blockquote>
<a id="more"></a>

<h2 id="BUG-Data-Transformation-to-OS"><a href="#BUG-Data-Transformation-to-OS" class="headerlink" title="BUG! Data_Transformation_to_OS"></a>BUG! Data_Transformation_to_OS</h2><p>當我再 windows10 上把寫好的 R 程式放到 centOS6 上時卻執行出 ERROR，但在 windows 不會出錯呀！為甚麼會這樣呢？</p>
<h2 id="solution-1-可能是型態不同"><a href="#solution-1-可能是型態不同" class="headerlink" title="solution 1: 可能是型態不同"></a>solution 1: 可能是型態不同</h2><p>在我的經驗中，R 的 tribble 的字串可能會在 windows 是 character 型態，但在 linux 上則是 factor，因此如果要讓程式可以繼續跑，就在 linux 上的程式特意再將 factor 再轉成 character 即可。</p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>老實講，這種問題我第一次遇到，這也讓我很頭疼。因為其實只有一份程式碼讓我遇到，於是我都沒有往這方向去思考，直到我不斷尋找問題時，腦袋靈光一閃才讓我找出此錯誤。</p>
<p>在這邊推薦一種除錯方式，雖然應該很多人都知道，但這除錯方式是我自己想的，可以將你每份程式碼都先複製 4、5 行進入 R console，這樣會相對好除錯很多。因為我在公司沒有人教我怎麼除錯，我當時也過有自信的說我會寫 R，導致變成讓我少從主管們學到一些經驗，讓我多踩一些坑，有時候這確實也不太好QQ。</p>
]]></content>
      <categories>
        <category>R語言</category>
      </categories>
      <tags>
        <tag>R語言</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>linux /usr/bin 與 /usr/local/bin 有甚麼差別?</title>
    <url>/2020/09/10/linux/linux-locan_bin_vs_bin/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h2><blockquote>
<p>記錄我在 linux 上關於執行檔路徑位置的觀念澄清。<br>作業系統為: centOS6</p>
</blockquote>
<h2 id="問題概述："><a href="#問題概述：" class="headerlink" title="問題概述："></a>問題概述：</h2><p>通常我們在將某份程式文件 <code>make &amp;&amp; make install</code> 之後，我們只要輸入執行檔的 key，就可以直接輸入指令。例如:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 test.py</span><br><span class="line">yum install openssl</span><br></pre></td></tr></table></figure>

<p>這種感覺，而其中的 yum and python3，就是執行檔的 key，但神奇的是你 <code>which</code> 他們路徑時卻不一樣</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># yum 執行檔路徑</span><br><span class="line">which yum</span><br><span class="line">&#x2F;usr&#x2F;bin</span><br><span class="line"></span><br><span class="line"># 在 python 執行檔路徑</span><br><span class="line">which python3</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;bin</span><br></pre></td></tr></table></figure>
<p>他們的位置是不一樣的！這讓我覺得神奇也特別去查了下這兩個的用法。</p>
<h2 id="usr-bin-下通常是放甚麼呢"><a href="#usr-bin-下通常是放甚麼呢" class="headerlink" title="usr/bin 下通常是放甚麼呢?"></a>usr/bin 下通常是放甚麼呢?</h2><p>通常放置可執行程式，基本上 linux 內建的所有可執行程式都放置於此。</p>
<h2 id="usr-local-bin-下通常是放甚麼呢"><a href="#usr-local-bin-下通常是放甚麼呢" class="headerlink" title="usr/local/bin 下通常是放甚麼呢?"></a>usr/local/bin 下通常是放甚麼呢?</h2><p>由於軟體會隨著時間推移而可以進行更新，例如要升級 python，那通常軟體預設安裝的地方在 /usr/local (local 是表示本機) 之間，但同時由於電腦內有新舊版的程式可執行檔，所以通常會把升級後的程式放在 usr/local/bin 資料夾內。</p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>linux 在自學的過程中其實個人覺得有點難呀！可能是因為我比較不敢亂來 XD，都是先看很多文章直到看到了有安全感才會下手，導致我常常把一件事情學習很久 QQ。因為我會怕如果做錯要返回很麻煩 QwQ，疫點都沒有年輕人的幹勁呀，欸！</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>linux</tag>
        <tag>centOS</tag>
      </tags>
  </entry>
  <entry>
    <title>QUESTION! HEXO 可以多個 categories 嗎?</title>
    <url>/2020/07/20/blog/blog-categories/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明:"></a>內容說明:</h2><blockquote>
<p>關於我在撰寫 blog 時遇到的問題經驗，並留下紀錄來解決。</p>
</blockquote>
<a id="more"></a>

<h2 id="QUESTION-HEXO-可以多個-categories-嗎"><a href="#QUESTION-HEXO-可以多個-categories-嗎" class="headerlink" title="QUESTION: HEXO 可以多個 categories 嗎?"></a>QUESTION: HEXO 可以多個 categories 嗎?</h2><p>當然可以。<del>雖然我應該一開始還覺得不行，因為看到了其他文章說不行 QQ</del></p>
<h3 id="situation-1-子分類"><a href="#situation-1-子分類" class="headerlink" title="situation 1: 子分類"></a>situation 1: 子分類</h3><p>如果你想要有一種分類是在 a 分類底下還有 b 分類，那就要使用此寫法。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">categories: [Language,Chinese]</span><br></pre></td></tr></table></figure>

<h3 id="situation-2-一篇文章放在多分類中"><a href="#situation-2-一篇文章放在多分類中" class="headerlink" title="situation 2: 一篇文章放在多分類中"></a>situation 2: 一篇文章放在多分類中</h3><p>如果你想要一篇文章可以再多種分類下，但並不是 situation 1 那種情況，而是要那些分類的 level 等級都是一樣時，可以使用這種寫法。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">  - [English]</span><br><span class="line">  - [Chinese]</span><br></pre></td></tr></table></figure>

<h3 id="situation-3-我想要上述兩種方法我同時都要使用怎麼辦？"><a href="#situation-3-我想要上述兩種方法我同時都要使用怎麼辦？" class="headerlink" title="situation 3: 我想要上述兩種方法我同時都要使用怎麼辦？"></a>situation 3: 我想要上述兩種方法我同時都要使用怎麼辦？</h3><p>那就將他們綜合起來運用就可以了！</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">  - [Language]</span><br><span class="line">  - [Sport]</span><br></pre></td></tr></table></figure>

<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://aiellochan.com/2018/02/13/hexo/Hexo-%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%A4%9A%E4%B8%AA-categories/" target="_blank" rel="noopener">Hexo 一篇文章多个 categories</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>老實講，因為我的英文能力不好，所以我大部分的學習都是仰賴國人的文章，我很感謝他們，如果沒有他們我或許學習的速度並沒有那麼快八，雖然可能少了學習英文的機會，但我本來主意就是要學習好程式技術，所以我對願意撰寫技術的每個人，只要是這個世界的人我都保持著謝意與尊敬。</p>
<p>我自己也希望可以變成這種人，但我技術還不強，目前邊寫邊紀錄，希望能讓自己成長蛻變。</p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>人生旅途</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Codeforces 161D - Distance in Tree (點分治講解)</title>
    <url>/2020/09/11/Codeforces/Codeforces%20161D/</url>
    <content><![CDATA[<h2 id="題目大意："><a href="#題目大意：" class="headerlink" title="題目大意："></a>題目大意：</h2><blockquote>
<p>給你一棵樹，保證他們不會形成迴路。詢問這棵樹中有多少 x 的距離。<br><strong>以下用到的都是使用<a href="https://www.luogu.com.cn/blog/user9012/dian-fen-zhi-lve-xie#blog-comments" target="_blank" rel="noopener">Dispwnl 博客的點分治講解</a>的圖片，如果 Dispwnl 大大不允許我使用我將會自行刪除，向 Dispwnl 道歉 QQ，也很謝謝他寫的詳細點分治教學讓我對點分治有了解</strong><br>此篇程式碼大多從 <a href="https://blog.csdn.net/The___Flash/article/details/101099955" target="_blank" rel="noopener">Distance in Tree （CodeForces - 161D，点分治）</a> 學習而來，謝謝作者釋放自己的程式碼，讓我可以完整學習到點分治。</p>
</blockquote>
<a id="more"></a>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>這要使用一種我從來沒有學過的演算法「點分治」，我們先來說說看點分治通常用於甚麼題目。</p>
<blockquote>
<p>他專門來解決給定一棵樹和一個整數 k，求此樹上兩點路徑等於小於 k 的有多少？<br>由於此題是點分治的模板題，只要能夠了解點分治就能解決此問題。<br>這題為教學題，我們將問題簡單化，只詢問「樹上兩點路徑等於 = k」</p>
</blockquote>
<h2 id="點分治介紹"><a href="#點分治介紹" class="headerlink" title="點分治介紹"></a>點分治介紹</h2><p><strong>點分治的精隨: 就是不斷把一顆樹拆成子樹來處理，並考慮路徑合併</strong><br><strong>分治點的選擇: 樹的重心</strong></p>
<h3 id="QUESTION-1-分治點是甚麼"><a href="#QUESTION-1-分治點是甚麼" class="headerlink" title="QUESTION 1: 分治點是甚麼?"></a>QUESTION 1: 分治點是甚麼?</h3><p>分治點就是可以把一顆樹拆成兩棵樹的點。</p>
<h3 id="QUESTION-2-樹的重心是甚麼"><a href="#QUESTION-2-樹的重心是甚麼" class="headerlink" title="QUESTION 2: 樹的重心是甚麼?"></a>QUESTION 2: 樹的重心是甚麼?</h3><p>樹重心的所有子樹大小不超過整個樹大小的一半。</p>
<h3 id="QEUSTION-3-此演算法的複雜度呢"><a href="#QEUSTION-3-此演算法的複雜度呢" class="headerlink" title="QEUSTION 3: 此演算法的複雜度呢?"></a>QEUSTION 3: 此演算法的複雜度呢?</h3><p>\(O(\log n)\)</p>
<h3 id="名詞解釋-公式"><a href="#名詞解釋-公式" class="headerlink" title="名詞解釋: 公式"></a>名詞解釋: 公式</h3><p>樹的重心到左子樹中的路徑 + 樹的重心到右子樹的路徑 = k </p>
<h2 id="點分治原理操作"><a href="#點分治原理操作" class="headerlink" title="點分治原理操作"></a>點分治原理操作</h2><p><img src="/images/Codeforces161D/1.png" alt=""><br>如圖，我們先找出樹的重心，在將從樹的重心到左子樹中的路徑 + 樹的重心到右子樹的路徑加起來如果等於 k 我們就加一條路徑，再透過分治的方式，再從子樹的重心在重複一樣動作。<del>可以寫出很玄的遞迴</del></p>
<h2 id="選樹的重心"><a href="#選樹的重心" class="headerlink" title="選樹的重心"></a>選樹的重心</h2><p><img src="/images/Codeforces161D/2.png" alt=""><br>樹的重心不可以亂選，如果沒有選好是很浪費效率的，如上圖。</p>
<h3 id="QUESTION-你想想看如果選到-y-會多浪費時間www。"><a href="#QUESTION-你想想看如果選到-y-會多浪費時間www。" class="headerlink" title="QUESTION : 你想想看如果選到 y 會多浪費時間www。"></a>QUESTION : 你想想看如果選到 y 會多浪費時間www。</h3><p>當讀者學會以後，可以自行回答此問題，也順便增加自己對點分治的能力 XD。</p>
<p>開玩笑的，這篇是要讓讀者能了解點分治的，選 y 的話找路徑需要遞迴 4 次，但選 x 只需要遞迴 2 次，可以得知要找的點要盡量讓遞迴的次數最少為最優，樹的重心是最好的。</p>
<h2 id="建構樹"><a href="#建構樹" class="headerlink" title="建構樹"></a>建構樹</h2><p>建構點分治的樹比較抽象，因此拉出來獨立討論：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span> </span><br><span class="line">    <span class="keyword">int</span> v , nx ;</span><br><span class="line">     <span class="comment">//v = x 可以到此點，路徑為一 , nx 為 x 可以到此點的另外一個 Edge index，一樣是路徑為一 </span></span><br><span class="line">&#125;Edge[MAXN*<span class="number">2</span>]; </span><br><span class="line"><span class="comment">// 由於無向邊，但此結構是有向所以必須 *2， u -&gt; v , v &lt;- u 各一條。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n )</span></span>&#123;</span><br><span class="line">    Max[<span class="number">0</span>] = n ; </span><br><span class="line">    <span class="comment">// Max 是此點最大子樹中的點加起來，0 我們不採用於是就將它設為題目初始長度</span></span><br><span class="line">    ans = cnt = <span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">        head[i] = <span class="number">-1</span> ; </span><br><span class="line">        <span class="comment">//head 為 i 可以到某個點，路徑為一的 Edge index </span></span><br><span class="line">        <span class="comment">// head = -1 是因為下面的遞迴停止關鍵為 ~i ， ~(-1) = 0  </span></span><br><span class="line">        vis[i] = <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="尋找樹的重心"><a href="#尋找樹的重心" class="headerlink" title="尋找樹的重心"></a>尋找樹的重心</h2><p>透過 DFS + BFS，DFS 來尋找路徑長，BFS 來檢索子樹即可寫出這份遞迴來得知樹的重心：<br>我相信各位應該看不太懂這程式碼在寫甚麼於是我逐行增加註解。<del>寫得不好，大神請無視</del></p>
<p>也提供看我之前用紙筆實作的筆記來方便讀者學習，如果還是看不太懂註解那就看看我的實作筆記希望能看懂QQ<br><a href="#寫作筆記-1-get-root-note-1"> 寫作筆記 1 get_root (note 1) </a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//rt = root </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_rt</span><span class="params">(<span class="keyword">int</span> u , <span class="keyword">int</span> fa )</span></span>&#123;</span><br><span class="line">    sz[u] = <span class="number">1</span> ; Max[u] = <span class="number">0</span> ; </span><br><span class="line">    <span class="comment">//sz 是此點子樹的大小 // Max 是此點最大子樹中的點加起來</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = head[u] ; ~i ; i=Edge[i].nx)&#123; </span><br><span class="line">        <span class="comment">// 枚舉次點進行的兒子 = 進行長度為一的 BFS(玄學版)</span></span><br><span class="line">        <span class="comment">// 由於 i = Edge[i].nx 於是可以直接找到下一個 i to v 路徑為一的節點</span></span><br><span class="line">        <span class="keyword">int</span> v = Edge[i].v ; </span><br><span class="line">        <span class="keyword">if</span>(vis[v] || v == fa )  <span class="keyword">continue</span> ; </span><br><span class="line">        <span class="comment">// vis 表示此點用過了，在第一次找重心時無用。之後會用到。</span></span><br><span class="line">        get_rt(v,u); <span class="comment">// 向下延伸</span></span><br><span class="line">        Max[u] = max(Max[u] , sz[v]); </span><br><span class="line">        <span class="comment">// 判斷這顆子樹有沒有比此點最大的子樹還要大</span></span><br><span class="line">        sz[u] += sz[v] ; <span class="comment">//更新 sz</span></span><br><span class="line">    &#125;</span><br><span class="line">    Max[u] = max(Max[u] , n - sz[u]); </span><br><span class="line">    <span class="comment">//用此點將樹分割，分割的兩部分是從此點展開的子樹與另外一個從父節點延伸的子樹 (n - sz[u])</span></span><br><span class="line">    <span class="keyword">if</span>(Max[rt] &gt; Max[u]) </span><br><span class="line">    <span class="comment">// 如果現在的最大子樹比較小那就採用現在的點</span></span><br><span class="line">        rt =  u ;</span><br><span class="line">&#125;</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">## 尋找從此點到所有子樹中所有點的距離</span><br><span class="line">這遞迴將我們從 u 點到所有點的距離都會求出來。</span><br><span class="line">一樣會每行進行註解，但前面有講到則不再贅述。</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_dis</span><span class="params">(<span class="keyword">int</span> u , <span class="keyword">int</span> fa , <span class="keyword">int</span> d)</span></span>&#123; <span class="comment">// fa = father , d = distance</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = head[u] ; ~i ; i= Edge[i].nx)&#123;</span><br><span class="line">        <span class="keyword">int</span> v = Edge[i].v ;</span><br><span class="line">        <span class="keyword">if</span>(vis[v] || v == fa ) <span class="keyword">continue</span> ; </span><br><span class="line">        <span class="comment">//如果 v == fa ，代表這點已經沒辦法再向下延伸</span></span><br><span class="line">        <span class="comment">// vis 如果此點有被用到就返回</span></span><br><span class="line">        dis[++cnt] = d + <span class="number">1</span> ; </span><br><span class="line">        <span class="comment">// 由於這裡我們並不在意是哪個點到哪個點的路徑長，我們只在意此路徑長多少，於是我們就用 ++cnt，循序填滿。</span></span><br><span class="line">        get_dis(v,u,dis[cnt]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="求通過此點的子樹們相加起來的路徑長來求答案"><a href="#求通過此點的子樹們相加起來的路徑長來求答案" class="headerlink" title="求通過此點的子樹們相加起來的路徑長來求答案"></a>求通過此點的子樹們相加起來的路徑長來求答案</h2><p>透過樹的重心將一顆完整的樹在分割成子樹，詢問如果從 子樹 A 到樹重心 + 子樹 B 到樹重心 = k 的有多少。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_ans</span><span class="params">(<span class="keyword">int</span> u , <span class="keyword">int</span> d )</span></span>&#123;</span><br><span class="line">    dis[cnt=<span class="number">1</span>] = d ;</span><br><span class="line">    get_dis(u,<span class="number">0</span>,d) ;</span><br><span class="line">    sort(dis+<span class="number">1</span> , dis+cnt+<span class="number">1</span>) ; </span><br><span class="line">    <span class="comment">// 由於 dis 裡面每一個都是從任意一個點到樹重心，透過公式(子樹 A 到樹重心 + 子樹 B 到樹重心 = k)，</span></span><br><span class="line">    <span class="comment">// 我們並不需要在意哪個點只需要在意距離長</span></span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span> , ans = <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(l &lt; cnt &amp;&amp; dis[l] + dis[cnt] &lt; k ) l++ ; </span><br><span class="line">    <span class="comment">// 這時候的 cnt 因為 get_dis 不斷增加數量於是當前的 cnt 也會等於 dis 的右邊界。</span></span><br><span class="line">    <span class="comment">// 我們假設我們先使用 dis[l] 也就是最小路徑去跟其他條進行配合看是否能夠等於 k</span></span><br><span class="line">    <span class="comment">//如果 dis[l] + dis[cnt] 都沒有大於 k 就代表，怎樣都不會大於 k，於是將 l 範圍縮小增進，優化效率。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(l &lt; cnt &amp;&amp; dis[l] &lt;= k - dis[l])&#123; </span><br><span class="line">        ans += upper_bound(dis + l + <span class="number">1</span> , dis + cnt + <span class="number">1</span> , k - dis[l]) -  \ </span><br><span class="line">                lower_bound(dis+l+<span class="number">1</span> , dis+cnt+<span class="number">1</span> , k-dis[l]);</span><br><span class="line">        <span class="comment">// 因為我們的 dis 右邊界是一，所以所有 dis +1</span></span><br><span class="line">        <span class="comment">// k - dis[l]，可以找出我們 k = dis[l] + x， x 為任意變數能夠滿足前述公式即可。</span></span><br><span class="line">        l++ ; <span class="comment">// 再換新的 dis[l] 來進行配合</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="扣掉重複算到的路徑，用-DFS-實現"><a href="#扣掉重複算到的路徑，用-DFS-實現" class="headerlink" title="扣掉重複算到的路徑，用 DFS 實現"></a>扣掉重複算到的路徑，用 DFS 實現</h2><p><img src="/images/Codeforces161D/3.png" alt=""><br>我們從 A 到 root + B 到 root，路徑為 4，但這樣是不正確的，因為 A , B 都在同一個子樹並沒有符合我們一直強調的公式。於是我們需要做一個 BFS + DFS，再將重心的點分割成子樹再進行 <code>get_dis</code> and <code>get_ans</code> 的動作，就可以避免掉圖片中的問題。</p>
<p>如果還有點疑問，看程式碼八，也許程式碼的註解可以幫助到你。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u )</span></span>&#123;</span><br><span class="line">    vis[u] = <span class="number">1</span> ; <span class="comment">// 被用過的點，也是我們用來分割子樹的標準</span></span><br><span class="line">    <span class="comment">//cout &lt;&lt; rt &lt;&lt; ' ' &lt;&lt; u &lt;&lt; '\n' ;</span></span><br><span class="line">    ans += get_ans(u , <span class="number">0</span>); <span class="comment">// 得到公式中的 k，裡面會有不合法狀態，圖片中的問題。 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = head[u] ; ~i ; i = Edge[i].nx)&#123;</span><br><span class="line">        <span class="keyword">int</span> v = Edge[i].v ;</span><br><span class="line">        <span class="keyword">if</span>(vis[v]) <span class="keyword">continue</span> ;</span><br><span class="line">        ans -= get_ans(v , <span class="number">1</span>) ; <span class="comment">// 移除掉不合法的狀態 </span></span><br><span class="line">        <span class="comment">// QUESTION: 為甚麼這行可以移除掉不合法狀態呢?</span></span><br><span class="line">        <span class="comment">/* 我們看看上面的圖，他們是不是共用了至少同一條路徑？，如果共用很多條也沒關係</span></span><br><span class="line"><span class="comment">        ，之後的 DFS 就會注意到他們並解決這些問題。</span></span><br><span class="line"><span class="comment">        於是我們就可以用 get_ans(v,1) 用子樹的下一個點來進行一次 DFS，</span></span><br><span class="line"><span class="comment">        我們在假設 x -&gt; v 這條路徑會被共用，所以先直接設定成 1，</span></span><br><span class="line"><span class="comment">        這樣只要是不合法的答案在這邊都會被發現，就可以直接減掉就剩下合法答案了！</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        讀者如果還是不懂，可以嘗試將途中橘色的線(共用路徑)進行 +1 後再用 son 去算 dis_ans(son,1)</span></span><br><span class="line"><span class="comment">         去算 a, b 看 k = 4 時是不是也會有一條 XD。</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        n = sz[v] , rt = <span class="number">0</span> , get_rt(v,u); <span class="comment">//由於子樹被切割，所以 n 的 size 也必須減少成子樹的大小。</span></span><br><span class="line">        <span class="comment">//由於樹被切割，所以必須重新尋找被切割樹後重心。</span></span><br><span class="line">        dfs(rt); <span class="comment">//再將樹進行切割，來配合公式。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>也提供看我之前用紙筆實作的筆記來方便讀者學習，如果還是看不太懂註解那就看看我的實作筆記希望能看懂QQ<br><a href="#寫作筆記-2-dfs-and-get-ans-and-get-dis-note-2"> 寫作筆記 2 dfs and get_ans and get_dis (note 2) </a></p>
<h3 id="小貼心-由於我認為會有讀者對於在程式碼裡面放-QUESTION，閱讀不太方便，所以拉出來再寫一遍"><a href="#小貼心-由於我認為會有讀者對於在程式碼裡面放-QUESTION，閱讀不太方便，所以拉出來再寫一遍" class="headerlink" title="小貼心:由於我認為會有讀者對於在程式碼裡面放 QUESTION，閱讀不太方便，所以拉出來再寫一遍"></a>小貼心:由於我認為會有讀者對於在程式碼裡面放 QUESTION，閱讀不太方便，所以拉出來再寫一遍</h3><h4 id="QUESTION-為甚麼這行可以移除掉不合法狀態呢"><a href="#QUESTION-為甚麼這行可以移除掉不合法狀態呢" class="headerlink" title="QUESTION: 為甚麼這行可以移除掉不合法狀態呢?"></a>QUESTION: 為甚麼這行可以移除掉不合法狀態呢?</h4><h5 id="SOLUTION"><a href="#SOLUTION" class="headerlink" title="SOLUTION :"></a>SOLUTION :</h5><p>我們看看上面的圖，他們是不是共用了至少同一條路徑？，如果共用很多條也沒關係，之後的 DFS 就會注意到他們並解決這些問題。<br>於是我們就可以用 get_ans(v,1) 用子樹的下一個點來進行一次 DFS，我們在假設 x -&gt; v 這條路徑會被共用，所以先直接設定成 1，這樣只要是不合法的答案在這邊都會被發現，就可以直接減掉就剩下合法答案了！</p>
<p>讀者如果還是不懂，可以嘗試將途中橘色的線(共用路徑)進行 +1 後再用 son 去算 dis_ans(son,1) 去算 a, b 看 k = 4 時是不是也會有一條 XD。</p>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://www.luogu.com.cn/blog/user9012/dian-fen-zhi-lve-xie#blog-comments" target="_blank" rel="noopener">Dispwnl 的博客-点分治略解</a><br><a href="https://zhuanlan.zhihu.com/p/56692947" target="_blank" rel="noopener">点分治学习笔记</a><br><a href="https://blog.csdn.net/The___Flash/article/details/101099955" target="_blank" rel="noopener">Distance in Tree （CodeForces - 161D，点分治）</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>老實講，我其實學習起來是很吃力的。可能是因為我的基礎知識還不足以讓我可以閱讀我參考連結所放的文章，畢竟我的程式能力跟各位大神比還只是一個還在吃奶的小孩，很多大神可能都懂的東西，我都不懂，所以理解起來也會特別吃力，總是要先看一遍講解在自己用紙筆實作一遍程式碼才可以懂大神們的思維，但我真的很感謝大神，如果沒有他們，我連學習的機會都沒有。</p>
<p>雖然說用紙筆實作一遍程式碼很浪費時間，大概花了 5 小時理解吧，但它確實是最容易理解的，我只實作一遍我就能理解大神們的操作，如再 DFS 的遞迴中加入 BFS，使用那種 for 寫法www。</p>
<p>雖然每次在學習演算法總是會讓我覺得難過，因為是自學很容易遇到學習障礙，但我認為這是我應該要學會的基礎。我並不是幸運的孩子，我勢必要先做出一些成果，讓資源跟大神可以關注到我，在提拔我或幫助我成長。在還沒有大神們關注到我之前，我會默默耕耘，繼續努力的！</p>
<p>為了讓讀者與未來的我看到之前的我學習是怎麼學習的，我就在這邊放入我為了學習這份演算法而在紙上實作的紀錄吧！</p>
<h3 id="寫作筆記-1-get-root-note-1"><a href="#寫作筆記-1-get-root-note-1" class="headerlink" title="寫作筆記 1 get_root (note 1)"></a>寫作筆記 1 get_root (note 1)</h3><p><img src="/images/Codeforces161D/4.jpg" alt=""></p>
<h3 id="寫作筆記-2-dfs-and-get-ans-and-get-dis-note-2"><a href="#寫作筆記-2-dfs-and-get-ans-and-get-dis-note-2" class="headerlink" title="寫作筆記 2 dfs and get_ans and get_dis (note 2)"></a>寫作筆記 2 dfs and get_ans and get_dis (note 2)</h3><p><img src="/images/Codeforces161D/6.jpg" alt=""></p>
<h2 id="此題目程式碼"><a href="#此題目程式碼" class="headerlink" title="此題目程式碼"></a>此題目程式碼</h2><p>還真虧讀者可以讀到這邊，我也花了三個小時撰寫文章，如果是已經懂點分治的朋友們應該會覺得很煩吧！<del>雖然我覺得懂點分治的大神並不會對這題感到困難www，就不會來看我的文章了 XD</del></p>
<p>對，如題目大意所說，這題就只是個模板題，於是剩下的就是一些標頭檔跟題目給的資料範圍限制了 XD。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOCAL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 50005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n , k , a , b ;</span><br><span class="line"><span class="keyword">int</span> ans , cnt ;</span><br><span class="line"><span class="keyword">int</span> Max[MAXN] , sz[MAXN] , rt ;</span><br><span class="line"><span class="keyword">int</span> head[MAXN], dis[MAXN];</span><br><span class="line"><span class="keyword">bool</span> vis[MAXN] ;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v , nx ;</span><br><span class="line">&#125;Edge[MAXN*<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n )</span></span>&#123;</span><br><span class="line">    Max[<span class="number">0</span>] = n ;</span><br><span class="line">    ans = cnt = <span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">        head[i] = <span class="number">-1</span> ;</span><br><span class="line">        vis[i] = <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u , <span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    Edge[cnt].v = v ;</span><br><span class="line">    Edge[cnt].nx = head[u] ;</span><br><span class="line">    head[u] = cnt++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_rt</span><span class="params">(<span class="keyword">int</span> u , <span class="keyword">int</span> fa )</span></span>&#123;</span><br><span class="line">    sz[u] = <span class="number">1</span> ; Max[u] = <span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = head[u] ; ~i ; i=Edge[i].nx)&#123;</span><br><span class="line">        <span class="keyword">int</span> v = Edge[i].v ;</span><br><span class="line">        <span class="keyword">if</span>(vis[v] || v == fa )  <span class="keyword">continue</span> ;</span><br><span class="line">        get_rt(v,u);</span><br><span class="line">        sz[u] += sz[v] ;</span><br><span class="line">        Max[u] = max(Max[u] , sz[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    Max[u] = max(Max[u] , n - sz[u]);</span><br><span class="line">    <span class="keyword">if</span>(Max[rt] &gt; Max[u])</span><br><span class="line">        rt =  u ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_dis</span><span class="params">(<span class="keyword">int</span> u , <span class="keyword">int</span> fa , <span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = head[u] ; ~i ; i= Edge[i].nx)&#123;</span><br><span class="line">        <span class="keyword">int</span> v = Edge[i].v ;</span><br><span class="line">        <span class="keyword">if</span>(vis[v] || v == fa ) <span class="keyword">continue</span> ;</span><br><span class="line">        dis[++cnt] = d + <span class="number">1</span> ;</span><br><span class="line">        get_dis(v,u,dis[cnt]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_ans</span><span class="params">(<span class="keyword">int</span> u , <span class="keyword">int</span> d )</span></span>&#123;</span><br><span class="line">    dis[cnt=<span class="number">1</span>] = d ;</span><br><span class="line">    get_dis(u,<span class="number">0</span>,d) ;</span><br><span class="line">    sort(dis+<span class="number">1</span> , dis+cnt+<span class="number">1</span>) ;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span> , ans = <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(l &lt; cnt &amp;&amp; dis[l] + dis[cnt] &lt; k ) l++ ;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; cnt &amp;&amp; dis[l] &lt;= k - dis[l])&#123;</span><br><span class="line">        ans += upper_bound(dis + l + <span class="number">1</span> , dis + cnt + <span class="number">1</span> , k - dis[l]) - lower_bound(dis+l+<span class="number">1</span> , dis+cnt+<span class="number">1</span> , k-dis[l]);</span><br><span class="line">        l++ ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u )</span></span>&#123;</span><br><span class="line">    vis[u] = <span class="number">1</span> ;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; rt &lt;&lt; ' ' &lt;&lt; u &lt;&lt; '\n' ;</span></span><br><span class="line">    ans += get_ans(u , <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = head[u] ; ~i ; i = Edge[i].nx)&#123;</span><br><span class="line">        <span class="keyword">int</span> v = Edge[i].v ;</span><br><span class="line">        <span class="keyword">if</span>(vis[v]) <span class="keyword">continue</span> ;</span><br><span class="line">        ans -= get_ans(v , <span class="number">1</span>) ;</span><br><span class="line">        n = sz[v] , rt = <span class="number">0</span>  , get_rt(v,u);</span><br><span class="line">        dfs(rt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//#ifdef LOCAL</span></span><br><span class="line"><span class="comment">//    freopen("in1.txt" , "r" , stdin);</span></span><br><span class="line"><span class="comment">//#endif // LOCAL</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k ;</span><br><span class="line">    init(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">1</span>; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b ;</span><br><span class="line">        add(a,b);</span><br><span class="line">        add(b,a);</span><br><span class="line">    &#125;</span><br><span class="line">    rt = <span class="number">0</span> ; get_rt(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    dfs(rt);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">'\n'</span> ;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
      <tags>
        <tag>程式解題</tag>
        <tag>點分治</tag>
      </tags>
  </entry>
  <entry>
    <title>QUESTION! HEXO 可以使用錨點嗎？</title>
    <url>/2020/09/11/blog/markdown-anchor/</url>
    <content><![CDATA[<h2 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明:"></a>內容說明:</h2><blockquote>
<p>關於我在撰寫 blog 時遇到的問題經驗，並留下紀錄來解決。</p>
</blockquote>
<a id="more"></a>

<h2 id="QUESTION-HEXO-可以使用錨點嗎？"><a href="#QUESTION-HEXO-可以使用錨點嗎？" class="headerlink" title="QUESTION: HEXO 可以使用錨點嗎？"></a>QUESTION: HEXO 可以使用錨點嗎？</h2><p>我會寫的文章還會不行嗎 XD。</p>
<p>markdown 中常用 # 來建立段落標題，於是就利用段落標題來添加錨點</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">標題1</span>](<span class="link">#標題1</span>)</span><br><span class="line">[<span class="string">標題2</span>](<span class="link">#標題2</span>)</span><br><span class="line">[<span class="string">標題3</span>](<span class="link">#標題3</span>)</span><br><span class="line"></span><br><span class="line"><span class="section"># 標題一</span></span><br><span class="line"><span class="section">## 標題二</span></span><br><span class="line"><span class="section">### 標題三</span></span><br></pre></td></tr></table></figure>

<h3 id="需要注意的小細節"><a href="#需要注意的小細節" class="headerlink" title="需要注意的小細節:"></a>需要注意的小細節:</h3><p>如果我們的標題有空白時則使用 - 號代替</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">標題2 Test</span>](<span class="link">#標題2-test</span>)</span><br><span class="line"></span><br><span class="line"><span class="section">### 標題2 Test</span></span><br></pre></td></tr></table></figure>

<h3 id="快速找到錨點的小步驟"><a href="#快速找到錨點的小步驟" class="headerlink" title="快速找到錨點的小步驟"></a>快速找到錨點的小步驟</h3><p>如果你是用來寫 blog 文章，建議可以 localhost 後直接點標題(圖片中的 1)，就可以看到 url 上有錨點(圖片中的二)，就可以直接貼在 markdown 中，是不是很方便呢！<br><img src="/images/markdown-anchor/1.PNG" alt=""></p>
<h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><p><a href="https://www.jishuwen.com/d/2uT8/zh-tw" target="_blank" rel="noopener">Github markdown 錨點</a></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>畢竟 markdown 要是沒有錨點，那 markdown 在寫那種比較長的文章就相對吃力拉，幸好有錨點，也謝謝 markdown 的發明團隊們可以讓我在寫文章時減少撰寫網頁的麻煩。</p>
<p>也謝謝 Clloz 大大在網路上分享此技術，讓英文不好的我也可以快速學習，非常謝謝他。</p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>學習筆記</tag>
        <tag>人生旅途</tag>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
